{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport axios from \"axios\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { API_URL } from \"../config/environment\";\nexport var getCollaborativeDeliveryDetails = function () {\n  var _ref = _asyncToGenerator(function* (deliveryId) {\n    var response = yield api.get(\"/api/courier/collaborative-deliveries/\" + deliveryId);\n    return response.data;\n  });\n  return function getCollaborativeDeliveryDetails(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var getCollaborativeDeliveryChatHistory = function () {\n  var _ref2 = _asyncToGenerator(function* (deliveryId) {\n    var response = yield api.get(\"/api/courier/collaborative-deliveries/\" + deliveryId + \"/messages\");\n    return response.data;\n  });\n  return function getCollaborativeDeliveryChatHistory(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var sendCollaborativeDeliveryMessage = function () {\n  var _ref3 = _asyncToGenerator(function* (deliveryId, message) {\n    var response = yield api.post(\"/api/courier/collaborative-deliveries/\" + deliveryId + \"/message\", {\n      message: message\n    });\n    return response.data;\n  });\n  return function sendCollaborativeDeliveryMessage(_x3, _x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nvar api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\napi.interceptors.request.use(function () {\n  var _ref4 = _asyncToGenerator(function* (config) {\n    var token = yield AsyncStorage.getItem(\"token\");\n    if (token) {\n      config.headers.Authorization = \"Bearer \" + token;\n    }\n    return config;\n  });\n  return function (_x5) {\n    return _ref4.apply(this, arguments);\n  };\n}(), function (error) {\n  return Promise.reject(error);\n});\napi.interceptors.response.use(function (response) {\n  return response;\n}, function () {\n  var _ref5 = _asyncToGenerator(function* (error) {\n    var _error$response;\n    var originalRequest = error.config;\n    if (((_error$response = error.response) == null ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n      originalRequest._retry = true;\n      try {\n        var refreshToken = yield AsyncStorage.getItem(\"refreshToken\");\n        if (!refreshToken) {\n          yield AsyncStorage.removeItem(\"token\");\n          yield AsyncStorage.removeItem(\"user\");\n          return Promise.reject(error);\n        }\n        var response = yield axios.post(API_URL + \"/auth/refresh\", {\n          refresh_token: refreshToken\n        });\n        var _response$data = response.data,\n          access_token = _response$data.access_token,\n          refresh_token = _response$data.refresh_token;\n        yield AsyncStorage.setItem(\"token\", access_token);\n        yield AsyncStorage.setItem(\"refreshToken\", refresh_token);\n        originalRequest.headers.Authorization = \"Bearer \" + access_token;\n        return api(originalRequest);\n      } catch (refreshError) {\n        yield AsyncStorage.removeItem(\"token\");\n        yield AsyncStorage.removeItem(\"refreshToken\");\n        yield AsyncStorage.removeItem(\"user\");\n        return Promise.reject(refreshError);\n      }\n    }\n    return Promise.reject(error);\n  });\n  return function (_x6) {\n    return _ref5.apply(this, arguments);\n  };\n}());\nexport var loginWithOTP = function () {\n  var _ref6 = _asyncToGenerator(function* (phone, otp) {\n    try {\n      var response = yield api.post(\"/api/auth/verify-otp\", {\n        phone: phone,\n        code: otp,\n        otp_type: \"login\"\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data.success && response.data.token) {\n        var access_token = response.data.token;\n        api.defaults.headers.common['Authorization'] = \"Bearer \" + access_token;\n        return {\n          token: access_token,\n          user: response.data.user\n        };\n      } else {\n        throw new Error(\"Échec de la vérification OTP\");\n      }\n    } catch (error) {\n      var _error$response2;\n      console.error(\"OTP Login error:\", error);\n      if (axios.isAxiosError(error) && ((_error$response2 = error.response) == null ? void 0 : _error$response2.status) === 401) {\n        throw new Error(\"Code OTP invalide ou expiré\");\n      }\n      throw new Error(\"Erreur de connexion avec OTP\");\n    }\n  });\n  return function loginWithOTP(_x7, _x8) {\n    return _ref6.apply(this, arguments);\n  };\n}();\nexport var login = function () {\n  var _ref7 = _asyncToGenerator(function* (phone, password) {\n    try {\n      var response = yield api.post(\"/api/auth/login\", {\n        phone: phone,\n        password: password\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      var access_token = response.data.access_token;\n      api.defaults.headers.common['Authorization'] = \"Bearer \" + access_token;\n      var userResponse = yield api.get(\"/api/users/me\");\n      return {\n        token: access_token,\n        user: userResponse.data\n      };\n    } catch (error) {\n      var _error$response3;\n      console.error(\"Login error:\", error);\n      if (axios.isAxiosError(error) && ((_error$response3 = error.response) == null ? void 0 : _error$response3.status) === 401) {\n        throw new Error(\"Identifiants invalides\");\n      }\n      throw new Error(\"Erreur de connexion\");\n    }\n  });\n  return function login(_x9, _x0) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var register = function () {\n  var _ref8 = _asyncToGenerator(function* (userData) {\n    try {\n      var response = yield api.post(\"/api/auth/register\", userData);\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error(\"Registration error:\", error);\n      if (axios.isAxiosError(error) && (_error$response4 = error.response) != null && (_error$response4$data = _error$response4.data) != null && _error$response4$data.detail) {\n        throw new Error(error.response.data.detail);\n      }\n      throw new Error(\"Erreur d'inscription\");\n    }\n  });\n  return function register(_x1) {\n    return _ref8.apply(this, arguments);\n  };\n}();\nexport var verifyToken = function () {\n  var _ref9 = _asyncToGenerator(function* (token) {\n    try {\n      var response = yield api.post(\"/auth/verify-token\", {\n        token: token\n      });\n      return response.status === 200;\n    } catch (error) {\n      console.error(\"Token verification error:\", error);\n      return false;\n    }\n  });\n  return function verifyToken(_x10) {\n    return _ref9.apply(this, arguments);\n  };\n}();\nexport var verifyOTP = function () {\n  var _ref0 = _asyncToGenerator(function* (phone, otp) {\n    try {\n      var response = yield api.post(\"/api/auth/verify-otp\", {\n        phone: phone,\n        code: otp,\n        otp_type: \"login\"\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error(\"OTP verification error:\", error);\n      if (axios.isAxiosError(error) && (_error$response5 = error.response) != null && (_error$response5$data = _error$response5.data) != null && _error$response5$data.detail) {\n        throw new Error(error.response.data.detail);\n      }\n      throw new Error(\"Erreur de vérification OTP\");\n    }\n  });\n  return function verifyOTP(_x11, _x12) {\n    return _ref0.apply(this, arguments);\n  };\n}();\nexport var sendOTP = function () {\n  var _ref1 = _asyncToGenerator(function* (phone) {\n    var otpType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'login';\n    try {\n      var response = yield api.post(\"/api/auth/send-otp\", {\n        phone: phone,\n        otp_type: otpType\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      console.error(\"OTP send error:\", error);\n      if (axios.isAxiosError(error) && (_error$response6 = error.response) != null && (_error$response6$data = _error$response6.data) != null && _error$response6$data.detail) {\n        throw new Error(error.response.data.detail);\n      }\n      throw new Error(\"Erreur d'envoi OTP\");\n    }\n  });\n  return function sendOTP(_x13) {\n    return _ref1.apply(this, arguments);\n  };\n}();\nexport var resendOTP = function () {\n  var _ref10 = _asyncToGenerator(function* (phone) {\n    var otpType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'login';\n    try {\n      var response = yield api.post(\"/api/auth/resend-otp\", {\n        phone: phone,\n        otp_type: otpType\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response7, _error$response7$data;\n      console.error(\"OTP resend error:\", error);\n      if (axios.isAxiosError(error) && (_error$response7 = error.response) != null && (_error$response7$data = _error$response7.data) != null && _error$response7$data.detail) {\n        throw new Error(error.response.data.detail);\n      }\n      throw new Error(\"Erreur d'envoi OTP\");\n    }\n  });\n  return function resendOTP(_x14) {\n    return _ref10.apply(this, arguments);\n  };\n}();\nexport var resetPassword = function () {\n  var _ref11 = _asyncToGenerator(function* (phone) {\n    var response = yield api.post(\"/api/auth/reset-password\", {\n      phone: phone\n    });\n    return response.data;\n  });\n  return function resetPassword(_x15) {\n    return _ref11.apply(this, arguments);\n  };\n}();\nexport var getUserProfile = function () {\n  var _ref12 = _asyncToGenerator(function* () {\n    var response = yield api.get(\"/api/users/me\");\n    return response.data;\n  });\n  return function getUserProfile() {\n    return _ref12.apply(this, arguments);\n  };\n}();\nexport var updateUserProfile = function () {\n  var _ref13 = _asyncToGenerator(function* (userData) {\n    var response = yield api.put(\"/api/users/me\", userData);\n    return response.data;\n  });\n  return function updateUserProfile(_x16) {\n    return _ref13.apply(this, arguments);\n  };\n}();\nexport var uploadProfilePicture = function () {\n  var _ref14 = _asyncToGenerator(function* (formData) {\n    var token = yield AsyncStorage.getItem(\"authToken\");\n    var response = yield api.post(\"/api/users/me/profile-picture\", formData, {\n      headers: {\n        Authorization: \"Bearer \" + token,\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  });\n  return function uploadProfilePicture(_x17) {\n    return _ref14.apply(this, arguments);\n  };\n}();\nexport var uploadProfileImage = uploadProfilePicture;\nexport var registerPushToken = function () {\n  var _ref15 = _asyncToGenerator(function* (token, userId) {\n    var response = yield api.post(\"/api/users/push-token\", {\n      token: token,\n      user_id: userId\n    });\n    return response.data;\n  });\n  return function registerPushToken(_x18, _x19) {\n    return _ref15.apply(this, arguments);\n  };\n}();\nexport var geocodeAddress = function () {\n  var _ref16 = _asyncToGenerator(function* (address) {\n    var response = yield api.get(\"/api/traffic/geocode?address=\" + encodeURIComponent(address));\n    return response.data;\n  });\n  return function geocodeAddress(_x20) {\n    return _ref16.apply(this, arguments);\n  };\n}();\nexport var getRecommendedPrice = function () {\n  var _ref17 = _asyncToGenerator(function* (data) {\n    var payload = _objectSpread({}, data);\n    if (typeof payload.weather_condition === \"string\") {\n      var conditionMap = {\n        sunny: 1000,\n        rainy: 1003,\n        cloudy: 1006,\n        partly_cloudy: 1009\n      };\n      payload.weather_condition = conditionMap[payload.weather_condition.toLowerCase()] || 1000;\n    }\n    var response = yield api.post(\"/api/deliveries/price-estimate\", payload);\n    return response.data;\n  });\n  return function getRecommendedPrice(_x21) {\n    return _ref17.apply(this, arguments);\n  };\n}();\nexport var createDelivery = function () {\n  var _ref18 = _asyncToGenerator(function* (deliveryData) {\n    var response = yield api.post(\"/api/deliveries\", deliveryData);\n    return response.data;\n  });\n  return function createDelivery(_x22) {\n    return _ref18.apply(this, arguments);\n  };\n}();\nexport var fetchDeliveryDetails = function () {\n  var _ref19 = _asyncToGenerator(function* (deliveryId) {\n    var response = yield api.get(\"/api/deliveries/\" + deliveryId);\n    return response.data;\n  });\n  return function fetchDeliveryDetails(_x23) {\n    return _ref19.apply(this, arguments);\n  };\n}();\nexport var getBidsForDelivery = function () {\n  var _ref20 = _asyncToGenerator(function* (deliveryId) {\n    var response = yield api.get(\"/api/deliveries/\" + deliveryId + \"/bids\");\n    return response.data;\n  });\n  return function getBidsForDelivery(_x24) {\n    return _ref20.apply(this, arguments);\n  };\n}();\nexport var acceptBid = function () {\n  var _ref21 = _asyncToGenerator(function* (bidId, deliveryId) {\n    var targetDeliveryId = deliveryId;\n    if (!targetDeliveryId) {\n      var bidDetails = yield api.get(\"/api/deliveries/bids/\" + bidId);\n      targetDeliveryId = bidDetails.data.delivery_id;\n    }\n    var response = yield api.post(\"/api/deliveries/\" + targetDeliveryId + \"/bids/\" + bidId + \"/accept\");\n    return response.data;\n  });\n  return function acceptBid(_x25, _x26) {\n    return _ref21.apply(this, arguments);\n  };\n}();\nexport var rejectBid = function () {\n  var _ref22 = _asyncToGenerator(function* (bidId, deliveryId) {\n    var targetDeliveryId = deliveryId;\n    if (!targetDeliveryId) {\n      var bidDetails = yield api.get(\"/api/deliveries/bids/\" + bidId);\n      targetDeliveryId = bidDetails.data.delivery_id;\n    }\n    var response = yield api.post(\"/api/deliveries/\" + targetDeliveryId + \"/bids/\" + bidId + \"/reject\");\n    return response.data;\n  });\n  return function rejectBid(_x27, _x28) {\n    return _ref22.apply(this, arguments);\n  };\n}();\nexport var fetchDeliveryBids = function () {\n  var _ref23 = _asyncToGenerator(function* (deliveryId) {\n    var response = yield api.get(\"/api/deliveries/\" + deliveryId + \"/bids\");\n    var bidsWithCourierPromises = response.data.map(function () {\n      var _ref24 = _asyncToGenerator(function* (bid) {\n        try {\n          var courierResponse = yield api.get(\"/api/users/\" + bid.courier_id);\n          return _objectSpread(_objectSpread({}, bid), {}, {\n            courier: courierResponse.data\n          });\n        } catch (error) {\n          console.error(\"Erreur lors de la r\\xE9cup\\xE9ration du coursier pour l'offre \" + bid.id + \":\", error);\n          return _objectSpread(_objectSpread({}, bid), {}, {\n            courier: {\n              id: bid.courier_id,\n              full_name: \"Unknown\",\n              phone: \"\",\n              rating: 0\n            }\n          });\n        }\n      });\n      return function (_x30) {\n        return _ref24.apply(this, arguments);\n      };\n    }());\n    var bidsWithCourier = yield Promise.all(bidsWithCourierPromises);\n    return bidsWithCourier;\n  });\n  return function fetchDeliveryBids(_x29) {\n    return _ref23.apply(this, arguments);\n  };\n}();\nexport var createBid = function () {\n  var _ref25 = _asyncToGenerator(function* (bidData) {\n    var response = yield api.post(\"/api/bids\", bidData);\n    return response.data;\n  });\n  return function createBid(_x31) {\n    return _ref25.apply(this, arguments);\n  };\n}();\nexport var bidForDelivery = function () {\n  var _ref26 = _asyncToGenerator(function* (deliveryId, amount) {\n    var response = yield api.post(\"/api/deliveries/\" + deliveryId + \"/bid\", {\n      amount: amount\n    });\n    return response.data;\n  });\n  return function bidForDelivery(_x32, _x33) {\n    return _ref26.apply(this, arguments);\n  };\n}();\nexport var getCourierLocation = function () {\n  var _ref27 = _asyncToGenerator(function* (deliveryId) {\n    var response = yield api.get(\"/api/deliveries/\" + deliveryId + \"/courier-location\");\n    return response.data;\n  });\n  return function getCourierLocation(_x34) {\n    return _ref27.apply(this, arguments);\n  };\n}();\nexport var updateDeliveryStatus = function () {\n  var _ref28 = _asyncToGenerator(function* (deliveryId, status) {\n    var response = yield api.put(\"/api/deliveries/\" + deliveryId + \"/status\", {\n      status: status\n    });\n    return response.data;\n  });\n  return function updateDeliveryStatus(_x35, _x36) {\n    return _ref28.apply(this, arguments);\n  };\n}();\nexport var cancelDelivery = function () {\n  var _ref29 = _asyncToGenerator(function* (deliveryId) {\n    var response = yield api.post(\"/api/deliveries/\" + deliveryId + \"/cancel\");\n    return response.data;\n  });\n  return function cancelDelivery(_x37) {\n    return _ref29.apply(this, arguments);\n  };\n}();\nexport var getTrafficInfo = function () {\n  var _ref30 = _asyncToGenerator(function* (startLat, startLng, endLat, endLng) {\n    var response = yield api.get(\"/api/geo/traffic?startLat=\" + startLat + \"&startLng=\" + startLng + \"&endLat=\" + endLat + \"&endLng=\" + endLng);\n    return response.data;\n  });\n  return function getTrafficInfo(_x38, _x39, _x40, _x41) {\n    return _ref30.apply(this, arguments);\n  };\n}();\nexport var submitRating = function () {\n  var _ref31 = _asyncToGenerator(function* (ratingData) {\n    var response = yield api.post(\"/api/ratings\", ratingData);\n    return response.data;\n  });\n  return function submitRating(_x42) {\n    return _ref31.apply(this, arguments);\n  };\n}();\nexport var initiatePayment = function () {\n  var _ref32 = _asyncToGenerator(function* (paymentData) {\n    var response = yield api.post(\"/api/payments/initiate\", paymentData);\n    return response.data;\n  });\n  return function initiatePayment(_x43) {\n    return _ref32.apply(this, arguments);\n  };\n}();\nexport var verifyPayment = function () {\n  var _ref33 = _asyncToGenerator(function* (verificationData) {\n    var response = yield api.post(\"/api/payments/verify\", verificationData);\n    return response.data;\n  });\n  return function verifyPayment(_x44) {\n    return _ref33.apply(this, arguments);\n  };\n}();\nexport var fetchNearbyMerchants = function () {\n  var _ref34 = _asyncToGenerator(function* (commune, category) {\n    var url = \"/merchants/nearby\";\n    var params = [];\n    if (commune) params.push(\"commune=\" + encodeURIComponent(commune));\n    if (category) params.push(\"category=\" + encodeURIComponent(category));\n    if (params.length > 0) {\n      url += \"?\" + params.join(\"&\");\n    }\n    var response = yield api.get(url);\n    return response.data;\n  });\n  return function fetchNearbyMerchants(_x45, _x46) {\n    return _ref34.apply(this, arguments);\n  };\n}();\nexport var fetchMerchantDetails = function () {\n  var _ref35 = _asyncToGenerator(function* (merchantId) {\n    var response = yield api.get(\"/api/market/merchants/\" + merchantId);\n    return response.data;\n  });\n  return function fetchMerchantDetails(_x47) {\n    return _ref35.apply(this, arguments);\n  };\n}();\nexport var fetchMerchantProducts = function () {\n  var _ref36 = _asyncToGenerator(function* (merchantId) {\n    var response = yield api.get(\"/api/market/merchants/\" + merchantId + \"/products\");\n    return response.data;\n  });\n  return function fetchMerchantProducts(_x48) {\n    return _ref36.apply(this, arguments);\n  };\n}();\nexport var fetchCourierEarnings = function () {\n  var _ref37 = _asyncToGenerator(function* () {\n    var period = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"month\";\n    var response = yield api.get(\"/api/courier/earnings?period=\" + period);\n    return response.data;\n  });\n  return function fetchCourierEarnings() {\n    return _ref37.apply(this, arguments);\n  };\n}();\nexport var withdrawFunds = function () {\n  var _ref38 = _asyncToGenerator(function* (amount) {\n    var response = yield api.post(\"/api/courier/withdraw\", {\n      amount: amount\n    });\n    return response.data;\n  });\n  return function withdrawFunds(_x49) {\n    return _ref38.apply(this, arguments);\n  };\n}();\nexport var fetchCourierProfile = function () {\n  var _ref39 = _asyncToGenerator(function* () {\n    var response = yield api.get(\"/api/courier/profile\");\n    return response.data;\n  });\n  return function fetchCourierProfile() {\n    return _ref39.apply(this, arguments);\n  };\n}();\nexport var updateCourierStatus = function () {\n  var _ref40 = _asyncToGenerator(function* (isOnline, lat, lng) {\n    var data = {\n      is_online: isOnline\n    };\n    if (lat !== null && lng !== null && lat !== undefined && lng !== undefined) {\n      data.location = {\n        lat: lat,\n        lng: lng\n      };\n    }\n    var response = yield api.post(\"/api/courier/status\", data);\n    return response.data;\n  });\n  return function updateCourierStatus(_x50, _x51, _x52) {\n    return _ref40.apply(this, arguments);\n  };\n}();\nexport var fetchCourierStats = function () {\n  var _ref41 = _asyncToGenerator(function* () {\n    var period = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"month\";\n    var response = yield api.get(\"/api/courier/stats?period=\" + period);\n    return response.data;\n  });\n  return function fetchCourierStats() {\n    return _ref41.apply(this, arguments);\n  };\n}();\nexport var fetchCourierRatings = function () {\n  var _ref42 = _asyncToGenerator(function* () {\n    var period = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"month\";\n    var response = yield api.get(\"/api/courier/ratings?period=\" + period);\n    return response.data;\n  });\n  return function fetchCourierRatings() {\n    return _ref42.apply(this, arguments);\n  };\n}();\nexport var fetchCollaborativeDeliveries = function () {\n  var _ref43 = _asyncToGenerator(function* () {\n    var response = yield api.get(\"/api/courier/collaborative-deliveries\");\n    return response.data;\n  });\n  return function fetchCollaborativeDeliveries() {\n    return _ref43.apply(this, arguments);\n  };\n}();\nexport var joinCollaborativeDelivery = function () {\n  var _ref44 = _asyncToGenerator(function* (deliveryId, data) {\n    var response = yield api.post(\"/api/courier/collaborative-deliveries/\" + deliveryId + \"/join\", data);\n    return response.data;\n  });\n  return function joinCollaborativeDelivery(_x53, _x54) {\n    return _ref44.apply(this, arguments);\n  };\n}();\nexport var sendTrackingPoint = function () {\n  var _ref45 = _asyncToGenerator(function* (data) {\n    var response = yield api.post(\"/api/tracking/point\", data);\n    return response.data;\n  });\n  return function sendTrackingPoint(_x55) {\n    return _ref45.apply(this, arguments);\n  };\n}();\nexport var getDirections = function () {\n  var _ref46 = _asyncToGenerator(function* (startLat, startLng, endLat, endLng) {\n    var response = yield api.get(\"/api/directions?start_lat=\" + startLat + \"&start_lng=\" + startLng + \"&end_lat=\" + endLat + \"&end_lng=\" + endLng);\n    return response.data;\n  });\n  return function getDirections(_x56, _x57, _x58, _x59) {\n    return _ref46.apply(this, arguments);\n  };\n}();\nexport var sendDeliveryNotification = function () {\n  var _ref47 = _asyncToGenerator(function* (userId, notification) {\n    var response = yield api.post(\"/api/notifications/user/\" + userId, notification);\n    return response.data;\n  });\n  return function sendDeliveryNotification(_x60, _x61) {\n    return _ref47.apply(this, arguments);\n  };\n}();\nexport var fetchClientDeliveryHistory = function () {\n  var _ref48 = _asyncToGenerator(function* (filter) {\n    var url = \"/api/client/deliveries/history\";\n    if (filter) {\n      url += \"?status=\" + filter;\n    }\n    var response = yield api.get(url);\n    return response.data;\n  });\n  return function fetchClientDeliveryHistory(_x62) {\n    return _ref48.apply(this, arguments);\n  };\n}();\nexport var fetchCourierDeliveryHistory = function () {\n  var _ref49 = _asyncToGenerator(function* (filter) {\n    var url = \"/api/courier/deliveries/history\";\n    if (filter) {\n      url += \"?status=\" + filter;\n    }\n    var response = yield api.get(url);\n    return response.data;\n  });\n  return function fetchCourierDeliveryHistory(_x63) {\n    return _ref49.apply(this, arguments);\n  };\n}();\nexport var fetchAvailableDeliveries = function () {\n  var _ref50 = _asyncToGenerator(function* (commune) {\n    var url = \"/api/courier/deliveries/available\";\n    if (commune) {\n      url += \"?commune=\" + encodeURIComponent(commune);\n    }\n    var response = yield api.get(url);\n    return response.data;\n  });\n  return function fetchAvailableDeliveries(_x64) {\n    return _ref50.apply(this, arguments);\n  };\n}();\nexport var fetchActiveDeliveries = function () {\n  var _ref51 = _asyncToGenerator(function* () {\n    var response = yield api.get(\"/api/client/deliveries/active\");\n    return response.data;\n  });\n  return function fetchActiveDeliveries() {\n    return _ref51.apply(this, arguments);\n  };\n}();\nexport var fetchWeatherForecast = function () {\n  var _ref52 = _asyncToGenerator(function* (latitude, longitude, commune) {\n    var url = \"/api/weather?lat=\" + latitude + \"&lng=\" + longitude;\n    if (commune) {\n      url += \"&commune=\" + encodeURIComponent(commune);\n    }\n    var response = yield api.get(url);\n    var data = response.data;\n    if (data.current && data.current.condition && typeof data.current.condition === \"object\") {\n      data.current.condition = data.current.condition.text || \"unknown\";\n    }\n    return data;\n  });\n  return function fetchWeatherForecast(_x65, _x66, _x67) {\n    return _ref52.apply(this, arguments);\n  };\n}();\nexport var fetchWeatherAlerts = function () {\n  var _ref53 = _asyncToGenerator(function* (latitude, longitude, commune) {\n    var url = \"/api/weather/alerts?lat=\" + latitude + \"&lng=\" + longitude;\n    if (commune) {\n      url += \"&commune=\" + encodeURIComponent(commune);\n    }\n    var response = yield api.get(url);\n    return response.data;\n  });\n  return function fetchWeatherAlerts(_x68, _x69, _x70) {\n    return _ref53.apply(this, arguments);\n  };\n}();\nexport var transcribeVoiceRating = function () {\n  var _ref54 = _asyncToGenerator(function* (audioBase64) {\n    var response = yield api.post(\"/api/ratings/transcribe\", {\n      audio: audioBase64\n    });\n    return response.data;\n  });\n  return function transcribeVoiceRating(_x71) {\n    return _ref54.apply(this, arguments);\n  };\n}();\nexport var processVoiceCommand = function () {\n  var _ref55 = _asyncToGenerator(function* (audioBase64) {\n    var response = yield api.post(\"/api/assistant/voice\", {\n      audio: audioBase64\n    });\n    return response.data;\n  });\n  return function processVoiceCommand(_x72) {\n    return _ref55.apply(this, arguments);\n  };\n}();\nexport var getChatbotResponse = function () {\n  var _ref56 = _asyncToGenerator(function* (message) {\n    var response = yield api.post(\"/api/assistant/chat\", {\n      message: message\n    });\n    return response.data;\n  });\n  return function getChatbotResponse(_x73) {\n    return _ref56.apply(this, arguments);\n  };\n}();\nexport var getVehicleRecommendation = function () {\n  var _ref57 = _asyncToGenerator(function* (data) {\n    var response = yield api.post(\"/api/transport/recommend\", data);\n    return response.data;\n  });\n  return function getVehicleRecommendation(_x74) {\n    return _ref57.apply(this, arguments);\n  };\n}();\nexport var fetchGamificationProfile = function () {\n  var _ref58 = _asyncToGenerator(function* () {\n    var response = yield api.get(\"/api/gamification/profile\");\n    return response.data;\n  });\n  return function fetchGamificationProfile() {\n    return _ref58.apply(this, arguments);\n  };\n}();\nexport var fetchRankings = function () {\n  var _ref59 = _asyncToGenerator(function* (commune) {\n    var url = \"/api/gamification/rankings\";\n    if (commune) {\n      url += \"?commune=\" + encodeURIComponent(commune);\n    }\n    var response = yield api.get(url);\n    return response.data;\n  });\n  return function fetchRankings(_x75) {\n    return _ref59.apply(this, arguments);\n  };\n}();\nexport var claimReward = function () {\n  var _ref60 = _asyncToGenerator(function* (rewardId) {\n    var response = yield api.post(\"/api/gamification/rewards/\" + rewardId + \"/claim\");\n    return response.data;\n  });\n  return function claimReward(_x76) {\n    return _ref60.apply(this, arguments);\n  };\n}();\nexport var fetchWalletBalance = function () {\n  var _ref61 = _asyncToGenerator(function* () {\n    var response = yield api.get(\"/api/community-wallet/balance\");\n    return response.data;\n  });\n  return function fetchWalletBalance() {\n    return _ref61.apply(this, arguments);\n  };\n}();\nexport var fetchWalletTransactions = function () {\n  var _ref62 = _asyncToGenerator(function* (type) {\n    var url = \"/api/community-wallet/transactions\";\n    if (type) {\n      url += \"?type=\" + type;\n    }\n    var response = yield api.get(url);\n    return response.data;\n  });\n  return function fetchWalletTransactions(_x77) {\n    return _ref62.apply(this, arguments);\n  };\n}();\nexport var requestLoan = function () {\n  var _ref63 = _asyncToGenerator(function* (amount, reason) {\n    var response = yield api.post(\"/api/community-wallet/loans/request\", {\n      amount: amount,\n      reason: reason\n    });\n    return response.data;\n  });\n  return function requestLoan(_x78, _x79) {\n    return _ref63.apply(this, arguments);\n  };\n}();\nexport var repayLoan = function () {\n  var _ref64 = _asyncToGenerator(function* (loanId) {\n    var response = yield api.post(\"/api/community-wallet/loans/\" + loanId + \"/repay\");\n    return response.data;\n  });\n  return function repayLoan(_x80) {\n    return _ref64.apply(this, arguments);\n  };\n}();\nexport var fetchActiveLoan = function () {\n  var _ref65 = _asyncToGenerator(function* () {\n    var response = yield api.get(\"/api/community-wallet/loans/active\");\n    return response.data;\n  });\n  return function fetchActiveLoan() {\n    return _ref65.apply(this, arguments);\n  };\n}();\nexport var fetchLoanHistory = function () {\n  var _ref66 = _asyncToGenerator(function* () {\n    var response = yield api.get(\"/api/community-wallet/loans/history\");\n    return response.data;\n  });\n  return function fetchLoanHistory() {\n    return _ref66.apply(this, arguments);\n  };\n}();\nexport var fetchSupportTickets = function () {\n  var _ref67 = _asyncToGenerator(function* () {\n    var response = yield api.get(\"/api/support/tickets\");\n    return response.data;\n  });\n  return function fetchSupportTickets() {\n    return _ref67.apply(this, arguments);\n  };\n}();\nexport var createSupportTicket = function () {\n  var _ref68 = _asyncToGenerator(function* (subject, message) {\n    var response = yield api.post(\"/api/support/tickets\", {\n      subject: subject,\n      message: message\n    });\n    return response.data;\n  });\n  return function createSupportTicket(_x81, _x82) {\n    return _ref68.apply(this, arguments);\n  };\n}();\nexport var addMessageToTicket = function () {\n  var _ref69 = _asyncToGenerator(function* (ticketId, message) {\n    var response = yield api.post(\"/api/support/tickets/\" + ticketId + \"/messages\", {\n      message: message\n    });\n    return response.data;\n  });\n  return function addMessageToTicket(_x83, _x84) {\n    return _ref69.apply(this, arguments);\n  };\n}();\nexport var uploadTicketImage = function () {\n  var _ref70 = _asyncToGenerator(function* (ticketId, imageUri) {\n    var formData = new FormData();\n    var filename = imageUri.split(\"/\").pop();\n    var match = /\\.(\\w+)$/.exec(filename || \"\");\n    var type = match ? \"image/\" + match[1] : \"image\";\n    formData.append(\"image\", {\n      uri: imageUri,\n      name: filename,\n      type: type\n    });\n    var response = yield api.post(\"/api/support/tickets/\" + ticketId + \"/attachments\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response.data;\n  });\n  return function uploadTicketImage(_x85, _x86) {\n    return _ref70.apply(this, arguments);\n  };\n}();\nexport var fetchFAQs = function () {\n  var _ref71 = _asyncToGenerator(function* () {\n    var response = yield api.get(\"/api/support/faqs\");\n    return response.data;\n  });\n  return function fetchFAQs() {\n    return _ref71.apply(this, arguments);\n  };\n}();\nexport var getWeatherData = function () {\n  var _ref72 = _asyncToGenerator(function* (latitude, longitude, commune) {\n    try {\n      var cacheKey = \"weather_\" + latitude + \"_\" + longitude + (commune ? \"_\" + commune : \"\");\n      var cachedData = yield AsyncStorage.getItem(cacheKey);\n      var cacheTimestamp = yield AsyncStorage.getItem(cacheKey + \"_timestamp\");\n      var cacheDuration = 10 * 60 * 1000;\n      if (cachedData && cacheTimestamp && Date.now() - Number.parseInt(cacheTimestamp) < cacheDuration) {\n        return JSON.parse(cachedData);\n      }\n      var params = new URLSearchParams({\n        lat: latitude.toString(),\n        lng: longitude.toString()\n      });\n      if (commune) {\n        params.append(\"commune\", commune);\n      }\n      var url = \"/api/weather?\" + params.toString();\n      var response = yield api.get(url);\n      var weatherData = response.data;\n      if (weatherData.current && weatherData.current.condition && typeof weatherData.current.condition === \"object\") {\n        weatherData.current.condition = weatherData.current.condition.text || \"unknown\";\n      }\n      if (!weatherData.current || typeof weatherData.current.temperature !== \"number\" || typeof weatherData.current.condition !== \"string\") {\n        throw new Error(\"Invalid weather data format\");\n      }\n      yield AsyncStorage.setItem(cacheKey, JSON.stringify(weatherData));\n      yield AsyncStorage.setItem(cacheKey + \"_timestamp\", Date.now().toString());\n      return weatherData;\n    } catch (error) {\n      console.error(\"Error fetching weather data:\", error);\n      var _cachedData = yield AsyncStorage.getItem(\"weather_\" + latitude + \"_\" + longitude + (commune ? \"_\" + commune : \"\"));\n      if (_cachedData) {\n        return JSON.parse(_cachedData);\n      }\n      throw new Error(\"Failed to fetch weather data and no cached data available\");\n    }\n  });\n  return function getWeatherData(_x87, _x88, _x89) {\n    return _ref72.apply(this, arguments);\n  };\n}();\nexport var clearApiCache = function () {\n  var _ref73 = _asyncToGenerator(function* () {\n    try {\n      var keys = yield AsyncStorage.getAllKeys();\n      var cacheKeys = keys.filter(function (key) {\n        return key.startsWith(\"api_cache_\");\n      });\n      yield AsyncStorage.multiRemove(cacheKeys);\n      return true;\n    } catch (error) {\n      console.error(\"Error clearing API cache:\", error);\n      return false;\n    }\n  });\n  return function clearApiCache() {\n    return _ref73.apply(this, arguments);\n  };\n}();\nexport var getActivePromotions = function () {\n  var _ref74 = _asyncToGenerator(function* () {\n    var response = yield api.get(\"/api/v1/promotions/active\");\n    return response.data;\n  });\n  return function getActivePromotions() {\n    return _ref74.apply(this, arguments);\n  };\n}();\nexport var getApplicablePromotions = function () {\n  var _ref75 = _asyncToGenerator(function* (orderValue, zoneId) {\n    var params = {\n      order_value: orderValue\n    };\n    if (zoneId) params.zone_id = zoneId;\n    var response = yield api.get(\"/api/v1/promotions/applicable\", {\n      params: params\n    });\n    return response.data;\n  });\n  return function getApplicablePromotions(_x90, _x91) {\n    return _ref75.apply(this, arguments);\n  };\n}();\nexport var validatePromotionCode = function () {\n  var _ref76 = _asyncToGenerator(function* (code, orderValue) {\n    var response = yield api.post(\"/api/v1/promotions/validate-code\", {\n      code: code,\n      order_value: orderValue\n    });\n    return response.data;\n  });\n  return function validatePromotionCode(_x92, _x93) {\n    return _ref76.apply(this, arguments);\n  };\n}();\nexport var applyPromotionToDelivery = function () {\n  var _ref77 = _asyncToGenerator(function* (deliveryId, promotionId) {\n    var response = yield api.post(\"/api/v1/deliveries/\" + deliveryId + \"/apply-promotion\", {\n      promotion_id: promotionId\n    });\n    return response.data;\n  });\n  return function applyPromotionToDelivery(_x94, _x95) {\n    return _ref77.apply(this, arguments);\n  };\n}();\nexport var getDeliveryZones = function () {\n  var _ref78 = _asyncToGenerator(function* (lat, lng) {\n    var response = yield api.get(\"/api/v1/zones/locate\", {\n      params: {\n        lat: lat,\n        lng: lng\n      }\n    });\n    return response.data;\n  });\n  return function getDeliveryZones(_x96, _x97) {\n    return _ref78.apply(this, arguments);\n  };\n}();\nexport var calculateZonePrice = function () {\n  var _ref79 = _asyncToGenerator(function* (pickupLat, pickupLng, deliveryLat, deliveryLng, packageWeight) {\n    var isExpress = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n    var response = yield api.post(\"/api/v1/zones/calculate-price\", {\n      pickup_lat: pickupLat,\n      pickup_lng: pickupLng,\n      delivery_lat: deliveryLat,\n      delivery_lng: deliveryLng,\n      package_weight: packageWeight,\n      is_express: isExpress\n    });\n    return response.data;\n  });\n  return function calculateZonePrice(_x98, _x99, _x100, _x101, _x102) {\n    return _ref79.apply(this, arguments);\n  };\n}();\nexport default api;\nexport { api };","map":{"version":3,"names":["axios","AsyncStorage","API_URL","getCollaborativeDeliveryDetails","_ref","_asyncToGenerator","deliveryId","response","api","get","data","_x","apply","arguments","getCollaborativeDeliveryChatHistory","_ref2","_x2","sendCollaborativeDeliveryMessage","_ref3","message","post","_x3","_x4","create","baseURL","headers","interceptors","request","use","_ref4","config","token","getItem","Authorization","_x5","error","Promise","reject","_ref5","_error$response","originalRequest","status","_retry","refreshToken","removeItem","refresh_token","_response$data","access_token","setItem","refreshError","_x6","loginWithOTP","_ref6","phone","otp","code","otp_type","success","defaults","common","user","Error","_error$response2","console","isAxiosError","_x7","_x8","login","_ref7","password","userResponse","_error$response3","_x9","_x0","register","_ref8","userData","_error$response4","_error$response4$data","detail","_x1","verifyToken","_ref9","_x10","verifyOTP","_ref0","_error$response5","_error$response5$data","_x11","_x12","sendOTP","_ref1","otpType","length","undefined","_error$response6","_error$response6$data","_x13","resendOTP","_ref10","_error$response7","_error$response7$data","_x14","resetPassword","_ref11","_x15","getUserProfile","_ref12","updateUserProfile","_ref13","put","_x16","uploadProfilePicture","_ref14","formData","_x17","uploadProfileImage","registerPushToken","_ref15","userId","user_id","_x18","_x19","geocodeAddress","_ref16","address","encodeURIComponent","_x20","getRecommendedPrice","_ref17","payload","_objectSpread","weather_condition","conditionMap","sunny","rainy","cloudy","partly_cloudy","toLowerCase","_x21","createDelivery","_ref18","deliveryData","_x22","fetchDeliveryDetails","_ref19","_x23","getBidsForDelivery","_ref20","_x24","acceptBid","_ref21","bidId","targetDeliveryId","bidDetails","delivery_id","_x25","_x26","rejectBid","_ref22","_x27","_x28","fetchDeliveryBids","_ref23","bidsWithCourierPromises","map","_ref24","bid","courierResponse","courier_id","courier","id","full_name","rating","_x30","bidsWithCourier","all","_x29","createBid","_ref25","bidData","_x31","bidForDelivery","_ref26","amount","_x32","_x33","getCourierLocation","_ref27","_x34","updateDeliveryStatus","_ref28","_x35","_x36","cancelDelivery","_ref29","_x37","getTrafficInfo","_ref30","startLat","startLng","endLat","endLng","_x38","_x39","_x40","_x41","submitRating","_ref31","ratingData","_x42","initiatePayment","_ref32","paymentData","_x43","verifyPayment","_ref33","verificationData","_x44","fetchNearbyMerchants","_ref34","commune","category","url","params","push","join","_x45","_x46","fetchMerchantDetails","_ref35","merchantId","_x47","fetchMerchantProducts","_ref36","_x48","fetchCourierEarnings","_ref37","period","withdrawFunds","_ref38","_x49","fetchCourierProfile","_ref39","updateCourierStatus","_ref40","isOnline","lat","lng","is_online","location","_x50","_x51","_x52","fetchCourierStats","_ref41","fetchCourierRatings","_ref42","fetchCollaborativeDeliveries","_ref43","joinCollaborativeDelivery","_ref44","_x53","_x54","sendTrackingPoint","_ref45","_x55","getDirections","_ref46","_x56","_x57","_x58","_x59","sendDeliveryNotification","_ref47","notification","_x60","_x61","fetchClientDeliveryHistory","_ref48","filter","_x62","fetchCourierDeliveryHistory","_ref49","_x63","fetchAvailableDeliveries","_ref50","_x64","fetchActiveDeliveries","_ref51","fetchWeatherForecast","_ref52","latitude","longitude","current","condition","text","_x65","_x66","_x67","fetchWeatherAlerts","_ref53","_x68","_x69","_x70","transcribeVoiceRating","_ref54","audioBase64","audio","_x71","processVoiceCommand","_ref55","_x72","getChatbotResponse","_ref56","_x73","getVehicleRecommendation","_ref57","_x74","fetchGamificationProfile","_ref58","fetchRankings","_ref59","_x75","claimReward","_ref60","rewardId","_x76","fetchWalletBalance","_ref61","fetchWalletTransactions","_ref62","type","_x77","requestLoan","_ref63","reason","_x78","_x79","repayLoan","_ref64","loanId","_x80","fetchActiveLoan","_ref65","fetchLoanHistory","_ref66","fetchSupportTickets","_ref67","createSupportTicket","_ref68","subject","_x81","_x82","addMessageToTicket","_ref69","ticketId","_x83","_x84","uploadTicketImage","_ref70","imageUri","FormData","filename","split","pop","match","exec","append","uri","name","_x85","_x86","fetchFAQs","_ref71","getWeatherData","_ref72","cacheKey","cachedData","cacheTimestamp","cacheDuration","Date","now","Number","parseInt","JSON","parse","URLSearchParams","toString","weatherData","temperature","stringify","_x87","_x88","_x89","clearApiCache","_ref73","keys","getAllKeys","cacheKeys","key","startsWith","multiRemove","getActivePromotions","_ref74","getApplicablePromotions","_ref75","orderValue","zoneId","order_value","zone_id","_x90","_x91","validatePromotionCode","_ref76","_x92","_x93","applyPromotionToDelivery","_ref77","promotionId","promotion_id","_x94","_x95","getDeliveryZones","_ref78","_x96","_x97","calculateZonePrice","_ref79","pickupLat","pickupLng","deliveryLat","deliveryLng","packageWeight","isExpress","pickup_lat","pickup_lng","delivery_lat","delivery_lng","package_weight","is_express","_x98","_x99","_x100","_x101","_x102"],"sources":["/home/runner/workspace/mobile/services/api.ts"],"sourcesContent":["/* eslint-disable prefer-const */\nimport axios from \"axios\"\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"\nimport { API_URL } from \"../config/environment\"\nimport type { Delivery, User, DeliveryStatus, Weather, VehicleType, CargoCategory } from \"../types/models\"\n\n// API Response Interfaces\nexport interface ApiError {\n  detail?: string\n  message?: string\n  error?: string\n}\n\nexport interface CollaborativeDeliveryDetails {\n  id: string\n  delivery_id: string\n  participants: Array<{\n    courier_id: string\n    courier_name: string\n    role: string\n    status: string\n  }>\n  status: string\n  created_at: string\n  updated_at: string\n}\n\nexport interface ChatMessage {\n  id: string\n  delivery_id: string\n  sender_id: string\n  sender_name: string\n  message: string\n  created_at: string\n}\n\nexport interface MessageResponse {\n  id: string\n  message: string\n  sender_id: string\n  created_at: string\n}\n\nexport interface GeocodeResult {\n  latitude: number\n  longitude: number\n  address: string\n  commune?: string\n  confidence: number\n}\n\nexport interface CourierInfo {\n  id: string\n  full_name: string\n  phone: string\n  rating?: number\n  vehicle_type?: string\n  profile_picture?: string\n}\n\nexport interface BidWithCourier {\n  id: string\n  delivery_id: string\n  courier_id: string\n  amount: number\n  note?: string\n  estimated_time?: number\n  status: string\n  created_at: string\n  courier: CourierInfo\n}\n\nexport interface BidResponse {\n  id: string\n  delivery_id: string\n  courier_id: string\n  amount: number\n  note?: string\n  estimated_time?: number\n  status: string\n  created_at: string\n}\n\nexport interface CourierLocation {\n  lat: number\n  lng: number\n  last_updated: string\n  courier_id: string\n}\n\nexport interface RatingResponse {\n  id: string\n  delivery_id: string\n  courier_id: string\n  rating: number\n  comment?: string\n  created_at: string\n}\n\nexport interface PaymentResponse {\n  id: string\n  delivery_id: string\n  amount: number\n  status: string\n  payment_method: string\n  reference?: string\n  created_at: string\n}\n\nexport interface PaymentVerificationResponse {\n  success: boolean\n  payment_id: string\n  status: string\n  message?: string\n}\n\nexport interface MerchantInfo {\n  id: string\n  name: string\n  description?: string\n  address: string\n  commune: string\n  category: string\n  rating?: number\n  phone?: string\n  lat?: number\n  lng?: number\n  is_open: boolean\n  opening_hours?: string\n}\n\nexport interface Product {\n  id: string\n  merchant_id: string\n  name: string\n  description?: string\n  price: number\n  category: string\n  image_url?: string\n  is_available: boolean\n}\n\nexport interface CourierProfile {\n  id: string\n  full_name: string\n  phone: string\n  email?: string\n  rating: number\n  total_deliveries: number\n  vehicle_type?: string\n  license_plate?: string\n  is_online: boolean\n  earnings_total?: number\n  profile_picture?: string\n}\n\nexport interface ProfileUpdateResponse {\n  success: boolean\n  message: string\n  profile?: CourierProfile\n}\n\nexport interface OnlineStatusData {\n  is_online: boolean\n  location?: {\n    lat: number\n    lng: number\n  }\n}\n\nexport interface TrackingPoint {\n  lat: number\n  lng: number\n  timestamp: string\n  speed?: number\n  heading?: number\n}\n\nexport interface DeliveryNotification {\n  type: string\n  title: string\n  body: string\n  message: string\n  data?: Record<string, unknown>\n}\n\nexport interface WeatherAlert {\n  id: string\n  type: string\n  severity: string\n  title: string\n  description: string\n  area: string\n  start_time: string\n  end_time?: string\n}\n\nexport interface GamificationProfile {\n  user_id: string\n  level: number\n  experience_points: number\n  badges: Array<{\n    id: string\n    name: string\n    description: string\n    earned_at: string\n  }>\n  achievements: Array<{\n    id: string\n    name: string\n    description: string\n    progress: number\n    target: number\n  }>\n  ranking: {\n    position: number\n    commune_position?: number\n  }\n}\n\nexport interface Ranking {\n  position: number\n  courier_id: string\n  courier_name: string\n  points: number\n  level: number\n  commune?: string\n}\n\nexport interface Reward {\n  id: string\n  name: string\n  description: string\n  points_required: number\n  type: string\n  value?: number\n  is_available: boolean\n}\n\nexport interface RewardClaimResponse {\n  success: boolean\n  message: string\n  reward_id: string\n  claimed_at: string\n}\n\nexport interface WalletBalance {\n  balance: number\n  currency: string\n  pending_balance?: number\n  last_updated: string\n}\n\nexport interface WalletTransaction {\n  id: string\n  type: string\n  amount: number\n  description: string\n  reference?: string\n  status: string\n  created_at: string\n}\n\nexport interface LoanRequest {\n  amount: number\n  reason: string\n  monthly_income?: number\n  employment_status?: string\n}\n\nexport interface LoanResponse {\n  id: string\n  amount: number\n  status: string\n  interest_rate: number\n  monthly_payment: number\n  due_date: string\n  created_at: string\n}\n\nexport interface ActiveLoan {\n  id: string\n  amount: number\n  remaining_balance: number\n  monthly_payment: number\n  next_payment_date: string\n  status: string\n  interest_rate: number\n}\n\nexport interface SupportTicket {\n  id: string\n  subject: string\n  status: string\n  priority: string\n  created_at: string\n  last_message?: string\n}\n\nexport interface TicketResponse {\n  id: string\n  subject: string\n  message: string\n  status: string\n  created_at: string\n}\n\nexport interface TicketMessage {\n  id: string\n  ticket_id: string\n  message: string\n  sender_type: string\n  created_at: string\n}\n\nexport interface UploadResponse {\n  success: boolean\n  file_url: string\n  image_url: string\n  message?: string\n}\n\nexport interface FAQ {\n  id: string\n  question: string\n  answer: string\n  category: string\n  order?: number\n}\n\n// Types pour les réponses de l'API\nexport interface LoginResponse {\n  token: string\n  user: User\n}\n\nexport interface RegisterUserData {\n  full_name: string\n  phone: string\n  email?: string\n  password: string\n  role: string\n  commune?: string\n  language_preference?: string\n  vehicle_type?: string\n  license_plate?: string\n}\n\nexport interface DeliveryData {\n  pickup_address: string\n  pickup_commune: string\n  pickup_lat?: number\n  pickup_lng?: number\n  delivery_address: string\n  delivery_commune: string\n  delivery_lat?: number\n  delivery_lng?: number\n  description: string\n  package_size: string\n  package_type?: string\n  is_fragile: boolean\n  is_urgent: boolean\n  proposed_price: number\n  notes?: string\n  estimated_distance?: number\n  estimated_duration?: number\n  cargo_category?: string\n  required_vehicle_type?: string\n}\n\n// Helper function for error handling\n// const handleApiError = (error: unknown): never => {\n//   if (axios.isAxiosError(error) && error.response?.data) {\n//     const apiError = error.response.data as ApiError\n//     if (apiError.detail) {\n//       throw new Error(apiError.detail)\n//     }\n//     if (apiError.message) {\n//       throw new Error(apiError.message)\n//     }\n//     if (apiError.error) {\n//       throw new Error(apiError.error)\n//     }\n//   }\n//   throw new Error('Une erreur inattendue s\\'est produite')\n// }\n\nexport const getCollaborativeDeliveryDetails = async (deliveryId: string): Promise<CollaborativeDeliveryDetails> => {\n  const response = await api.get(`/api/courier/collaborative-deliveries/${deliveryId}`)\n  return response.data\n}\n\nexport const getCollaborativeDeliveryChatHistory = async (deliveryId: string): Promise<ChatMessage[]> => {\n  const response = await api.get(`/api/courier/collaborative-deliveries/${deliveryId}/messages`)\n  return response.data\n}\n\nexport const sendCollaborativeDeliveryMessage = async (deliveryId: string, message: string): Promise<MessageResponse> => {\n  const response = await api.post(`/api/courier/collaborative-deliveries/${deliveryId}/message`, { message })\n  return response.data\n}\n\nexport interface PriceEstimateData {\n  distance: number\n  package_size: string\n  is_fragile: boolean\n  is_urgent: boolean\n  weather_condition?: string | number // Modifié pour accepter chaîne ou nombre\n  pickup_commune?: string\n  delivery_commune?: string\n}\n\nexport interface BidData {\n  delivery_id: string\n  amount: number\n  note?: string\n  estimated_time?: number\n}\n\nexport interface RatingData {\n  delivery_id: string\n  courier_id: string\n  rating: number\n  comment?: string\n  voice_comment?: string\n  aspects?: Record<string, number>\n}\n\nexport interface PaymentData {\n  delivery_id: string\n  amount: number\n  payment_method: string\n  phone_number: string\n}\n\nexport interface PaymentVerificationData {\n  reference: string\n  otp: string\n}\n\nexport interface VoiceCommandData {\n  audio: string\n  language?: string\n}\n\nexport interface VoiceCommandResponse {\n  transcript: string\n  response: string\n  action?: string\n  data?: Record<string, unknown> // Replaced `any` with a more specific type\n}\n\n// Types pour les véhicules\nexport interface VehicleData {\n  name: string\n  type: string\n  custom_type?: string\n  license_plate: string\n  brand?: string\n  model?: string\n  year?: number\n  color?: string\n  max_weight?: number\n  max_volume?: number\n  max_distance?: number\n  is_electric: boolean\n}\n\nexport interface CourierVehicle {\n  vehicle_id: string\n  is_primary: boolean\n}\n\nexport interface TransportRuleData {\n  vehicle_id: string\n  cargo_category: string\n  custom_category?: string\n  min_distance?: number\n  max_distance?: number\n  min_weight?: number\n  max_weight?: number\n  min_volume?: number\n  max_volume?: number\n  priority?: number\n  price_multiplier?: number\n  is_active?: boolean\n}\n\nexport interface VehicleRecommendation {\n  recommended_vehicle: {\n    type: VehicleType\n    name: string\n  }\n  reason: string\n  price_multiplier: number\n}\n\nexport interface VehicleRecommendationData {\n  cargo_category: CargoCategory\n  custom_category?: string\n  distance: number\n  weight?: number\n  volume?: number\n  is_fragile?: boolean\n  is_urgent?: boolean\n  weather_condition?: number\n}\n\n// Créer une instance axios avec la configuration de base\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n})\n\n// Intercepteur pour ajouter le token d'authentification à chaque requête\napi.interceptors.request.use(\n  async (config) => {\n    const token = await AsyncStorage.getItem(\"token\")\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n  },\n  (error) => {\n    return Promise.reject(error)\n  },\n)\n\n// Intercepteur pour gérer les erreurs de réponse\napi.interceptors.response.use(\n  (response) => {\n    return response\n  },\n  async (error) => {\n    const originalRequest = error.config\n\n    // Si l'erreur est 401 (non autorisé) et que nous n'avons pas déjà essayé de rafraîchir le token\n    if (error.response?.status === 401 && !originalRequest._retry) {\n      originalRequest._retry = true\n\n      try {\n        // Essayer de rafraîchir le token\n        const refreshToken = await AsyncStorage.getItem(\"refreshToken\")\n        if (!refreshToken) {\n          // Si pas de refresh token, rediriger vers la connexion\n          await AsyncStorage.removeItem(\"token\")\n          await AsyncStorage.removeItem(\"user\")\n          return Promise.reject(error)\n        }\n\n        const response = await axios.post(`${API_URL}/auth/refresh`, {\n          refresh_token: refreshToken,\n        })\n\n        const { access_token, refresh_token } = response.data\n\n        // Sauvegarder les nouveaux tokens\n        await AsyncStorage.setItem(\"token\", access_token)\n        await AsyncStorage.setItem(\"refreshToken\", refresh_token)\n\n        // Réessayer la requête originale avec le nouveau token\n        originalRequest.headers.Authorization = `Bearer ${access_token}`\n        return api(originalRequest)\n      } catch (refreshError) {\n        // Si le rafraîchissement échoue, déconnecter l'utilisateur\n        await AsyncStorage.removeItem(\"token\")\n        await AsyncStorage.removeItem(\"refreshToken\")\n        await AsyncStorage.removeItem(\"user\")\n        return Promise.reject(refreshError)\n      }\n    }\n\n    return Promise.reject(error)\n  },\n)\n\n// API d'authentification\n\n// Nouvelle fonction de connexion par OTP uniquement\nexport const loginWithOTP = async (phone: string, otp: string): Promise<{ token: string; user: User }> => {\n  try {\n    // Utiliser l'endpoint correct pour vérifier l'OTP de login\n    const response = await api.post(\"/api/auth/verify-otp\", { \n      phone: phone,\n      code: otp,\n      otp_type: \"login\"\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    \n    if (response.data.success && response.data.token) {\n      // Token directement disponible dans la réponse\n      const access_token = response.data.token;\n      \n      // Set authorization header for future requests\n      api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n      \n      return {\n        token: access_token,\n        user: response.data.user\n      };\n    } else {\n      throw new Error(\"Échec de la vérification OTP\");\n    }\n  } catch (error: unknown) {\n    console.error(\"OTP Login error:\", error);\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\n      throw new Error(\"Code OTP invalide ou expiré\");\n    }\n    throw new Error(\"Erreur de connexion avec OTP\");\n  }\n}\n\nexport const login = async (phone: string, password: string): Promise<{ token: string; user: User }> => {\n  try {\n    // Utiliser l'endpoint de login correct, pas send-otp\n    const response = await api.post(\"/api/auth/login\", { \n      phone: phone,      // Utiliser le bon nom de champ\n      password: password \n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    \n    const access_token = response.data.access_token;\n    \n    // Get user profile with the token\n    api.defaults.headers.common['Authorization'] = `Bearer ${access_token}`;\n    const userResponse = await api.get(\"/api/users/me\");\n    \n    return {\n      token: access_token,\n      user: userResponse.data\n    };\n  } catch (error: unknown) {\n    console.error(\"Login error:\", error);\n    if (axios.isAxiosError(error) && error.response?.status === 401) {\n      throw new Error(\"Identifiants invalides\");\n    }\n    throw new Error(\"Erreur de connexion\");\n  }\n}\n\n// Inscription\nexport const register = async (userData: RegisterUserData): Promise<void> => {\n  try {\n    const response = await api.post(\"/api/auth/register\", userData)\n    return response.data\n  } catch (error: unknown) {\n    console.error(\"Registration error:\", error);\n    if (axios.isAxiosError(error) && error.response?.data?.detail) {\n      throw new Error(error.response.data.detail);\n    }\n    throw new Error(\"Erreur d'inscription\");\n  }\n}\n\n// Vérification du token\nexport const verifyToken = async (token: string): Promise<boolean> => {\n  try {\n    const response = await api.post(\"/auth/verify-token\", { token })\n    return response.status === 200\n  } catch (error: unknown) {\n    console.error(\"Token verification error:\", error)\n    return false\n  }\n}\n\n// Vérification OTP\nexport const verifyOTP = async (phone: string, otp: string): Promise<{ success: boolean; token?: string; user?: User }> => {\n  try {\n    const response = await api.post(\"/api/auth/verify-otp\", { \n      phone, \n      code: otp,  // Backend expects 'code', not 'otp'\n      otp_type: \"login\"  // Required parameter\n    })\n    return response.data\n  } catch (error: unknown) {\n    console.error(\"OTP verification error:\", error);\n    if (axios.isAxiosError(error) && error.response?.data?.detail) {\n      throw new Error(error.response.data.detail);\n    }\n    throw new Error(\"Erreur de vérification OTP\");\n  }\n}\n\n// Envoyer OTP\nexport const sendOTP = async (phone: string, otpType: 'registration' | 'login' | 'password_reset' = 'login'): Promise<{message: string, success: boolean}> => {\n  try {\n    const response = await api.post(\"/api/auth/send-otp\", { \n      phone: phone,\n      otp_type: otpType\n    })\n    return response.data\n  } catch (error: unknown) {\n    console.error(\"OTP send error:\", error);\n    if (axios.isAxiosError(error) && error.response?.data?.detail) {\n      throw new Error(error.response.data.detail);\n    }\n    throw new Error(\"Erreur d'envoi OTP\");\n  }\n}\n\n// Renvoyer OTP\nexport const resendOTP = async (phone: string, otpType: 'login' | 'registration' | 'password_reset' = 'login'): Promise<void> => {\n  try {\n    const response = await api.post(\"/api/auth/resend-otp\", { \n      phone,\n      otp_type: otpType  // Backend requires otp_type parameter\n    })\n    return response.data\n  } catch (error: unknown) {\n    console.error(\"OTP resend error:\", error);\n    if (axios.isAxiosError(error) && error.response?.data?.detail) {\n      throw new Error(error.response.data.detail);\n    }\n    throw new Error(\"Erreur d'envoi OTP\");\n  }\n}\n\n// Réinitialisation du mot de passe\nexport const resetPassword = async (phone: string): Promise<void> => {\n  const response = await api.post(\"/api/auth/reset-password\", { phone })\n  return response.data\n}\n\n// Profil utilisateur\nexport const getUserProfile = async (): Promise<User> => {\n  const response = await api.get(\"/api/users/me\")\n  return response.data\n}\n\n// Mise à jour du profil\nexport const updateUserProfile = async (userData: Partial<User>): Promise<User> => {\n  const response = await api.put(\"/api/users/me\", userData)\n  return response.data\n}\n\n// Upload de photo de profil\nexport const uploadProfilePicture = async (formData: FormData): Promise<UploadResponse> => {\n  const token = await AsyncStorage.getItem(\"authToken\")\n  const response = await api.post(\"/api/users/me/profile-picture\", formData, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  })\n  return response.data\n}\n\nexport const uploadProfileImage = uploadProfilePicture\n\n// Enregistrement du token push\nexport const registerPushToken = async (token: string, userId: string): Promise<void> => {\n  const response = await api.post(\"/api/users/push-token\", { token, user_id: userId })\n  return response.data\n}\n\n// Géocodage d'adresse\nexport const geocodeAddress = async (address: string): Promise<GeocodeResult[]> => {\n  const response = await api.get(`/api/traffic/geocode?address=${encodeURIComponent(address)}`)\n  return response.data\n}\n\n// Obtenir le prix recommandé\nexport const getRecommendedPrice = async (data: PriceEstimateData): Promise<number> => {\n  const payload = { ...data }\n  if (typeof payload.weather_condition === \"string\") {\n    // Mappage des conditions météo en codes (à ajuster selon votre API)\n    const conditionMap: Record<string, number> = {\n      sunny: 1000,\n      rainy: 1003,\n      cloudy: 1006,\n      partly_cloudy: 1009,\n      // Ajoutez d'autres conditions selon les données de votre API météo\n    }\n    payload.weather_condition = conditionMap[payload.weather_condition.toLowerCase()] || 1000\n  }\n  const response = await api.post(\"/api/deliveries/price-estimate\", payload)\n  return response.data\n}\n\n// Créer une livraison\nexport const createDelivery = async (deliveryData: DeliveryData): Promise<Delivery> => {\n  const response = await api.post(\"/api/deliveries\", deliveryData)\n  return response.data\n}\n\n// Obtenir les détails d'une livraison\nexport const fetchDeliveryDetails = async (deliveryId: string): Promise<Delivery> => {\n  const response = await api.get(`/api/deliveries/${deliveryId}`)\n  return response.data\n}\n\n// Obtenir les enchères pour une livraison\nexport const getBidsForDelivery = async (deliveryId: string): Promise<BidResponse[]> => {\n  const response = await api.get(`/api/deliveries/${deliveryId}/bids`)\n  return response.data\n}\n\n// Accepter une enchère\nexport const acceptBid = async (bidId: string, deliveryId?: string): Promise<void> => {\n  let targetDeliveryId = deliveryId\n  if (!targetDeliveryId) {\n    const bidDetails = await api.get(`/api/deliveries/bids/${bidId}`)\n    targetDeliveryId = bidDetails.data.delivery_id\n  }\n  const response = await api.post(`/api/deliveries/${targetDeliveryId}/bids/${bidId}/accept`)\n  return response.data\n}\n\n// Rejeter une enchère\nexport const rejectBid = async (bidId: string, deliveryId?: string): Promise<void> => {\n  let targetDeliveryId = deliveryId\n  if (!targetDeliveryId) {\n    const bidDetails = await api.get(`/api/deliveries/bids/${bidId}`)\n    targetDeliveryId = bidDetails.data.delivery_id\n  }\n  const response = await api.post(`/api/deliveries/${targetDeliveryId}/bids/${bidId}/reject`)\n  return response.data\n}\n\n// Obtenir les offres pour une livraison\nexport const fetchDeliveryBids = async (deliveryId: string): Promise<BidWithCourier[]> => {\n  const response = await api.get(`/api/deliveries/${deliveryId}/bids`)\n  const bidsWithCourierPromises = response.data.map(async (bid: BidResponse) => {\n    try {\n      const courierResponse = await api.get(`/api/users/${bid.courier_id}`)\n      return {\n        ...bid,\n        courier: courierResponse.data,\n      }\n    } catch (error: unknown) {\n      console.error(`Erreur lors de la récupération du coursier pour l'offre ${bid.id}:`, error)\n      return {\n        ...bid,\n        courier: {\n          id: bid.courier_id,\n          full_name: \"Unknown\",\n          phone: \"\",\n          rating: 0,\n        },\n      }\n    }\n  })\n  const bidsWithCourier = await Promise.all(bidsWithCourierPromises)\n  return bidsWithCourier\n}\n\n// Créer une enchère\nexport const createBid = async (bidData: BidData): Promise<BidResponse> => {\n  const response = await api.post(\"/api/bids\", bidData)\n  return response.data\n}\n\n// Enchérir pour une livraison\nexport const bidForDelivery = async (deliveryId: string, amount: number): Promise<BidResponse> => {\n  const response = await api.post(`/api/deliveries/${deliveryId}/bid`, { amount })\n  return response.data\n}\n\n// Obtenir la position du coursier\nexport const getCourierLocation = async (deliveryId: string): Promise<CourierLocation> => {\n  const response = await api.get(`/api/deliveries/${deliveryId}/courier-location`)\n  return response.data\n}\n\n// Mettre à jour le statut de la livraison\nexport const updateDeliveryStatus = async (deliveryId: string, status: DeliveryStatus): Promise<void> => {\n  const response = await api.put(`/api/deliveries/${deliveryId}/status`, { status })\n  return response.data\n}\n\n// Annuler une livraison\nexport const cancelDelivery = async (deliveryId: string): Promise<void> => {\n  const response = await api.post(`/api/deliveries/${deliveryId}/cancel`)\n  return response.data\n}\n\n// Obtenir les informations de trafic\nexport const getTrafficInfo = async (\n  startLat: number,\n  startLng: number,\n  endLat: number,\n  endLng: number,\n): Promise<{ distance: number; duration: number; route: Array<{ lat: number; lng: number }> }> => {\n  const response = await api.get(\n    `/api/geo/traffic?startLat=${startLat}&startLng=${startLng}&endLat=${endLat}&endLng=${endLng}`,\n  )\n  return response.data\n}\n\n// Créer une évaluation\nexport const submitRating = async (ratingData: RatingData): Promise<RatingResponse> => {\n  const response = await api.post(\"/api/ratings\", ratingData)\n  return response.data\n}\n\n// Initier un paiement\nexport const initiatePayment = async (paymentData: PaymentData): Promise<PaymentResponse> => {\n  const response = await api.post(\"/api/payments/initiate\", paymentData)\n  return response.data\n}\n\n// Vérifier un paiement\nexport const verifyPayment = async (verificationData: PaymentVerificationData): Promise<PaymentVerificationResponse> => {\n  const response = await api.post(\"/api/payments/verify\", verificationData)\n  return response.data\n}\n\n// Obtenir les commerçants à proximité\nexport const fetchNearbyMerchants = async (commune?: string, category?: string): Promise<MerchantInfo[]> => {\n  let url = \"/merchants/nearby\"\n  const params = []\n  if (commune) params.push(`commune=${encodeURIComponent(commune)}`)\n  if (category) params.push(`category=${encodeURIComponent(category)}`)\n  if (params.length > 0) {\n    url += `?${params.join(\"&\")}`\n  }\n  const response = await api.get(url)\n  return response.data\n}\n\n// Obtenir les détails d'un commerçant\nexport const fetchMerchantDetails = async (merchantId: string): Promise<MerchantInfo> => {\n  const response = await api.get(`/api/market/merchants/${merchantId}`)\n  return response.data\n}\n\n// Obtenir les produits d'un commerçant\nexport const fetchMerchantProducts = async (merchantId: string): Promise<Product[]> => {\n  const response = await api.get(`/api/market/merchants/${merchantId}/products`)\n  return response.data\n}\n\n// Fonctions d'API pour les coursiers\nexport const fetchCourierEarnings = async (period = \"month\") => {\n  const response = await api.get(`/api/courier/earnings?period=${period}`)\n  return response.data\n}\n\nexport const withdrawFunds = async (amount: number) => {\n  const response = await api.post(\"/api/courier/withdraw\", { amount })\n  return response.data\n}\n\nexport const fetchCourierProfile = async (): Promise<CourierProfile> => {\n  const response = await api.get(\"/api/courier/profile\")\n  return response.data\n}\n\nexport const updateCourierStatus = async (\n  isOnline: boolean,\n  lat?: number | null,\n  lng?: number | null,\n): Promise<ProfileUpdateResponse> => {\n  const data: OnlineStatusData = { is_online: isOnline }\n  if (lat !== null && lng !== null && lat !== undefined && lng !== undefined) {\n    data.location = {\n      lat: lat,\n      lng: lng\n    }\n  }\n  const response = await api.post(\"/api/courier/status\", data)\n  return response.data\n}\n\nexport const fetchCourierStats = async (period = \"month\") => {\n  const response = await api.get(`/api/courier/stats?period=${period}`)\n  return response.data\n}\n\nexport const fetchCourierRatings = async (period = \"month\") => {\n  const response = await api.get(`/api/courier/ratings?period=${period}`)\n  return response.data\n}\n\nexport const fetchCollaborativeDeliveries = async () => {\n  const response = await api.get(\"/api/courier/collaborative-deliveries\")\n  return response.data\n}\n\nexport const joinCollaborativeDelivery = async (deliveryId: string, data: { role?: string; message?: string }) => {\n  const response = await api.post(`/api/courier/collaborative-deliveries/${deliveryId}/join`, data)\n  return response.data\n}\n\nexport const sendTrackingPoint = async (data: TrackingPoint) => {\n  const response = await api.post(\"/api/tracking/point\", data)\n  return response.data\n}\n\nexport const getDirections = async (startLat: number, startLng: number, endLat: number, endLng: number) => {\n  const response = await api.get(\n    `/api/directions?start_lat=${startLat}&start_lng=${startLng}&end_lat=${endLat}&end_lng=${endLng}`,\n  )\n  return response.data\n}\n\nexport const sendDeliveryNotification = async (userId: string, notification: DeliveryNotification) => {\n  const response = await api.post(`/api/notifications/user/${userId}`, notification)\n  return response.data\n}\n\n// Récupérer l'historique des livraisons pour un client\nexport const fetchClientDeliveryHistory = async (filter?: string): Promise<Delivery[]> => {\n  let url = \"/api/client/deliveries/history\"\n  if (filter) {\n    url += `?status=${filter}`\n  }\n  const response = await api.get(url)\n  return response.data\n}\n\n// Récupérer l'historique des livraisons pour un coursier\nexport const fetchCourierDeliveryHistory = async (filter?: string): Promise<Delivery[]> => {\n  let url = \"/api/courier/deliveries/history\"\n  if (filter) {\n    url += `?status=${filter}`\n  }\n  const response = await api.get(url)\n  return response.data\n}\n\n// Récupérer les livraisons disponibles pour un coursier\nexport const fetchAvailableDeliveries = async (commune?: string): Promise<Delivery[]> => {\n  let url = \"/api/courier/deliveries/available\"\n  if (commune) {\n    url += `?commune=${encodeURIComponent(commune)}`\n  }\n  const response = await api.get(url)\n  return response.data\n}\n\n// Récupérer les livraisons actives pour un client\nexport const fetchActiveDeliveries = async (): Promise<Delivery[]> => {\n  const response = await api.get(\"/api/client/deliveries/active\")\n  return response.data\n}\n\n// Récupérer les prévisions météo\nexport const fetchWeatherForecast = async (latitude: number, longitude: number, commune?: string): Promise<Weather> => {\n  let url = `/api/weather?lat=${latitude}&lng=${longitude}`\n  if (commune) {\n    url += `&commune=${encodeURIComponent(commune)}`\n  }\n  const response = await api.get(url)\n  const data = response.data\n  // Transformer condition si nécessaire\n  if (data.current && data.current.condition && typeof data.current.condition === \"object\") {\n    data.current.condition = data.current.condition.text || \"unknown\"\n  }\n  return data\n}\n\n// Récupérer les alertes météo\nexport const fetchWeatherAlerts = async (latitude: number, longitude: number, commune?: string): Promise<WeatherAlert[]> => {\n  let url = `/api/weather/alerts?lat=${latitude}&lng=${longitude}`\n  if (commune) {\n    url += `&commune=${encodeURIComponent(commune)}`\n  }\n  const response = await api.get(url)\n  return response.data\n}\n\n// Transcription audio pour évaluation\nexport const transcribeVoiceRating = async (audioBase64: string): Promise<{ text: string }> => {\n  const response = await api.post(\"/api/ratings/transcribe\", { audio: audioBase64 })\n  return response.data\n}\n\n// Traitement des commandes vocales\nexport const processVoiceCommand = async (audioBase64: string): Promise<VoiceCommandResponse> => {\n  const response = await api.post(\"/api/assistant/voice\", { audio: audioBase64 })\n  return response.data\n}\n\n// Obtenir une réponse du chatbot\nexport const getChatbotResponse = async (message: string): Promise<{ message: string; action?: string }> => {\n  const response = await api.post(\"/api/assistant/chat\", { message })\n  return response.data\n}\n\n// Obtenir une recommandation de véhicule\nexport const getVehicleRecommendation = async (data: VehicleRecommendationData): Promise<VehicleRecommendation> => {\n  const response = await api.post(\"/api/transport/recommend\", data)\n  return response.data\n}\n\n// Fonctions pour la gamification\nexport const fetchGamificationProfile = async (): Promise<GamificationProfile> => {\n  const response = await api.get(\"/api/gamification/profile\")\n  return response.data\n}\n\nexport const fetchRankings = async (commune?: string): Promise<Ranking[]> => {\n  let url = \"/api/gamification/rankings\"\n  if (commune) {\n    url += `?commune=${encodeURIComponent(commune)}`\n  }\n  const response = await api.get(url)\n  return response.data\n}\n\nexport const claimReward = async (rewardId: string): Promise<RewardClaimResponse> => {\n  const response = await api.post(`/api/gamification/rewards/${rewardId}/claim`)\n  return response.data\n}\n\n// Fonctions pour le portefeuille communautaire\nexport const fetchWalletBalance = async (): Promise<WalletBalance> => {\n  const response = await api.get(\"/api/community-wallet/balance\")\n  return response.data\n}\n\nexport const fetchWalletTransactions = async (type?: string): Promise<WalletTransaction[]> => {\n  let url = \"/api/community-wallet/transactions\"\n  if (type) {\n    url += `?type=${type}`\n  }\n  const response = await api.get(url)\n  return response.data\n}\n\nexport const requestLoan = async (amount: number, reason: string): Promise<LoanResponse> => {\n  const response = await api.post(\"/api/community-wallet/loans/request\", { amount, reason })\n  return response.data\n}\n\nexport const repayLoan = async (loanId: string): Promise<{ success: boolean; message: string }> => {\n  const response = await api.post(`/api/community-wallet/loans/${loanId}/repay`)\n  return response.data\n}\n\nexport const fetchActiveLoan = async (): Promise<ActiveLoan> => {\n  const response = await api.get(\"/api/community-wallet/loans/active\")\n  return response.data\n}\n\nexport const fetchLoanHistory = async (): Promise<LoanResponse[]> => {\n  const response = await api.get(\"/api/community-wallet/loans/history\")\n  return response.data\n}\n\n// Fonctions pour le support\nexport const fetchSupportTickets = async (): Promise<SupportTicket[]> => {\n  const response = await api.get(\"/api/support/tickets\")\n  return response.data\n}\n\nexport const createSupportTicket = async (subject: string, message: string): Promise<TicketResponse> => {\n  const response = await api.post(\"/api/support/tickets\", { subject, message })\n  return response.data\n}\n\nexport const addMessageToTicket = async (ticketId: string, message: string): Promise<TicketMessage> => {\n  const response = await api.post(`/api/support/tickets/${ticketId}/messages`, { message })\n  return response.data\n}\n\nexport const uploadTicketImage = async (ticketId: string, imageUri: string): Promise<UploadResponse> => {\n  const formData = new FormData()\n  const filename = imageUri.split(\"/\").pop()\n  const match = /\\.(\\w+)$/.exec(filename || \"\")\n  const type = match ? `image/${match[1]}` : \"image\"\n\n  formData.append(\"image\", {\n    uri: imageUri,\n    name: filename,\n    type,\n  } as unknown as Blob)\n\n  const response = await api.post(`/api/support/tickets/${ticketId}/attachments`, formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\",\n    },\n  })\n  return response.data\n}\n\nexport const fetchFAQs = async (): Promise<FAQ[]> => {\n  const response = await api.get(\"/api/support/faqs\")\n  return response.data\n}\n\n// Nouvelle fonction pour remplacer fetchWeatherForecast\nexport const getWeatherData = async (latitude: number, longitude: number, commune?: string): Promise<Weather> => {\n  try {\n    // Générer une clé unique pour le cache\n    const cacheKey = `weather_${latitude}_${longitude}${commune ? `_${commune}` : \"\"}`\n    const cachedData = await AsyncStorage.getItem(cacheKey)\n    const cacheTimestamp = await AsyncStorage.getItem(`${cacheKey}_timestamp`)\n\n    // Vérifier si les données en cache sont récentes (moins de 10 minutes)\n    const cacheDuration = 10 * 60 * 1000 // 10 minutes en millisecondes\n    if (cachedData && cacheTimestamp && Date.now() - Number.parseInt(cacheTimestamp) < cacheDuration) {\n      return JSON.parse(cachedData) as Weather\n    }\n\n    // Construire l'URL de la requête\n    const params = new URLSearchParams({\n      lat: latitude.toString(),\n      lng: longitude.toString(),\n    })\n    if (commune) {\n      params.append(\"commune\", commune)\n    }\n    const url = `/api/weather?${params.toString()}`\n\n    // Effectuer la requête API\n    const response = await api.get(url)\n    let weatherData = response.data\n\n    // Transformer condition si nécessaire\n    if (weatherData.current && weatherData.current.condition && typeof weatherData.current.condition === \"object\") {\n      weatherData.current.condition = weatherData.current.condition.text || \"unknown\"\n    }\n\n    // Valider la structure des données\n    if (!weatherData.current || typeof weatherData.current.temperature !== \"number\" || typeof weatherData.current.condition !== \"string\") {\n      throw new Error(\"Invalid weather data format\")\n    }\n\n    // Mettre en cache les données\n    await AsyncStorage.setItem(cacheKey, JSON.stringify(weatherData))\n    await AsyncStorage.setItem(`${cacheKey}_timestamp`, Date.now().toString())\n\n    return weatherData as Weather\n  } catch (error: unknown) {\n    // Gestion des erreurs\n    console.error(\"Error fetching weather data:\", error) // eslint-disable-next-line no-console\n    const cachedData = await AsyncStorage.getItem(`weather_${latitude}_${longitude}${commune ? `_${commune}` : \"\"}`)\n    if (cachedData) {\n      return JSON.parse(cachedData) as Weather\n    }\n    throw new Error(\"Failed to fetch weather data and no cached data available\")\n  }\n}\n\n\n// Fonction pour vider le cache API\nexport const clearApiCache = async (): Promise<boolean> => {\n  try {\n    const keys = await AsyncStorage.getAllKeys()\n    const cacheKeys = keys.filter((key) => key.startsWith(\"api_cache_\"))\n    await AsyncStorage.multiRemove(cacheKeys)\n    return true\n  } catch (error: unknown) {\n    console.error(\"Error clearing API cache:\", error)\n    return false\n  }\n}\n\n// Fonctions pour les promotions\nexport const getActivePromotions = async (): Promise<any[]> => {\n  const response = await api.get(\"/api/v1/promotions/active\")\n  return response.data\n}\n\nexport const getApplicablePromotions = async (orderValue: number, zoneId?: number): Promise<any[]> => {\n  const params = { order_value: orderValue }\n  if (zoneId) (params as any).zone_id = zoneId\n  \n  const response = await api.get(\"/api/v1/promotions/applicable\", { params })\n  return response.data\n}\n\nexport const validatePromotionCode = async (code: string, orderValue: number): Promise<any> => {\n  const response = await api.post(\"/api/v1/promotions/validate-code\", {\n    code,\n    order_value: orderValue\n  })\n  return response.data\n}\n\nexport const applyPromotionToDelivery = async (deliveryId: number, promotionId: string): Promise<any> => {\n  const response = await api.post(`/api/v1/deliveries/${deliveryId}/apply-promotion`, {\n    promotion_id: promotionId\n  })\n  return response.data\n}\n\n// Fonctions pour les zones\nexport const getDeliveryZones = async (lat: number, lng: number): Promise<any> => {\n  const response = await api.get(\"/api/v1/zones/locate\", {\n    params: { lat, lng }\n  })\n  return response.data\n}\n\nexport const calculateZonePrice = async (\n  pickupLat: number,\n  pickupLng: number,\n  deliveryLat: number,\n  deliveryLng: number,\n  packageWeight?: number,\n  isExpress: boolean = false\n): Promise<any> => {\n  const response = await api.post(\"/api/v1/zones/calculate-price\", {\n    pickup_lat: pickupLat,\n    pickup_lng: pickupLng,\n    delivery_lat: deliveryLat,\n    delivery_lng: deliveryLng,\n    package_weight: packageWeight,\n    is_express: isExpress\n  })\n  return response.data\n}\n\n// Exporter d'autres fonctions d'API au besoin\nexport default api\nexport { api }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}