{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState } from 'react';\nimport VehicleService from \"../services/VehicleService\";\nexport var useVehicle = function useVehicle() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    vehicles = _useState2[0],\n    setVehicles = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedVehicle = _useState4[0],\n    setSelectedVehicle = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    error = _useState8[0],\n    setError = _useState8[1];\n  var refreshVehicles = function () {\n    var _ref = _asyncToGenerator(function* (courierId) {\n      try {\n        setLoading(true);\n        var id = courierId || 1;\n        var courierVehicles = yield VehicleService.getCourierVehicles(id);\n        var _vehicles = courierVehicles.map(function (cv) {\n          return {\n            id: cv.vehicle.id,\n            user_id: cv.courier_id,\n            type: cv.vehicle.type,\n            license_plate: cv.vehicle.license_plate,\n            is_available: cv.vehicle.is_available || false,\n            brand: cv.vehicle.brand || '',\n            model: cv.vehicle.model || '',\n            year: cv.vehicle.year || new Date().getFullYear(),\n            color: cv.vehicle.color || '',\n            capacity: cv.vehicle.capacity || 0,\n            status: cv.vehicle.status,\n            created_at: cv.vehicle.created_at,\n            updated_at: cv.vehicle.updated_at\n          };\n        });\n        setVehicles(_vehicles);\n      } catch (error) {\n        console.error('Error refreshing vehicles:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function refreshVehicles(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var addVehicle = function () {\n    var _ref2 = _asyncToGenerator(function* (data) {\n      try {\n        setLoading(true);\n        yield VehicleService.createVehicle(data);\n        yield refreshVehicles();\n      } catch (error) {\n        console.error('Error adding vehicle:', error);\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function addVehicle(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var updateVehicle = function () {\n    var _ref3 = _asyncToGenerator(function* (vehicleId, data) {\n      try {\n        setLoading(true);\n        var updateData = _objectSpread({}, data);\n        if (data.status && typeof data.status === 'string') {\n          updateData.status = data.status;\n        }\n        yield VehicleService.updateVehicle(vehicleId, updateData);\n        yield refreshVehicles();\n      } catch (error) {\n        console.error('Error updating vehicle:', error);\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function updateVehicle(_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var deleteVehicle = function () {\n    var _ref4 = _asyncToGenerator(function* (vehicleId) {\n      try {\n        setLoading(true);\n        yield VehicleService.deleteVehicle(vehicleId);\n        yield refreshVehicles();\n      } catch (error) {\n        console.error('Error deleting vehicle:', error);\n        throw error;\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function deleteVehicle(_x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  return {\n    vehicles: vehicles,\n    selectedVehicle: selectedVehicle,\n    loading: loading,\n    isLoading: loading,\n    error: error,\n    refreshVehicles: refreshVehicles,\n    addVehicle: addVehicle,\n    updateVehicle: updateVehicle,\n    deleteVehicle: deleteVehicle,\n    setSelectedVehicle: setSelectedVehicle\n  };\n};","map":{"version":3,"names":["useState","VehicleService","useVehicle","_useState","_useState2","_slicedToArray","vehicles","setVehicles","_useState3","_useState4","selectedVehicle","setSelectedVehicle","_useState5","_useState6","loading","setLoading","_useState7","_useState8","error","setError","refreshVehicles","_ref","_asyncToGenerator","courierId","id","courierVehicles","getCourierVehicles","map","cv","vehicle","user_id","courier_id","type","license_plate","is_available","brand","model","year","Date","getFullYear","color","capacity","status","created_at","updated_at","console","_x","apply","arguments","addVehicle","_ref2","data","createVehicle","_x2","updateVehicle","_ref3","vehicleId","updateData","_objectSpread","_x3","_x4","deleteVehicle","_ref4","_x5","isLoading"],"sources":["/home/runner/workspace/mobile/hooks/useVehicle.ts"],"sourcesContent":["// Hook pour la gestion des vÃ©hicules\nimport { useState, useCallback } from 'react';\nimport VehicleService from '../services/VehicleService';\nimport type { \n  Vehicle,\n  CourierVehicle,\n  VehicleDocument,\n  MaintenanceRecord,\n  TransportRule,\n  VehicleType,\n  VehicleStatus,\n  VehicleRecommendation,\n  VehicleUsageStats,\n  VehiclePerformanceStats,\n  VehicleEnvironmentalStats,\n  VehicleRecommendationRequest,\n  VehicleUsageCreateRequest,\n  CourierVehicleCreateRequest\n} from '../types/models';\nimport type { \n  VehicleCreateRequest,\n  VehicleUpdateRequest,\n  MaintenanceRecordCreateRequest,\n  TransportRuleCreateRequest\n} from '../services/VehicleService';\n\ninterface VehicleState {\n  vehicles: Vehicle[];\n  courierVehicles: CourierVehicle[];\n  currentVehicle: Vehicle | null;\n  documents: VehicleDocument[];\n  maintenanceRecords: MaintenanceRecord[];\n  transportRules: TransportRule[];\n  recommendation: VehicleRecommendation | null;\n  usageStats: VehicleUsageStats | null;\n  performanceStats: VehiclePerformanceStats | null;\n  environmentalStats: VehicleEnvironmentalStats | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\nexport interface UseVehicleReturn {\n  vehicles: Vehicle[]\n  selectedVehicle: Vehicle | null\n  loading: boolean\n  isLoading: boolean\n  error: string | null\n  refreshVehicles: () => Promise<void>\n  addVehicle: (data: VehicleCreateRequest) => Promise<void>\n  updateVehicle: (vehicleId: number, data: Partial<Vehicle>) => Promise<void>\n  deleteVehicle: (vehicleId: number) => Promise<void>\n  setSelectedVehicle: (vehicle: Vehicle | null) => void\n}\n\nexport const useVehicle = (): UseVehicleReturn => {\n  const [vehicles, setVehicles] = useState<Vehicle[]>([])\n  const [selectedVehicle, setSelectedVehicle] = useState<Vehicle | null>(null)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  const refreshVehicles = async (courierId?: number) => {\n    try {\n      setLoading(true)\n      // Get courier ID from auth context or use parameter\n      const id = courierId || 1 // Default fallback - should be from auth context\n      const courierVehicles = await VehicleService.getCourierVehicles(id)\n\n      // Convert CourierVehicle[] to Vehicle[]\n      const vehicles: Vehicle[] = courierVehicles.map(cv => ({\n        id: cv.vehicle.id,\n        user_id: cv.courier_id,\n        type: cv.vehicle.type,\n        license_plate: cv.vehicle.license_plate,\n        is_available: cv.vehicle.is_available || false,\n        brand: cv.vehicle.brand || '',\n        model: cv.vehicle.model || '',\n        year: cv.vehicle.year || new Date().getFullYear(),\n        color: cv.vehicle.color || '',\n        capacity: cv.vehicle.capacity || 0,\n        status: cv.vehicle.status,\n        created_at: cv.vehicle.created_at,\n        updated_at: cv.vehicle.updated_at\n      }))\n\n      setVehicles(vehicles)\n    } catch (error) {\n      console.error('Error refreshing vehicles:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const addVehicle = async (data: VehicleCreateRequest) => {\n    try {\n      setLoading(true)\n      await VehicleService.createVehicle(data)\n      await refreshVehicles()\n    } catch (error) {\n      console.error('Error adding vehicle:', error)\n      throw error\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const updateVehicle = async (vehicleId: number, data: Partial<Vehicle>) => {\n    try {\n      setLoading(true)\n      // Convert Vehicle data to VehicleUpdateRequest format\n      const updateData: any = { ...data }\n      if (data.status && typeof data.status === 'string') {\n        updateData.status = data.status as any\n      }\n      await VehicleService.updateVehicle(vehicleId, updateData)\n      await refreshVehicles()\n    } catch (error) {\n      console.error('Error updating vehicle:', error)\n      throw error\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const deleteVehicle = async (vehicleId: number) => {\n    try {\n      setLoading(true)\n      await VehicleService.deleteVehicle(vehicleId)\n      await refreshVehicles()\n    } catch (error) {\n      console.error('Error deleting vehicle:', error)\n      throw error\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return {\n    vehicles,\n    selectedVehicle,\n    loading,\n    isLoading: loading,\n    error,\n    refreshVehicles,\n    addVehicle,\n    updateVehicle,\n    deleteVehicle,\n    setSelectedVehicle,\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}