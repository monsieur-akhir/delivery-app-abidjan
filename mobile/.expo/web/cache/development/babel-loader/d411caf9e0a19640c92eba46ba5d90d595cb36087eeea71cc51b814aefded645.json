{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, Button } from \"react-native-paper\";\nimport { Feather } from \"@expo/vector-icons\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ErrorView = function ErrorView(_ref) {\n  var message = _ref.message,\n    onRetry = _ref.onRetry,\n    _ref$icon = _ref.icon,\n    icon = _ref$icon === void 0 ? \"alert-circle\" : _ref$icon,\n    _ref$isConnected = _ref.isConnected,\n    isConnected = _ref$isConnected === void 0 ? true : _ref$isConnected;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Feather, {\n      name: icon,\n      size: 64,\n      color: \"#F44336\"\n    }), _jsx(Text, {\n      style: styles.title,\n      children: \"Erreur\"\n    }), _jsx(Text, {\n      style: styles.message,\n      children: message\n    }), onRetry && isConnected && _jsx(Button, {\n      mode: \"contained\",\n      onPress: onRetry,\n      style: styles.button,\n      children: \"R\\xE9essayer\"\n    }), !isConnected && _jsx(Text, {\n      style: styles.offlineMessage,\n      children: \"Connexion internet requise. Veuillez v\\xE9rifier votre connexion et r\\xE9essayer.\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 32\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#F44336\",\n    marginTop: 16,\n    marginBottom: 8\n  },\n  message: {\n    fontSize: 14,\n    color: \"#757575\",\n    textAlign: \"center\",\n    marginBottom: 24\n  },\n  button: {\n    backgroundColor: \"#F44336\"\n  },\n  offlineMessage: {\n    fontSize: 12,\n    color: \"#757575\",\n    textAlign: \"center\",\n    marginTop: 8\n  }\n});\nexport default ErrorView;","map":{"version":3,"names":["Text","Button","Feather","jsx","_jsx","jsxs","_jsxs","ErrorView","_ref","message","onRetry","_ref$icon","icon","_ref$isConnected","isConnected","View","style","styles","container","children","name","size","color","title","mode","onPress","button","offlineMessage","StyleSheet","create","flex","justifyContent","alignItems","padding","fontSize","fontWeight","marginTop","marginBottom","textAlign","backgroundColor"],"sources":["/home/runner/workspace/mobile/components/ErrorView.tsx"],"sourcesContent":["import type React from \"react\"\nimport { View, StyleSheet } from \"react-native\"\nimport { Text, Button } from \"react-native-paper\"\nimport { Feather } from \"@expo/vector-icons\"\n\ninterface ErrorViewProps {\n  message: string\n  onRetry?: () => void\n  icon?: string\n  isConnected?: boolean\n}\n\nconst ErrorView: React.FC<ErrorViewProps> = ({ message, onRetry, icon = \"alert-circle\", isConnected = true }) => {\n  return (\n    <View style={styles.container}>\n      <Feather name={icon as any} size={64} color=\"#F44336\" />\n      <Text style={styles.title}>Erreur</Text>\n      <Text style={styles.message}>{message}</Text>\n      {onRetry && isConnected && (\n        <Button mode=\"contained\" onPress={onRetry} style={styles.button}>\n          Réessayer\n        </Button>\n      )}\n      {!isConnected && (\n        <Text style={styles.offlineMessage}>\n          Connexion internet requise. Veuillez vérifier votre connexion et réessayer.\n        </Text>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 32,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#F44336\",\n    marginTop: 16,\n    marginBottom: 8,\n  },\n  message: {\n    fontSize: 14,\n    color: \"#757575\",\n    textAlign: \"center\",\n    marginBottom: 24,\n  },\n  button: {\n    backgroundColor: \"#F44336\",\n  },\n  offlineMessage: {\n    fontSize: 12,\n    color: \"#757575\",\n    textAlign: \"center\",\n    marginTop: 8,\n  }\n})\n\nexport default ErrorView\n"],"mappings":";;AAEA,SAASA,IAAI,EAAEC,MAAM,QAAQ,oBAAoB;AACjD,SAASC,OAAO,QAAQ,oBAAoB;AAAA,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAS5C,IAAMC,SAAmC,GAAG,SAAtCA,SAAmCA,CAAAC,IAAA,EAAwE;EAAA,IAAlEC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAAEC,OAAO,GAAAF,IAAA,CAAPE,OAAO;IAAAC,SAAA,GAAAH,IAAA,CAAEI,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,cAAc,GAAAA,SAAA;IAAAE,gBAAA,GAAAL,IAAA,CAAEM,WAAW;IAAXA,WAAW,GAAAD,gBAAA,cAAG,IAAI,GAAAA,gBAAA;EACxG,OACEP,KAAA,CAACS,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bf,IAAA,CAACF,OAAO;MAACkB,IAAI,EAAER,IAAY;MAACS,IAAI,EAAE,EAAG;MAACC,KAAK,EAAC;IAAS,CAAE,CAAC,EACxDlB,IAAA,CAACJ,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACM,KAAM;MAAAJ,QAAA,EAAC;IAAM,CAAM,CAAC,EACxCf,IAAA,CAACJ,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACR,OAAQ;MAAAU,QAAA,EAAEV;IAAO,CAAO,CAAC,EAC5CC,OAAO,IAAII,WAAW,IACrBV,IAAA,CAACH,MAAM;MAACuB,IAAI,EAAC,WAAW;MAACC,OAAO,EAAEf,OAAQ;MAACM,KAAK,EAAEC,MAAM,CAACS,MAAO;MAAAP,QAAA,EAAC;IAEjE,CAAQ,CACT,EACA,CAACL,WAAW,IACXV,IAAA,CAACJ,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACU,cAAe;MAAAR,QAAA,EAAC;IAEpC,CAAM,CACP;EAAA,CACG,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGW,UAAU,CAACC,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,OAAO,EAAE;EACX,CAAC;EACDV,KAAK,EAAE;IACLW,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBb,KAAK,EAAE,SAAS;IAChBc,SAAS,EAAE,EAAE;IACbC,YAAY,EAAE;EAChB,CAAC;EACD5B,OAAO,EAAE;IACPyB,QAAQ,EAAE,EAAE;IACZZ,KAAK,EAAE,SAAS;IAChBgB,SAAS,EAAE,QAAQ;IACnBD,YAAY,EAAE;EAChB,CAAC;EACDX,MAAM,EAAE;IACNa,eAAe,EAAE;EACnB,CAAC;EACDZ,cAAc,EAAE;IACdO,QAAQ,EAAE,EAAE;IACZZ,KAAK,EAAE,SAAS;IAChBgB,SAAS,EAAE,QAAQ;IACnBF,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAe7B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}