{"ast":null,"code":"\"use client\";\n\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { Text, ActivityIndicator, IconButton } from \"react-native-paper\";\nimport { Audio } from \"expo-av\";\nimport * as FileSystem from \"expo-file-system\";\nimport * as Permissions from \"expo-permissions\";\nimport { useTranslation } from \"react-i18next\";\nimport { useNetwork } from \"../contexts/NetworkContext\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar VoiceRecorder = function VoiceRecorder(_ref) {\n  var onRecordingComplete = _ref.onRecordingComplete,\n    onTranscriptionComplete = _ref.onTranscriptionComplete,\n    _ref$transcribeAudio = _ref.transcribeAudio,\n    transcribeAudio = _ref$transcribeAudio === void 0 ? false : _ref$transcribeAudio,\n    _ref$maxDuration = _ref.maxDuration,\n    maxDuration = _ref$maxDuration === void 0 ? 60 : _ref$maxDuration,\n    _ref$buttonSize = _ref.buttonSize,\n    buttonSize = _ref$buttonSize === void 0 ? 64 : _ref$buttonSize,\n    _ref$buttonColor = _ref.buttonColor,\n    buttonColor = _ref$buttonColor === void 0 ? \"#FF6B00\" : _ref$buttonColor,\n    _ref$buttonActiveColo = _ref.buttonActiveColor,\n    buttonActiveColor = _ref$buttonActiveColo === void 0 ? \"#F44336\" : _ref$buttonActiveColo,\n    _ref$showTimer = _ref.showTimer,\n    showTimer = _ref$showTimer === void 0 ? true : _ref$showTimer,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    style = _ref.style;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _useNetwork = useNetwork(),\n    isConnected = _useNetwork.isConnected;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isRecording = _useState2[0],\n    setIsRecording = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    recording = _useState4[0],\n    setRecording = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    recordingDuration = _useState6[0],\n    setRecordingDuration = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    durationTimer = _useState8[0],\n    setDurationTimer = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    permissionGranted = _useState0[0],\n    setPermissionGranted = _useState0[1];\n  var _useState1 = useState(false),\n    _useState10 = _slicedToArray(_useState1, 2),\n    isProcessing = _useState10[0],\n    setIsProcessing = _useState10[1];\n  useEffect(function () {\n    checkPermissions();\n    return function () {\n      if (durationTimer) {\n        clearInterval(durationTimer);\n      }\n      if (recording) {\n        stopRecording();\n      }\n    };\n  }, []);\n  useEffect(function () {\n    if (recordingDuration >= maxDuration && isRecording) {\n      stopRecording();\n    }\n  }, [recordingDuration, maxDuration, isRecording]);\n  var checkPermissions = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (Platform.OS === \"web\") {\n        setPermissionGranted(true);\n        return;\n      }\n      var _yield$Permissions$as = yield Permissions.askAsync(Permissions.AUDIO_RECORDING),\n        status = _yield$Permissions$as.status;\n      setPermissionGranted(status === \"granted\");\n    });\n    return function checkPermissions() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var startRecording = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (disabled) return;\n      if (!permissionGranted) {\n        yield checkPermissions();\n        if (!permissionGranted) {\n          Alert.alert(t(\"voiceAssistant.permissionDenied\"), t(\"voiceAssistant.microphonePermissionRequired\"));\n          return;\n        }\n      }\n      try {\n        setIsRecording(true);\n        setRecordingDuration(0);\n        yield Audio.setAudioModeAsync({\n          allowsRecordingIOS: true,\n          playsInSilentModeIOS: true,\n          staysActiveInBackground: false,\n          shouldDuckAndroid: true\n        });\n        var _recording = new Audio.Recording();\n        yield _recording.prepareToRecordAsync(Audio.RecordingOptionsPresets.HIGH_QUALITY);\n        yield _recording.startAsync();\n        setRecording(_recording);\n        var timer = setInterval(function () {\n          setRecordingDuration(function (prev) {\n            return prev + 1;\n          });\n        }, 1000);\n        setDurationTimer(timer);\n      } catch (error) {\n        console.error(\"Error starting recording:\", error);\n        setIsRecording(false);\n        Alert.alert(t(\"rateDelivery.recordingError\"), t(\"rateDelivery.couldNotStartRecording\"));\n      }\n    });\n    return function startRecording() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var stopRecording = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!recording) return;\n      try {\n        if (durationTimer) {\n          clearInterval(durationTimer);\n          setDurationTimer(null);\n        }\n        yield recording.stopAndUnloadAsync();\n        var uri = recording.getURI();\n        setRecording(null);\n        setIsRecording(false);\n        if (uri) {\n          setIsProcessing(true);\n          var base64Audio = yield FileSystem.readAsStringAsync(uri, {\n            encoding: FileSystem.EncodingType.Base64\n          });\n          onRecordingComplete(base64Audio);\n          if (transcribeAudio && isConnected && onTranscriptionComplete) {\n            try {\n              onTranscriptionComplete(\"\");\n            } catch (error) {\n              console.error(\"Error transcribing audio:\", error);\n            }\n          } else if (transcribeAudio && !isConnected && onTranscriptionComplete) {\n            Alert.alert(t(\"rateDelivery.offlineMode\"), t(\"rateDelivery.cannotTranscribeOffline\"));\n          }\n        }\n      } catch (error) {\n        console.error(\"Error stopping recording:\", error);\n        Alert.alert(t(\"rateDelivery.recordingError\"), t(\"rateDelivery.couldNotStopRecording\"));\n      } finally {\n        setIsProcessing(false);\n      }\n    });\n    return function stopRecording() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var formatDuration = function formatDuration(seconds) {\n    var mins = Math.floor(seconds / 60);\n    var secs = seconds % 60;\n    return mins + \":\" + (secs < 10 ? \"0\" : \"\") + secs;\n  };\n  return _jsxs(View, {\n    style: [styles.container, style],\n    children: [showTimer && isRecording && _jsx(View, {\n      style: styles.timerContainer,\n      children: _jsx(Text, {\n        style: styles.timerText,\n        children: formatDuration(recordingDuration)\n      })\n    }), _jsx(TouchableOpacity, {\n      style: [styles.recordButton, {\n        width: buttonSize,\n        height: buttonSize,\n        borderRadius: buttonSize / 2,\n        backgroundColor: isRecording ? buttonActiveColor : buttonColor\n      }, disabled && styles.disabledButton],\n      onPress: isRecording ? stopRecording : startRecording,\n      disabled: disabled || isProcessing,\n      children: isProcessing ? _jsx(ActivityIndicator, {\n        color: \"#FFFFFF\",\n        size: buttonSize / 3\n      }) : _jsx(IconButton, {\n        icon: isRecording ? \"stop\" : \"microphone\",\n        size: buttonSize / 2,\n        iconColor: \"#FFFFFF\",\n        style: styles.buttonIcon\n      })\n    }), isRecording && _jsxs(Text, {\n      style: styles.recordingText,\n      children: [t(\"voiceAssistant.recording\"), \" \", showTimer ? \"(\" + formatDuration(recordingDuration) + \")\" : \"\"]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  recordButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 3,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84\n  },\n  disabledButton: {\n    backgroundColor: \"#CCCCCC\",\n    opacity: 0.7\n  },\n  buttonIcon: {\n    margin: 0\n  },\n  timerContainer: {\n    marginBottom: 8\n  },\n  timerText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#212121\"\n  },\n  recordingText: {\n    marginTop: 8,\n    fontSize: 14,\n    color: \"#F44336\"\n  }\n});\nexport default VoiceRecorder;","map":{"version":3,"names":["_asyncToGenerator","_slicedToArray","useState","useEffect","View","StyleSheet","TouchableOpacity","Platform","Alert","Text","ActivityIndicator","IconButton","Audio","FileSystem","Permissions","useTranslation","useNetwork","jsx","_jsx","jsxs","_jsxs","VoiceRecorder","_ref","onRecordingComplete","onTranscriptionComplete","_ref$transcribeAudio","transcribeAudio","_ref$maxDuration","maxDuration","_ref$buttonSize","buttonSize","_ref$buttonColor","buttonColor","_ref$buttonActiveColo","buttonActiveColor","_ref$showTimer","showTimer","_ref$disabled","disabled","style","_useTranslation","t","_useNetwork","isConnected","_useState","_useState2","isRecording","setIsRecording","_useState3","_useState4","recording","setRecording","_useState5","_useState6","recordingDuration","setRecordingDuration","_useState7","_useState8","durationTimer","setDurationTimer","_useState9","_useState0","permissionGranted","setPermissionGranted","_useState1","_useState10","isProcessing","setIsProcessing","checkPermissions","clearInterval","stopRecording","_ref2","OS","_yield$Permissions$as","askAsync","AUDIO_RECORDING","status","apply","arguments","startRecording","_ref3","alert","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","staysActiveInBackground","shouldDuckAndroid","Recording","prepareToRecordAsync","RecordingOptionsPresets","HIGH_QUALITY","startAsync","timer","setInterval","prev","error","console","_ref4","stopAndUnloadAsync","uri","getURI","base64Audio","readAsStringAsync","encoding","EncodingType","Base64","formatDuration","seconds","mins","Math","floor","secs","styles","container","children","timerContainer","timerText","recordButton","width","height","borderRadius","backgroundColor","disabledButton","onPress","color","size","icon","iconColor","buttonIcon","recordingText","create","alignItems","justifyContent","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","opacity","margin","marginBottom","fontSize","fontWeight","marginTop"],"sources":["/home/runner/workspace/mobile/components/VoiceRecorder.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { useState, useEffect } from \"react\"\nimport { View, StyleSheet, TouchableOpacity, Platform, Alert } from \"react-native\"\nimport { Text, ActivityIndicator, IconButton } from \"react-native-paper\"\nimport { Audio } from \"expo-av\"\nimport * as FileSystem from \"expo-file-system\"\nimport * as Permissions from \"expo-permissions\"\nimport { useTranslation } from \"react-i18next\"\nimport { useNetwork } from \"../contexts/NetworkContext\"\n\ninterface VoiceRecorderProps {\n  onRecordingComplete: (base64Audio: string) => void\n  onTranscriptionComplete?: (text: string) => void\n  transcribeAudio?: boolean\n  maxDuration?: number\n  buttonSize?: number\n  buttonColor?: string\n  buttonActiveColor?: string\n  showTimer?: boolean\n  disabled?: boolean\n  style?: any\n}\n\nconst VoiceRecorder: React.FC<VoiceRecorderProps> = ({\n  onRecordingComplete,\n  onTranscriptionComplete,\n  transcribeAudio = false,\n  maxDuration = 60,\n  buttonSize = 64,\n  buttonColor = \"#FF6B00\",\n  buttonActiveColor = \"#F44336\",\n  showTimer = true,\n  disabled = false,\n  style,\n}) => {\n  const { t } = useTranslation()\n  const { isConnected } = useNetwork()\n\n  const [isRecording, setIsRecording] = useState<boolean>(false)\n  const [recording, setRecording] = useState<Audio.Recording | null>(null)\n  const [recordingDuration, setRecordingDuration] = useState<number>(0)\n  const [durationTimer, setDurationTimer] = useState<number | null>(null)\n  const [permissionGranted, setPermissionGranted] = useState<boolean>(false)\n  const [isProcessing, setIsProcessing] = useState<boolean>(false)\n\n  useEffect(() => {\n    checkPermissions()\n    return () => {\n      if (durationTimer) {\n        clearInterval(durationTimer)\n      }\n      if (recording) {\n        stopRecording()\n      }\n    }\n  }, [])\n\n  useEffect(() => {\n    if (recordingDuration >= maxDuration && isRecording) {\n      stopRecording()\n    }\n  }, [recordingDuration, maxDuration, isRecording])\n\n  const checkPermissions = async (): Promise<void> => {\n    if (Platform.OS === \"web\") {\n      setPermissionGranted(true)\n      return\n    }\n\n    const { status } = await Permissions.askAsync(Permissions.AUDIO_RECORDING)\n    setPermissionGranted(status === \"granted\")\n  }\n\n  const startRecording = async (): Promise<void> => {\n    if (disabled) return\n\n    if (!permissionGranted) {\n      await checkPermissions()\n      if (!permissionGranted) {\n        Alert.alert(t(\"voiceAssistant.permissionDenied\"), t(\"voiceAssistant.microphonePermissionRequired\"))\n        return\n      }\n    }\n\n    try {\n      setIsRecording(true)\n      setRecordingDuration(0)\n\n      // Configure audio\n      await Audio.setAudioModeAsync({\n        allowsRecordingIOS: true,\n        playsInSilentModeIOS: true,\n        staysActiveInBackground: false,\n        shouldDuckAndroid: true,\n      })\n\n      // Start recording\n      const recording = new Audio.Recording()\n      await recording.prepareToRecordAsync(Audio.RecordingOptionsPresets.HIGH_QUALITY)\n      await recording.startAsync()\n      setRecording(recording)\n\n      // Start timer\n      const timer = setInterval(() => {\n        setRecordingDuration((prev) => prev + 1)\n      }, 1000)\n      setDurationTimer(timer as unknown as number)\n    } catch (error) {\n      console.error(\"Error starting recording:\", error)\n      setIsRecording(false)\n      Alert.alert(t(\"rateDelivery.recordingError\"), t(\"rateDelivery.couldNotStartRecording\"))\n    }\n  }\n\n  const stopRecording = async (): Promise<void> => {\n    if (!recording) return\n\n    try {\n      // Stop timer\n      if (durationTimer) {\n        clearInterval(durationTimer)\n        setDurationTimer(null)\n      }\n\n      // Stop recording\n      await recording.stopAndUnloadAsync()\n      const uri = recording.getURI()\n      setRecording(null)\n      setIsRecording(false)\n\n      if (uri) {\n        setIsProcessing(true)\n\n        // Convert recording to base64\n        const base64Audio = await FileSystem.readAsStringAsync(uri, {\n          encoding: FileSystem.EncodingType.Base64,\n        })\n\n        // Pass the base64 audio to the parent component\n        onRecordingComplete(base64Audio)\n\n        // Transcribe if needed and online\n        if (transcribeAudio && isConnected && onTranscriptionComplete) {\n          try {\n            // Transcription would be handled by the parent component\n            // This is just a placeholder for the flow\n            onTranscriptionComplete(\"\")\n          } catch (error) {\n            console.error(\"Error transcribing audio:\", error)\n          }\n        } else if (transcribeAudio && !isConnected && onTranscriptionComplete) {\n          Alert.alert(t(\"rateDelivery.offlineMode\"), t(\"rateDelivery.cannotTranscribeOffline\"))\n        }\n      }\n    } catch (error) {\n      console.error(\"Error stopping recording:\", error)\n      Alert.alert(t(\"rateDelivery.recordingError\"), t(\"rateDelivery.couldNotStopRecording\"))\n    } finally {\n      setIsProcessing(false)\n    }\n  }\n\n  const formatDuration = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60)\n    const secs = seconds % 60\n    return `${mins}:${secs < 10 ? \"0\" : \"\"}${secs}`\n  }\n\n  return (\n    <View style={[styles.container, style]}>\n      {showTimer && isRecording && (\n        <View style={styles.timerContainer}>\n          <Text style={styles.timerText}>{formatDuration(recordingDuration)}</Text>\n        </View>\n      )}\n\n      <TouchableOpacity\n        style={[\n          styles.recordButton,\n          {\n            width: buttonSize,\n            height: buttonSize,\n            borderRadius: buttonSize / 2,\n            backgroundColor: isRecording ? buttonActiveColor : buttonColor,\n          },\n          disabled && styles.disabledButton,\n        ]}\n        onPress={isRecording ? stopRecording : startRecording}\n        disabled={disabled || isProcessing}\n      >\n        {isProcessing ? (\n          <ActivityIndicator color=\"#FFFFFF\" size={buttonSize / 3} />\n        ) : (\n          <IconButton\n            icon={isRecording ? \"stop\" : \"microphone\"}\n            size={buttonSize / 2}\n            iconColor=\"#FFFFFF\"\n            style={styles.buttonIcon}\n          />\n        )}\n      </TouchableOpacity>\n\n      {isRecording && (\n        <Text style={styles.recordingText}>\n          {t(\"voiceAssistant.recording\")} {showTimer ? `(${formatDuration(recordingDuration)})` : \"\"}\n        </Text>\n      )}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  recordButton: {\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    elevation: 3,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  disabledButton: {\n    backgroundColor: \"#CCCCCC\",\n    opacity: 0.7,\n  },\n  buttonIcon: {\n    margin: 0,\n  },\n  timerContainer: {\n    marginBottom: 8,\n  },\n  timerText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#212121\",\n  },\n  recordingText: {\n    marginTop: 8,\n    fontSize: 14,\n    color: \"#F44336\",\n  },\n})\n\nexport default VoiceRecorder\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}