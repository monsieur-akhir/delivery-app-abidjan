{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Feather } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar StarRating = function StarRating(_ref) {\n  var rating = _ref.rating,\n    onRatingChange = _ref.onRatingChange,\n    _ref$maxRating = _ref.maxRating,\n    maxRating = _ref$maxRating === void 0 ? 5 : _ref$maxRating,\n    _ref$starSize = _ref.starSize,\n    starSize = _ref$starSize === void 0 ? 24 : _ref$starSize,\n    size = _ref.size,\n    _ref$disabled = _ref.disabled,\n    disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n    _ref$readonly = _ref.readonly,\n    readonly = _ref$readonly === void 0 ? false : _ref$readonly,\n    _ref$editable = _ref.editable,\n    editable = _ref$editable === void 0 ? false : _ref$editable,\n    style = _ref.style;\n  var finalSize = size || starSize;\n  var handleStarPress = function handleStarPress(selectedRating) {\n    if (!disabled && !readonly && onRatingChange) {\n      onRatingChange(selectedRating);\n    }\n  };\n  var renderStar = function renderStar(index) {\n    var isFilled = index < rating;\n    var isInteractive = !disabled && !readonly && onRatingChange;\n    if (isInteractive) {\n      return _jsx(TouchableOpacity, {\n        style: styles.star,\n        onPress: function onPress() {\n          return handleStarPress(index + 1);\n        },\n        disabled: disabled,\n        children: _jsx(Feather, {\n          name: \"star\",\n          size: finalSize,\n          color: isFilled ? '#FFD700' : '#E0E0E0',\n          style: isFilled ? styles.filledStar : styles.emptyStar\n        })\n      }, index);\n    }\n    return _jsx(View, {\n      style: styles.star,\n      children: _jsx(Feather, {\n        name: \"star\",\n        size: finalSize,\n        color: isFilled ? '#FFD700' : '#E0E0E0',\n        style: isFilled ? styles.filledStar : styles.emptyStar\n      })\n    }, index);\n  };\n  return _jsx(View, {\n    style: [styles.container, style],\n    children: Array.from({\n      length: maxRating\n    }, function (_, index) {\n      return renderStar(index);\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  star: {\n    marginHorizontal: 2\n  },\n  filledStar: {\n    color: '#FFD700'\n  },\n  emptyStar: {\n    color: '#E0E0E0'\n  }\n});\nexport default StarRating;","map":{"version":3,"names":["React","View","TouchableOpacity","StyleSheet","Feather","jsx","_jsx","StarRating","_ref","rating","onRatingChange","_ref$maxRating","maxRating","_ref$starSize","starSize","size","_ref$disabled","disabled","_ref$readonly","readonly","_ref$editable","editable","style","finalSize","handleStarPress","selectedRating","renderStar","index","isFilled","isInteractive","styles","star","onPress","children","name","color","filledStar","emptyStar","container","Array","from","length","_","create","flexDirection","alignItems","marginHorizontal"],"sources":["/home/runner/workspace/mobile/components/StarRating.tsx"],"sourcesContent":["import React from 'react'\nimport { View, TouchableOpacity, StyleSheet } from 'react-native'\nimport { Feather } from '@expo/vector-icons'\n\nexport interface StarRatingProps {\n  rating: number\n  onRatingChange?: (rating: number) => void\n  maxRating?: number\n  starSize?: number\n  size?: number\n  disabled?: boolean\n  readonly?: boolean\n  editable?: boolean\n  style?: any\n}\n\nconst StarRating: React.FC<StarRatingProps> = ({\n  rating,\n  onRatingChange,\n  maxRating = 5,\n  starSize = 24,\n  size,\n  disabled = false,\n  readonly = false,\n  editable = false,\n  style,\n}) => {\n  const finalSize = size || starSize\n  const handleStarPress = (selectedRating: number) => {\n    if (!disabled && !readonly && onRatingChange) {\n      onRatingChange(selectedRating)\n    }\n  }\n\n  const renderStar = (index: number) => {\n    const isFilled = index < rating\n    const isInteractive = !disabled && !readonly && onRatingChange\n\n    if (isInteractive) {\n      return (\n        <TouchableOpacity\n          key={index}\n          style={styles.star}\n          onPress={() => handleStarPress(index + 1)}\n          disabled={disabled}\n        >\n          <Feather\n            name=\"star\"\n            size={finalSize}\n            color={isFilled ? '#FFD700' : '#E0E0E0'}\n            style={isFilled ? styles.filledStar : styles.emptyStar}\n          />\n        </TouchableOpacity>\n      )\n    }\n\n    return (\n      <View key={index} style={styles.star}>\n        <Feather\n          name=\"star\"\n          size={finalSize}\n          color={isFilled ? '#FFD700' : '#E0E0E0'}\n          style={isFilled ? styles.filledStar : styles.emptyStar}\n        />\n      </View>\n    )\n  }\n\n  return (\n    <View style={[styles.container, style]}>\n      {Array.from({ length: maxRating }, (_, index) => renderStar(index))}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  star: {\n    marginHorizontal: 2,\n  },\n  filledStar: {\n    color: '#FFD700',\n  },\n  emptyStar: {\n    color: '#E0E0E0',\n  },\n})\n\nexport default StarRating"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}