{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState, useCallback } from 'react';\nimport UserService from \"../services/UserService\";\nimport NotificationService from \"../services/NotificationService\";\nexport var useUser = function useUser() {\n  var _useState = useState({\n      profile: null,\n      kycStatus: null,\n      kycDocuments: [],\n      notifications: null,\n      preferences: null,\n      stats: null,\n      isLoading: false,\n      error: null,\n      courierEarnings: null,\n      walletTransactions: [],\n      weather: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var getProfile = useCallback(_asyncToGenerator(function* () {\n    try {\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isLoading: true,\n          error: null\n        });\n      });\n      var profile = yield UserService.getCurrentUser();\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          profile: profile,\n          isLoading: false\n        });\n      });\n    } catch (error) {\n      var errorMessage = error instanceof Error ? error.message : 'Failed to fetch profile';\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: errorMessage,\n          isLoading: false\n        });\n      });\n    }\n  }), []);\n  var updateProfile = useCallback(function () {\n    var _ref2 = _asyncToGenerator(function* (data) {\n      try {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: null\n          });\n        });\n        var updatedProfile = yield UserService.updateProfile(data);\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            profile: updatedProfile\n          });\n        });\n      } catch (error) {\n        var errorMessage = error instanceof Error ? error.message : 'Failed to update profile';\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: errorMessage\n          });\n        });\n        throw error;\n      }\n    });\n    return function (_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), []);\n  var uploadProfilePhoto = useCallback(function () {\n    var _ref3 = _asyncToGenerator(function* (imageUri) {\n      try {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: null\n          });\n        });\n        yield UserService.uploadProfilePicture(imageUri);\n        yield getProfile();\n      } catch (error) {\n        var errorMessage = error instanceof Error ? error.message : 'Failed to upload profile photo';\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: errorMessage\n          });\n        });\n        throw error;\n      }\n    });\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [getProfile]);\n  var getKYCStatus = useCallback(_asyncToGenerator(function* () {\n    try {\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: null\n        });\n      });\n      var kycStatus = yield UserService.getKYCStatus();\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          kycStatus: kycStatus\n        });\n      });\n    } catch (error) {\n      var errorMessage = error instanceof Error ? error.message : 'Failed to fetch KYC status';\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: errorMessage\n        });\n      });\n    }\n  }), []);\n  var uploadKYCDocument = useCallback(function () {\n    var _ref5 = _asyncToGenerator(function* (type, imageUri) {\n      try {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: null\n          });\n        });\n        yield UserService.uploadKYCDocument(type, imageUri);\n        yield getKYCStatus();\n      } catch (error) {\n        var errorMessage = error instanceof Error ? error.message : 'Failed to upload KYC document';\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: errorMessage\n          });\n        });\n        throw error;\n      }\n    });\n    return function (_x3, _x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }(), [getKYCStatus]);\n  var deleteKYCDocument = useCallback(function () {\n    var _ref6 = _asyncToGenerator(function* (documentId) {\n      try {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: null\n          });\n        });\n        yield UserService.deleteKYCDocument(documentId);\n        yield getKYCStatus();\n      } catch (error) {\n        var errorMessage = error instanceof Error ? error.message : 'Failed to delete KYC document';\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: errorMessage\n          });\n        });\n        throw error;\n      }\n    });\n    return function (_x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }(), [getKYCStatus]);\n  var submitKYCForVerification = useCallback(_asyncToGenerator(function* () {\n    try {\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: null\n        });\n      });\n      yield UserService.submitKYCForVerification();\n      yield getKYCStatus();\n    } catch (error) {\n      var errorMessage = error instanceof Error ? error.message : 'Failed to submit KYC for verification';\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: errorMessage\n        });\n      });\n      throw error;\n    }\n  }), [getKYCStatus]);\n  var getNotifications = useCallback(_asyncToGenerator(function* () {\n    var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n    try {\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: null\n        });\n      });\n      var notifications = yield UserService.getNotifications(page, limit);\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          notifications: notifications\n        });\n      });\n    } catch (error) {\n      var errorMessage = error instanceof Error ? error.message : 'Failed to fetch notifications';\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: errorMessage\n        });\n      });\n    }\n  }), []);\n  var markNotificationAsRead = useCallback(function () {\n    var _ref9 = _asyncToGenerator(function* (notificationId) {\n      try {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: null\n          });\n        });\n        yield UserService.markNotificationAsRead(notificationId);\n      } catch (error) {\n        var errorMessage = error instanceof Error ? error.message : 'Failed to mark notification as read';\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: errorMessage\n          });\n        });\n        throw error;\n      }\n    });\n    return function (_x6) {\n      return _ref9.apply(this, arguments);\n    };\n  }(), []);\n  var registerPushToken = useCallback(function () {\n    var _ref0 = _asyncToGenerator(function* (token, platform) {\n      try {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: null\n          });\n        });\n        yield UserService.registerPushToken({\n          token: token,\n          platform: platform\n        });\n      } catch (error) {\n        var errorMessage = error instanceof Error ? error.message : 'Failed to register push token';\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: errorMessage\n          });\n        });\n        throw error;\n      }\n    });\n    return function (_x7, _x8) {\n      return _ref0.apply(this, arguments);\n    };\n  }(), []);\n  var unregisterPushToken = useCallback(_asyncToGenerator(function* () {\n    try {\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: null\n        });\n      });\n      yield UserService.unregisterPushToken();\n    } catch (error) {\n      var errorMessage = error instanceof Error ? error.message : 'Failed to unregister push token';\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: errorMessage\n        });\n      });\n      throw error;\n    }\n  }), []);\n  var getPreferences = useCallback(_asyncToGenerator(function* () {\n    try {\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: null\n        });\n      });\n      var preferences = yield UserService.getPreferences();\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          preferences: preferences\n        });\n      });\n    } catch (error) {\n      var errorMessage = error instanceof Error ? error.message : 'Failed to fetch preferences';\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: errorMessage\n        });\n      });\n    }\n  }), []);\n  var updatePreferences = useCallback(function () {\n    var _ref11 = _asyncToGenerator(function* (preferences) {\n      try {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: null\n          });\n        });\n        var updatedPreferences = yield UserService.updatePreferences(preferences);\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            preferences: updatedPreferences\n          });\n        });\n      } catch (error) {\n        var errorMessage = error instanceof Error ? error.message : 'Failed to update preferences';\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: errorMessage\n          });\n        });\n        throw error;\n      }\n    });\n    return function (_x9) {\n      return _ref11.apply(this, arguments);\n    };\n  }(), []);\n  var updateLocation = useCallback(function () {\n    var _ref12 = _asyncToGenerator(function* (locationData) {\n      try {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: null\n          });\n        });\n        yield UserService.updateLocation(locationData);\n      } catch (error) {\n        var errorMessage = error instanceof Error ? error.message : 'Failed to update location';\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: errorMessage\n          });\n        });\n        throw error;\n      }\n    });\n    return function (_x0) {\n      return _ref12.apply(this, arguments);\n    };\n  }(), []);\n  var getNotificationSettings = useCallback(_asyncToGenerator(function* () {\n    try {\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: null\n        });\n      });\n      var serviceSettings = yield NotificationService.getNotificationSettings();\n      var notificationSettings = {\n        delivery_updates: serviceSettings.delivery_updates || false,\n        delivery_notifications: serviceSettings.delivery_updates || false,\n        bid_notifications: serviceSettings.promotional_offers || false,\n        payment_notifications: serviceSettings.security_alerts || false,\n        promotional_offers: serviceSettings.promotional_offers || false,\n        security_alerts: serviceSettings.security_alerts || false,\n        push_notifications: serviceSettings.push_notifications || false,\n        email_notifications: serviceSettings.email_notifications || false,\n        sms_notifications: serviceSettings.sms_notifications || false,\n        whatsapp_enabled: serviceSettings.whatsapp_enabled || false\n      };\n      return notificationSettings;\n    } catch (error) {\n      var errorMessage = error instanceof Error ? error.message : 'Failed to fetch notification settings';\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: errorMessage\n        });\n      });\n      throw error;\n    }\n  }), []);\n  var updateNotificationSettings = useCallback(function () {\n    var _ref14 = _asyncToGenerator(function* (settings) {\n      try {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: null\n          });\n        });\n        var success = yield NotificationService.updateNotificationSettings(settings);\n        return success;\n      } catch (error) {\n        var errorMessage = error instanceof Error ? error.message : 'Failed to update notification settings';\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: errorMessage\n          });\n        });\n        throw error;\n      }\n    });\n    return function (_x1) {\n      return _ref14.apply(this, arguments);\n    };\n  }(), []);\n  var refreshProfile = useCallback(_asyncToGenerator(function* () {\n    yield getProfile();\n  }), [getProfile]);\n  var clearError = useCallback(function () {\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        error: null\n      });\n    });\n  }, []);\n  var getCourierProfile = useCallback(_asyncToGenerator(function* () {\n    try {\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isLoading: true,\n          error: null\n        });\n      });\n      var profile = yield UserService.getCurrentUser();\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          profile: profile,\n          isLoading: false\n        });\n      });\n      return profile;\n    } catch (error) {\n      var errorMessage = error instanceof Error ? error.message : 'Failed to fetch courier profile';\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: errorMessage,\n          isLoading: false\n        });\n      });\n      return null;\n    }\n  }), []);\n  var updateCourierStatus = useCallback(function () {\n    var _ref17 = _asyncToGenerator(function* (isOnline, _lat, _lng) {\n      try {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: null\n          });\n        });\n        yield UserService.updateProfile({\n          is_online: isOnline\n        });\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            profile: prev.profile ? _objectSpread(_objectSpread({}, prev.profile), {}, {\n              is_online: isOnline\n            }) : null\n          });\n        });\n      } catch (error) {\n        var errorMessage = error instanceof Error ? error.message : 'Failed to update courier status';\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: errorMessage\n          });\n        });\n      }\n    });\n    return function (_x10, _x11, _x12) {\n      return _ref17.apply(this, arguments);\n    };\n  }(), []);\n  var getCourierEarnings = useCallback(_asyncToGenerator(function* () {\n    var period = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'month';\n    try {\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isLoading: true,\n          error: null\n        });\n      });\n      var earnings = {\n        daily_earnings: 0,\n        weekly_earnings: 0,\n        monthly_earnings: 0,\n        total_earnings: 0,\n        pending_earnings: 0,\n        completed_deliveries: 0,\n        average_rating: 0,\n        earnings_history: [],\n        period_earnings: 0,\n        delivery_count: 0,\n        average_per_delivery: 0,\n        period: period\n      };\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          courierEarnings: earnings,\n          isLoading: false\n        });\n      });\n      return earnings;\n    } catch (error) {\n      var errorMessage = error instanceof Error ? error.message : 'Failed to fetch courier earnings';\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: errorMessage,\n          isLoading: false\n        });\n      });\n      throw error;\n    }\n  }), []);\n  var getWeatherForecast = useCallback(function () {\n    var _ref19 = _asyncToGenerator(function* (_lat, _lng) {\n      try {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: null\n          });\n        });\n        var weather = {\n          temperature: 28,\n          condition: 'sunny',\n          humidity: 65,\n          wind_speed: 10,\n          location: 'Abidjan',\n          current: {\n            temperature: 28,\n            condition: 'sunny',\n            humidity: 65,\n            wind_speed: 10\n          },\n          feels_like: 30,\n          wind_mph: 6,\n          wind_kph: 10,\n          wind_degree: 180,\n          wind_dir: 'S',\n          pressure_mb: 1013,\n          pressure_in: 30,\n          precip_mm: 0,\n          precip_in: 0,\n          cloud: 20,\n          vis_km: 10,\n          vis_miles: 6\n        };\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            weather: weather\n          });\n        });\n        return weather;\n      } catch (error) {\n        var errorMessage = error instanceof Error ? error.message : 'Failed to fetch weather forecast';\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: errorMessage\n          });\n        });\n        return null;\n      }\n    });\n    return function (_x13, _x14) {\n      return _ref19.apply(this, arguments);\n    };\n  }(), []);\n  var getUserProfile = useCallback(_asyncToGenerator(function* () {\n    yield getProfile();\n    return state.profile;\n  }), [getProfile, state.profile]);\n  var getWalletTransactions = useCallback(_asyncToGenerator(function* () {\n    var _page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var _limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 20;\n    try {\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          isLoading: true,\n          error: null\n        });\n      });\n      var transactions = [];\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          walletTransactions: transactions,\n          isLoading: false\n        });\n      });\n      return transactions;\n    } catch (error) {\n      var errorMessage = error instanceof Error ? error.message : 'Failed to fetch wallet transactions';\n      setState(function (prev) {\n        return _objectSpread(_objectSpread({}, prev), {}, {\n          error: errorMessage,\n          isLoading: false\n        });\n      });\n      return [];\n    }\n  }), []);\n  var withdrawFunds = useCallback(function () {\n    var _ref22 = _asyncToGenerator(function* (_amount, _paymentMethod) {\n      try {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: null\n          });\n        });\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 1000);\n        });\n      } catch (error) {\n        var errorMessage = error instanceof Error ? error.message : 'Failed to withdraw funds';\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: errorMessage\n          });\n        });\n      }\n    });\n    return function (_x15, _x16) {\n      return _ref22.apply(this, arguments);\n    };\n  }(), []);\n  var requestPayout = useCallback(function () {\n    var _ref23 = _asyncToGenerator(function* (_request) {\n      try {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: null\n          });\n        });\n        yield new Promise(function (resolve) {\n          return setTimeout(resolve, 1000);\n        });\n      } catch (error) {\n        var errorMessage = error instanceof Error ? error.message : 'Failed to request payout';\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            error: errorMessage\n          });\n        });\n      }\n    });\n    return function (_x17) {\n      return _ref23.apply(this, arguments);\n    };\n  }(), []);\n  var getUserPreferences = getPreferences;\n  var updateUserPreferences = updatePreferences;\n  return _objectSpread(_objectSpread({}, state), {}, {\n    userProfile: state.profile,\n    loading: state.isLoading,\n    getProfile: getProfile,\n    updateProfile: updateProfile,\n    uploadProfilePhoto: uploadProfilePhoto,\n    getKYCStatus: getKYCStatus,\n    uploadKYCDocument: uploadKYCDocument,\n    deleteKYCDocument: deleteKYCDocument,\n    submitKYCForVerification: submitKYCForVerification,\n    getNotifications: getNotifications,\n    markNotificationAsRead: markNotificationAsRead,\n    registerPushToken: registerPushToken,\n    unregisterPushToken: unregisterPushToken,\n    getPreferences: getPreferences,\n    updatePreferences: updatePreferences,\n    updateLocation: updateLocation,\n    clearError: clearError,\n    refreshProfile: refreshProfile,\n    getUserPreferences: getUserPreferences,\n    updateUserPreferences: updateUserPreferences,\n    getNotificationSettings: getNotificationSettings,\n    updateNotificationSettings: updateNotificationSettings,\n    getCourierProfile: getCourierProfile,\n    updateCourierStatus: updateCourierStatus,\n    getCourierEarnings: getCourierEarnings,\n    getWeatherForecast: getWeatherForecast,\n    getUserProfile: getUserProfile,\n    getWalletTransactions: getWalletTransactions,\n    withdrawFunds: withdrawFunds,\n    requestPayout: requestPayout\n  });\n};\nexport default useUser;","map":{"version":3,"names":["useState","useCallback","UserService","NotificationService","useUser","_useState","profile","kycStatus","kycDocuments","notifications","preferences","stats","isLoading","error","courierEarnings","walletTransactions","weather","_useState2","_slicedToArray","state","setState","getProfile","_asyncToGenerator","prev","_objectSpread","getCurrentUser","errorMessage","Error","message","updateProfile","_ref2","data","updatedProfile","_x","apply","arguments","uploadProfilePhoto","_ref3","imageUri","uploadProfilePicture","_x2","getKYCStatus","uploadKYCDocument","_ref5","type","_x3","_x4","deleteKYCDocument","_ref6","documentId","_x5","submitKYCForVerification","getNotifications","page","length","undefined","limit","markNotificationAsRead","_ref9","notificationId","_x6","registerPushToken","_ref0","token","platform","_x7","_x8","unregisterPushToken","getPreferences","updatePreferences","_ref11","updatedPreferences","_x9","updateLocation","_ref12","locationData","_x0","getNotificationSettings","serviceSettings","notificationSettings","delivery_updates","delivery_notifications","bid_notifications","promotional_offers","payment_notifications","security_alerts","push_notifications","email_notifications","sms_notifications","whatsapp_enabled","updateNotificationSettings","_ref14","settings","success","_x1","refreshProfile","clearError","getCourierProfile","updateCourierStatus","_ref17","isOnline","_lat","_lng","is_online","_x10","_x11","_x12","getCourierEarnings","period","earnings","daily_earnings","weekly_earnings","monthly_earnings","total_earnings","pending_earnings","completed_deliveries","average_rating","earnings_history","period_earnings","delivery_count","average_per_delivery","getWeatherForecast","_ref19","temperature","condition","humidity","wind_speed","location","current","feels_like","wind_mph","wind_kph","wind_degree","wind_dir","pressure_mb","pressure_in","precip_mm","precip_in","cloud","vis_km","vis_miles","_x13","_x14","getUserProfile","getWalletTransactions","_page","_limit","transactions","withdrawFunds","_ref22","_amount","_paymentMethod","Promise","resolve","setTimeout","_x15","_x16","requestPayout","_ref23","_request","_x17","getUserPreferences","updateUserPreferences","userProfile","loading"],"sources":["/home/runner/workspace/mobile/hooks/useUser.ts"],"sourcesContent":["// Hook pour la gestion des utilisateurs\nimport { useState, useCallback } from 'react';\nimport UserService from '../services/UserService';\nimport NotificationService, { NotificationSettings as ServiceNotificationSettings } from '../services/NotificationService';\nimport type { \n  User,\n  KYCDocument,\n  KYCStatus,\n  UserPreferences,\n  UserStats,\n  Notification,\n  NotificationSettings,\n  CourierEarningsData,\n  WalletTransaction,\n  PayoutRequest,\n  Weather\n} from '../types/models';\n\ninterface UserState {\n  profile: User | null;\n  kycStatus: { status: KYCStatus; documents: KYCDocument[] } | null;\n  kycDocuments: KYCDocument[];\n  notifications: Notification[] | null;\n  preferences: UserPreferences | null;\n  stats: UserStats | null;\n  isLoading: boolean;\n  error: string | null;\n  // Additional state for courier functionality\n  courierEarnings: CourierEarningsData | null;\n  walletTransactions: WalletTransaction[];\n  weather: Weather | null;\n}\n\ninterface UseUserReturn extends UserState {\n  // Gestion du profil\n  getProfile: () => Promise<void>;\n  updateProfile: (data: Partial<User>) => Promise<void>;\n  uploadProfilePhoto: (imageUri: string) => Promise<void>;\n\n  // Gestion KYC\n  getKYCStatus: () => Promise<void>;\n  uploadKYCDocument: (type: string, imageUri: string) => Promise<void>;\n  deleteKYCDocument: (documentId: number) => Promise<void>;\n  submitKYCForVerification: () => Promise<void>;\n\n  // Notifications\n  getNotifications: (page?: number, limit?: number) => Promise<void>;\n  markNotificationAsRead: (notificationId: number) => Promise<void>;\n  registerPushToken: (token: string, platform: 'ios' | 'android') => Promise<void>;\n  unregisterPushToken: () => Promise<void>;\n\n  // Préférences\n  getPreferences: () => Promise<void>;\n  updatePreferences: (preferences: Partial<UserPreferences>) => Promise<void>;\n    // Alias pour la compatibilité\n  getUserPreferences: () => Promise<void>;\n  updateUserPreferences: (preferences: Partial<UserPreferences>) => Promise<void>;\n\n  // Notification settings (uses NotificationService)\n  getNotificationSettings: () => Promise<NotificationSettings>;\n  updateNotificationSettings: (settings: Partial<NotificationSettings>) => Promise<boolean>;\n\n  // Localisation\n  updateLocation: (locationData: { latitude: number; longitude: number; accuracy?: number }) => Promise<void>;\n    // Courier-specific methods\n  getCourierProfile: () => Promise<User | null>;\n  updateCourierStatus: (isOnline: boolean, lat?: number, lng?: number) => Promise<void>;\n  getCourierEarnings: (period?: string) => Promise<CourierEarningsData>;\n  getWeatherForecast: (lat?: number, lng?: number) => Promise<Weather | null>;\n\n  // Wallet and transactions\n  getUserProfile: () => Promise<User | null>;\n  getWalletTransactions: (page?: number, limit?: number) => Promise<WalletTransaction[]>;\n  withdrawFunds: (amount: number, paymentMethod: string) => Promise<void>;\n  requestPayout: (request: PayoutRequest) => Promise<void>;\n\n  // Additional properties for compatibility\n  userProfile: User | null;\n  loading: boolean;\n\n  // Utilitaires\n  clearError: () => void;\n  refreshProfile: () => Promise<void>;\n}\n\nexport const useUser = (): UseUserReturn => {  const [state, setState] = useState<UserState>({\n    profile: null,\n    kycStatus: null,\n    kycDocuments: [],\n    notifications: null,\n    preferences: null,\n    stats: null,\n    isLoading: false,\n    error: null,\n    courierEarnings: null,\n    walletTransactions: [],\n    weather: null,\n  });\n\n  // Récupération du profil\n  const getProfile = useCallback(async () => {\n    try {\n      setState(prev => ({ ...prev, isLoading: true, error: null }));\n\n      const profile = await UserService.getCurrentUser();\n\n      setState(prev => ({\n        ...prev,\n        profile,\n        isLoading: false,\n      }));\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to fetch profile';\n      setState(prev => ({ ...prev, error: errorMessage, isLoading: false }));\n    }\n  }, []);\n\n  // Mise à jour du profil\n  const updateProfile = useCallback(async (data: Partial<User>) => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      const updatedProfile = await UserService.updateProfile(data);\n\n      setState(prev => ({\n        ...prev,\n        profile: updatedProfile,\n      }));\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to update profile';\n      setState(prev => ({ ...prev, error: errorMessage }));\n      throw error;\n    }\n  }, []);\n\n  // Upload de photo de profil\n  const uploadProfilePhoto = useCallback(async (imageUri: string) => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      await UserService.uploadProfilePicture(imageUri);\n\n      // Rafraîchir le profil après l'upload\n      await getProfile();\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to upload profile photo';\n      setState(prev => ({ ...prev, error: errorMessage }));\n      throw error;\n    }\n  }, [getProfile]);\n\n  // Récupération du statut KYC\n  const getKYCStatus = useCallback(async () => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      const kycStatus = await UserService.getKYCStatus();\n\n      setState(prev => ({\n        ...prev,\n        kycStatus,\n      }));\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to fetch KYC status';\n      setState(prev => ({ ...prev, error: errorMessage }));\n    }\n  }, []);\n\n  // Upload de document KYC\n  const uploadKYCDocument = useCallback(async (type: string, imageUri: string) => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      await UserService.uploadKYCDocument(type, imageUri);\n\n      // Rafraîchir le statut KYC après l'upload\n      await getKYCStatus();\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to upload KYC document';\n      setState(prev => ({ ...prev, error: errorMessage }));\n      throw error;\n    }\n  }, [getKYCStatus]);\n\n  // Suppression de document KYC\n  const deleteKYCDocument = useCallback(async (documentId: number) => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      await UserService.deleteKYCDocument(documentId);\n\n      // Rafraîchir le statut KYC après la suppression\n      await getKYCStatus();\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to delete KYC document';\n      setState(prev => ({ ...prev, error: errorMessage }));\n      throw error;\n    }\n  }, [getKYCStatus]);\n\n  // Soumission KYC pour vérification\n  const submitKYCForVerification = useCallback(async () => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      await UserService.submitKYCForVerification();\n\n      // Rafraîchir le statut KYC après la soumission\n      await getKYCStatus();\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to submit KYC for verification';\n      setState(prev => ({ ...prev, error: errorMessage }));\n      throw error;\n    }\n  }, [getKYCStatus]);\n\n  // Récupération des notifications\n  const getNotifications = useCallback(async (page: number = 1, limit: number = 20) => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      const notifications = await UserService.getNotifications(page, limit);\n\n      setState(prev => ({\n        ...prev,\n        notifications,\n      }));\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to fetch notifications';\n      setState(prev => ({ ...prev, error: errorMessage }));\n    }\n  }, []);\n\n  // Marquer une notification comme lue\n  const markNotificationAsRead = useCallback(async (notificationId: number) => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      await UserService.markNotificationAsRead(notificationId);\n\n      // Optionnel: rafraîchir les notifications\n      // await getNotifications();\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to mark notification as read';\n      setState(prev => ({ ...prev, error: errorMessage }));\n      throw error;\n    }\n  }, []);\n\n  // Enregistrement du token push\n  const registerPushToken = useCallback(async (token: string, platform: 'ios' | 'android') => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      await UserService.registerPushToken({ token, platform });\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to register push token';\n      setState(prev => ({ ...prev, error: errorMessage }));\n      throw error;\n    }\n  }, []);\n\n  // Désenregistrement du token push\n  const unregisterPushToken = useCallback(async () => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      await UserService.unregisterPushToken();\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to unregister push token';\n      setState(prev => ({ ...prev, error: errorMessage }));\n      throw error;\n    }\n  }, []);\n\n  // Récupération des préférences\n  const getPreferences = useCallback(async () => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      const preferences = await UserService.getPreferences();\n\n      setState(prev => ({\n        ...prev,\n        preferences,\n      }));\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to fetch preferences';\n      setState(prev => ({ ...prev, error: errorMessage }));\n    }\n  }, []);\n\n  // Mise à jour des préférences\n  const updatePreferences = useCallback(async (preferences: Partial<UserPreferences>) => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      const updatedPreferences = await UserService.updatePreferences(preferences);\n\n      setState(prev => ({\n        ...prev,\n        preferences: updatedPreferences,\n      }));\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to update preferences';\n      setState(prev => ({ ...prev, error: errorMessage }));\n      throw error;\n    }\n  }, []);\n\n  // Mise à jour de la localisation\n  const updateLocation = useCallback(async (locationData: { latitude: number; longitude: number; accuracy?: number }) => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      await UserService.updateLocation(locationData);\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to update location';\n      setState(prev => ({ ...prev, error: errorMessage }));\n      throw error;\n    }\n  }, []);\n\n  // Récupération des paramètres de notification\n  // Récupération des paramètres de notification avec conversion de type\n  const getNotificationSettings = useCallback(async (): Promise<NotificationSettings> => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      const serviceSettings = await NotificationService.getNotificationSettings();\n\n      // Convert service format to models format\n      const notificationSettings: NotificationSettings = {\n        delivery_updates: serviceSettings.delivery_updates || false,\n        delivery_notifications: serviceSettings.delivery_updates || false, // Use delivery_updates as fallback\n        bid_notifications: serviceSettings.promotional_offers || false, // Use promotional_offers as fallback\n        payment_notifications: serviceSettings.security_alerts || false, // Use security_alerts as fallback\n        promotional_offers: serviceSettings.promotional_offers || false,\n        security_alerts: serviceSettings.security_alerts || false,\n        push_notifications: serviceSettings.push_notifications || false,\n        email_notifications: serviceSettings.email_notifications || false,\n        sms_notifications: serviceSettings.sms_notifications || false,\n        whatsapp_enabled: serviceSettings.whatsapp_enabled || false,\n      };\n\n      return notificationSettings;\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to fetch notification settings';\n      setState(prev => ({ ...prev, error: errorMessage }));\n      throw error;\n    }\n  }, []);\n\n  // Mise à jour des paramètres de notification avec conversion de type\n  const updateNotificationSettings = useCallback(async (settings: Partial<NotificationSettings>) => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n\n      const success = await NotificationService.updateNotificationSettings(settings);\n\n      return success;\n    } catch (error) {      const errorMessage = error instanceof Error ? error.message : 'Failed to update notification settings';\n      setState(prev => ({ ...prev, error: errorMessage }));\n      throw error;\n    }\n  }, []);\n\n  // Actualisation du profil\n  const refreshProfile = useCallback(async () => {\n    await getProfile();\n  }, [getProfile]);\n  // Effacement des erreurs\n  const clearError = useCallback(() => {\n    setState(prev => ({ ...prev, error: null }));\n  }, []);\n\n  // === NOUVELLES MÉTHODES COURIER ===\n    // Récupération du profil coursier\n  const getCourierProfile = useCallback(async (): Promise<User | null> => {\n    try {\n      setState(prev => ({ ...prev, isLoading: true, error: null }));\n      const profile = await UserService.getCurrentUser();\n      setState(prev => ({\n        ...prev,\n        profile,\n        isLoading: false,\n      }));\n      return profile;\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to fetch courier profile';\n      setState(prev => ({ ...prev, error: errorMessage, isLoading: false }));\n      return null;\n    }\n  }, []);\n  // Mise à jour du statut du coursier\n  const updateCourierStatus = useCallback(async (isOnline: boolean, _lat?: number, _lng?: number) => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n      await UserService.updateProfile({ is_online: isOnline });\n      setState(prev => ({\n        ...prev,\n        profile: prev.profile ? { ...prev.profile, is_online: isOnline } : null,\n      }));\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to update courier status';\n      setState(prev => ({ ...prev, error: errorMessage }));\n    }\n  }, []);\n  // Récupération des gains du coursier\n  const getCourierEarnings = useCallback(async (period = 'month'): Promise<CourierEarningsData> => {\n    try {\n      setState(prev => ({ ...prev, isLoading: true, error: null }));\n\n      const earnings: CourierEarningsData = {\n        daily_earnings: 0,\n        weekly_earnings: 0,\n        monthly_earnings: 0,\n        total_earnings: 0,\n        pending_earnings: 0,\n        completed_deliveries: 0,\n        average_rating: 0,\n        earnings_history: [],\n        period_earnings: 0,\n        delivery_count: 0,\n        average_per_delivery: 0,\n        period: period,\n      };\n      setState(prev => ({\n        ...prev,\n        courierEarnings: earnings,\n        isLoading: false,\n      }));\n      return earnings;\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to fetch courier earnings';\n      setState(prev => ({ ...prev, error: errorMessage, isLoading: false }));\n      throw error;\n    }\n  }, []);\n  // Récupération des prévisions météo\n  const getWeatherForecast = useCallback(async (_lat?: number, _lng?: number): Promise<Weather | null> => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n      // This would need to be implemented in a WeatherService\n      // For now, we'll create a mock structure\n      const weather: Weather = {\n        temperature: 28,\n        condition: 'sunny',\n        humidity: 65,\n        wind_speed: 10,\n        location: 'Abidjan',\n        current: {\n          temperature: 28,\n          condition: 'sunny',\n          humidity: 65,\n          wind_speed: 10,\n        },\n        feels_like: 30,\n        wind_mph: 6,\n        wind_kph: 10,\n        wind_degree: 180,\n        wind_dir: 'S',\n        pressure_mb: 1013,\n        pressure_in: 30,\n        precip_mm: 0,\n        precip_in: 0,\n        cloud: 20,\n        vis_km: 10,\n        vis_miles: 6,\n      };\n      setState(prev => ({\n        ...prev,\n        weather,\n      }));\n      return weather;\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to fetch weather forecast';\n      setState(prev => ({ ...prev, error: errorMessage }));\n      return null;\n    }\n  }, []);\n\n  // === MÉTHODES WALLET ET TRANSACTIONS ===\n    // Alias pour getUserProfile\n  const getUserProfile = useCallback(async (): Promise<User | null> => {\n    await getProfile();\n    return state.profile;\n  }, [getProfile, state.profile]);\n  // Récupération des transactions du portefeuille\n  const getWalletTransactions = useCallback(async (_page = 1, _limit = 20): Promise<WalletTransaction[]> => {\n    try {\n      setState(prev => ({ ...prev, isLoading: true, error: null }));\n      // This would need to be implemented in UserService\n      // For now, we'll create an empty array\n      const transactions: WalletTransaction[] = [];\n      setState(prev => ({\n        ...prev,\n        walletTransactions: transactions,\n        isLoading: false,\n      }));\n      return transactions;\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to fetch wallet transactions';\n      setState(prev => ({ ...prev, error: errorMessage, isLoading: false }));\n      return [];\n    }\n  }, []);  // Retrait de fonds\n  const withdrawFunds = useCallback(async (_amount: number, _paymentMethod: string) => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n      // This would need to be implemented in UserService\n      // For now, we'll simulate the operation\n      await new Promise(resolve => setTimeout(resolve, 1000));\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to withdraw funds';\n      setState(prev => ({ ...prev, error: errorMessage }));\n    }\n  }, []);\n  // Demande de paiement\n  const requestPayout = useCallback(async (_request: PayoutRequest) => {\n    try {\n      setState(prev => ({ ...prev, error: null }));\n      // This would need to be implemented in UserService\n      // For now, we'll simulate the operation\n      await new Promise(resolve => setTimeout(resolve, 1000));\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : 'Failed to request payout';\n      setState(prev => ({ ...prev, error: errorMessage }));\n    }\n  }, []);\n\n  // Alias pour la compatibilité\n  const getUserPreferences = getPreferences;\n  const updateUserPreferences = updatePreferences;\n  return {\n    ...state,\n    // Propriétés compatibles\n    userProfile: state.profile,\n    loading: state.isLoading,\n    // Méthodes existantes\n    getProfile,\n    updateProfile,\n    uploadProfilePhoto,\n    getKYCStatus,\n    uploadKYCDocument,\n    deleteKYCDocument,\n    submitKYCForVerification,\n    getNotifications,\n    markNotificationAsRead,\n    registerPushToken,\n    unregisterPushToken,\n    getPreferences,\n    updatePreferences,\n    updateLocation,\n    clearError,\n    refreshProfile,\n    getUserPreferences,\n    updateUserPreferences,\n    getNotificationSettings,\n    updateNotificationSettings,\n    // Nouvelles méthodes courier\n    getCourierProfile,\n    updateCourierStatus,\n    getCourierEarnings,\n    getWeatherForecast,\n    // Méthodes wallet\n    getUserProfile,\n    getWalletTransactions,\n    withdrawFunds,\n    requestPayout,\n  };\n};\n\nexport default useUser;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}