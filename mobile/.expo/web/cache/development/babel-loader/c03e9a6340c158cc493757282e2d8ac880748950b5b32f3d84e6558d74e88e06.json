{"ast":null,"code":"\"use client\";\n\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState, useEffect, useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { Text, Card, Button, Avatar, TextInput, Divider, IconButton, ActivityIndicator } from \"react-native-paper\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { useNetwork } from \"../../contexts/NetworkContext\";\nimport { getUserProfile, updateUserProfile, uploadProfileImage } from \"../../services/api\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useTranslation = useTranslation(),\n    t = _useTranslation.t;\n  var _useAuth = useAuth(),\n    user = _useAuth.user,\n    updateUserData = _useAuth.updateUserData;\n  var _useNetwork = useNetwork(),\n    isConnected = _useNetwork.isConnected,\n    addPendingUpload = _useNetwork.addPendingUpload;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    profile = _useState2[0],\n    setProfile = _useState2[1];\n  var _useState3 = useState(true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loading = _useState4[0],\n    setLoading = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    refreshing = _useState6[0],\n    setRefreshing = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    uploadingImage = _useState8[0],\n    setUploadingImage = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    editing = _useState0[0],\n    setEditing = _useState0[1];\n  var _useState1 = useState({}),\n    _useState10 = _slicedToArray(_useState1, 2),\n    editedProfile = _useState10[0],\n    setEditedProfile = _useState10[1];\n  var _useState11 = useState(false),\n    _useState12 = _slicedToArray(_useState11, 2),\n    saving = _useState12[0],\n    setSaving = _useState12[1];\n  var loadProfile = useCallback(_asyncToGenerator(function* () {\n    try {\n      setLoading(true);\n      var profileData = yield getUserProfile();\n      var userProfile = {\n        user_id: typeof profileData.id === 'number' ? profileData.id : parseInt(profileData.id || '0'),\n        address: profileData.address || \"\",\n        city: profileData.city || \"\",\n        country: profileData.country || \"\",\n        phone: profileData.phone,\n        email: profileData.email || '',\n        role: profileData.role,\n        vehicle_type: profileData.vehicle_type,\n        license_plate: profileData.license_plate,\n        business_name: profileData.business_name,\n        business_address: profileData.business_address,\n        profile_picture: profileData.profile_picture,\n        full_name: profileData.full_name\n      };\n      setProfile(userProfile);\n      setEditedProfile(userProfile);\n    } catch (error) {\n      console.error(\"Error loading profile:\", error);\n      if (user) {\n        setProfile({\n          user_id: user.id,\n          full_name: user.full_name,\n          phone: user.phone,\n          city: user.commune || \"\",\n          country: \"Côte d'Ivoire\",\n          address: user.commune || \"\",\n          email: user.email || \"\",\n          role: user.role,\n          vehicle_type: user.role === 'courier' ? 'motorcycle' : undefined,\n          license_plate: \"\",\n          business_name: \"\",\n          business_address: \"\"\n        });\n        setEditedProfile({\n          user_id: user.id,\n          full_name: user.full_name,\n          phone: user.phone,\n          city: user.commune || \"\",\n          country: \"Côte d'Ivoire\",\n          address: user.commune || \"\",\n          email: user.email || \"\",\n          role: user.role,\n          vehicle_type: user.role === 'courier' ? 'motorcycle' : undefined,\n          license_plate: \"\",\n          business_name: \"\",\n          business_address: \"\"\n        });\n      }\n    } finally {\n      setLoading(false);\n    }\n  }), [user]);\n  useEffect(function () {\n    loadProfile();\n  }, [loadProfile]);\n  var onRefresh = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      setRefreshing(true);\n      yield loadProfile();\n      setRefreshing(false);\n    });\n    return function onRefresh() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var handlePickImage = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      if (!isConnected) {\n        Alert.alert(t(\"profile.offlineTitle\"), t(\"profile.offlineImageUpload\"));\n        return;\n      }\n      try {\n        var _yield$ImagePicker$re = yield ImagePicker.requestMediaLibraryPermissionsAsync(),\n          status = _yield$ImagePicker$re.status;\n        if (status !== \"granted\") {\n          Alert.alert(t(\"profile.permissionDenied\"), t(\"profile.cameraRollPermission\"));\n          return;\n        }\n        var result = yield ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\n          allowsEditing: true,\n          aspect: [1, 1],\n          quality: 0.5\n        });\n        if (!result.canceled && result.assets && result.assets.length > 0) {\n          uploadImage(result.assets[0].uri);\n        }\n      } catch (error) {\n        console.error(\"Error picking image:\", error);\n        Alert.alert(t(\"profile.error\"), t(\"profile.errorPickingImage\"));\n      }\n    });\n    return function handlePickImage() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  var uploadImage = function () {\n    var _ref5 = _asyncToGenerator(function* (uri) {\n      try {\n        setUploadingImage(true);\n        if (isConnected) {\n          var formData = new FormData();\n          formData.append(\"file\", {\n            uri: uri,\n            type: \"image/jpeg\",\n            name: \"profile-picture.jpg\"\n          });\n          var response = yield uploadProfileImage(formData);\n          if (response && response.image_url) {\n            var updatedProfile = _objectSpread(_objectSpread({}, profile), {}, {\n              profile_picture: response.image_url\n            });\n            setProfile(updatedProfile);\n            setEditedProfile(updatedProfile);\n            updateUserData({\n              profile_picture: response.image_url\n            });\n          }\n        } else {\n          addPendingUpload({\n            type: \"profile_image\",\n            data: {\n              uri: uri\n            },\n            retries: 0\n          });\n          Alert.alert(t(\"profile.offlineImageSaved\"), t(\"profile.offlineImageSavedMessage\"));\n        }\n      } catch (error) {\n        console.error(\"Error uploading image:\", error);\n        Alert.alert(t(\"profile.error\"), t(\"profile.errorUploadingImage\"));\n      } finally {\n        setUploadingImage(false);\n      }\n    });\n    return function uploadImage(_x) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n  var handleEdit = function handleEdit() {\n    setEditing(true);\n  };\n  var handleCancel = function handleCancel() {\n    setEditing(false);\n    setEditedProfile(profile || {});\n  };\n  var handleChange = function handleChange(field, value) {\n    setEditedProfile(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, field, value));\n    });\n  };\n  var handleSave = function () {\n    var _ref6 = _asyncToGenerator(function* () {\n      try {\n        setSaving(true);\n        if (isConnected) {\n          var updatedUser = yield updateUserProfile(editedProfile);\n          setProfile({\n            user_id: updatedUser.id,\n            full_name: updatedUser.full_name,\n            phone: updatedUser.phone,\n            city: updatedUser.commune || \"\",\n            country: \"Côte d'Ivoire\",\n            address: updatedUser.commune || \"\",\n            email: updatedUser.email || \"\",\n            role: updatedUser.role,\n            vehicle_type: updatedUser.role === 'courier' ? 'motorcycle' : undefined,\n            license_plate: \"\",\n            business_name: \"\",\n            business_address: \"\"\n          });\n          updateUserData(updatedUser);\n        } else {\n          addPendingUpload({\n            type: \"profile_update\",\n            data: editedProfile,\n            retries: 0\n          });\n          setProfile(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), editedProfile);\n          });\n          updateUserData(editedProfile);\n          Alert.alert(t(\"profile.offlineUpdateSaved\"), t(\"profile.offlineUpdateSavedMessage\"));\n        }\n        setEditing(false);\n      } catch (error) {\n        console.error(\"Error updating profile:\", error);\n        Alert.alert(t(\"profile.error\"), t(\"profile.errorUpdatingProfile\"));\n      } finally {\n        setSaving(false);\n      }\n    });\n    return function handleSave() {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n  if (loading) {\n    return _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsxs(View, {\n        style: styles.loadingContainer,\n        children: [_jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#FF6B00\"\n        }), _jsx(Text, {\n          style: styles.loadingText,\n          children: t(\"profile.loading\")\n        })]\n      })\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        children: _jsx(IconButton, {\n          icon: \"arrow-left\",\n          size: 24\n        })\n      }), _jsx(Text, {\n        style: styles.headerTitle,\n        children: t(\"profile.title\")\n      }), !editing ? _jsx(TouchableOpacity, {\n        onPress: handleEdit,\n        children: _jsx(IconButton, {\n          icon: \"pencil\",\n          size: 24\n        })\n      }) : _jsx(View, {\n        style: {\n          width: 40\n        }\n      })]\n    }), _jsxs(ScrollView, {\n      contentContainerStyle: styles.scrollContainer,\n      refreshControl: _jsx(RefreshControl, {\n        refreshing: refreshing,\n        onRefresh: onRefresh,\n        colors: [\"#FF6B00\"]\n      }),\n      children: [_jsxs(View, {\n        style: styles.profileImageContainer,\n        children: [uploadingImage ? _jsx(ActivityIndicator, {\n          size: \"large\",\n          color: \"#FF6B00\",\n          style: styles.uploadingIndicator\n        }) : profile != null && profile.profile_picture ? _jsx(Avatar.Image, {\n          source: {\n            uri: profile.profile_picture\n          },\n          size: 120\n        }) : _jsx(Avatar.Icon, {\n          size: 120,\n          icon: \"account\",\n          style: {\n            backgroundColor: \"#FF6B00\"\n          }\n        }), _jsx(TouchableOpacity, {\n          style: styles.changePhotoButton,\n          onPress: handlePickImage,\n          disabled: uploadingImage,\n          children: _jsx(Text, {\n            style: styles.changePhotoText,\n            children: t(\"profile.changePhoto\")\n          })\n        })]\n      }), _jsx(Card, {\n        style: styles.infoCard,\n        children: _jsxs(Card.Content, {\n          children: [_jsxs(View, {\n            style: styles.infoRow,\n            children: [_jsx(Text, {\n              style: styles.infoLabel,\n              children: t(\"profile.fullName\")\n            }), editing ? _jsx(TextInput, {\n              value: editedProfile.full_name || \"\",\n              onChangeText: function onChangeText(value) {\n                return handleChange(\"full_name\", value);\n              },\n              style: styles.editInput,\n              mode: \"outlined\"\n            }) : _jsx(Text, {\n              style: styles.infoValue,\n              children: profile == null ? void 0 : profile.full_name\n            })]\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsxs(View, {\n            style: styles.infoRow,\n            children: [_jsx(Text, {\n              style: styles.infoLabel,\n              children: t(\"profile.phone\")\n            }), _jsx(Text, {\n              style: styles.infoValue,\n              children: profile == null ? void 0 : profile.phone\n            })]\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsxs(View, {\n            style: styles.infoRow,\n            children: [_jsx(Text, {\n              style: styles.infoLabel,\n              children: t(\"profile.email\")\n            }), editing ? _jsx(TextInput, {\n              value: editedProfile.email || \"\",\n              onChangeText: function onChangeText(value) {\n                return handleChange(\"email\", value);\n              },\n              style: styles.editInput,\n              mode: \"outlined\",\n              keyboardType: \"email-address\"\n            }) : _jsx(Text, {\n              style: styles.infoValue,\n              children: (profile == null ? void 0 : profile.email) || t(\"profile.notProvided\")\n            })]\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsxs(View, {\n            style: styles.infoRow,\n            children: [_jsx(Text, {\n              style: styles.infoLabel,\n              children: t(\"profile.role\")\n            }), _jsx(Text, {\n              style: styles.infoValue,\n              children: (profile == null ? void 0 : profile.role) === \"client\" ? t(\"roles.client\") : (profile == null ? void 0 : profile.role) === \"courier\" ? t(\"roles.courier\") : (profile == null ? void 0 : profile.role) === \"business\" ? t(\"roles.business\") : profile == null ? void 0 : profile.role\n            })]\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsxs(View, {\n            style: styles.infoRow,\n            children: [_jsx(Text, {\n              style: styles.infoLabel,\n              children: t(\"profile.commune\")\n            }), editing ? _jsx(TextInput, {\n              value: editedProfile.address || \"\",\n              onChangeText: function onChangeText(value) {\n                return handleChange(\"address\", value);\n              },\n              style: styles.editInput,\n              mode: \"outlined\"\n            }) : _jsx(Text, {\n              style: styles.infoValue,\n              children: (profile == null ? void 0 : profile.address) || t(\"profile.notProvided\")\n            })]\n          }), (profile == null ? void 0 : profile.role) === \"courier\" && _jsxs(_Fragment, {\n            children: [_jsx(Divider, {\n              style: styles.divider\n            }), _jsxs(View, {\n              style: styles.infoRow,\n              children: [_jsx(Text, {\n                style: styles.infoLabel,\n                children: t(\"profile.vehicleType\")\n              }), editing ? _jsx(TextInput, {\n                value: editedProfile.vehicle_type || \"\",\n                onChangeText: function onChangeText(value) {\n                  return handleChange(\"vehicle_type\", value);\n                },\n                style: styles.editInput,\n                mode: \"outlined\"\n              }) : _jsx(Text, {\n                style: styles.infoValue,\n                children: (profile == null ? void 0 : profile.vehicle_type) || t(\"profile.notProvided\")\n              })]\n            }), _jsx(Divider, {\n              style: styles.divider\n            }), _jsxs(View, {\n              style: styles.infoRow,\n              children: [_jsx(Text, {\n                style: styles.infoLabel,\n                children: t(\"profile.licensePlate\")\n              }), editing ? _jsx(TextInput, {\n                value: editedProfile.license_plate || \"\",\n                onChangeText: function onChangeText(value) {\n                  return handleChange(\"license_plate\", value);\n                },\n                style: styles.editInput,\n                mode: \"outlined\"\n              }) : _jsx(Text, {\n                style: styles.infoValue,\n                children: (profile == null ? void 0 : profile.license_plate) || t(\"profile.notProvided\")\n              })]\n            })]\n          }), (profile == null ? void 0 : profile.role) === \"business\" && _jsxs(_Fragment, {\n            children: [_jsx(Divider, {\n              style: styles.divider\n            }), _jsxs(View, {\n              style: styles.infoRow,\n              children: [_jsx(Text, {\n                style: styles.infoLabel,\n                children: t(\"profile.businessName\")\n              }), editing ? _jsx(TextInput, {\n                value: editedProfile.business_name || \"\",\n                onChangeText: function onChangeText(value) {\n                  return handleChange(\"business_name\", value);\n                },\n                style: styles.editInput,\n                mode: \"outlined\"\n              }) : _jsx(Text, {\n                style: styles.infoValue,\n                children: (profile == null ? void 0 : profile.business_name) || t(\"profile.notProvided\")\n              })]\n            }), _jsx(Divider, {\n              style: styles.divider\n            }), _jsxs(View, {\n              style: styles.infoRow,\n              children: [_jsx(Text, {\n                style: styles.infoLabel,\n                children: t(\"profile.businessAddress\")\n              }), editing ? _jsx(TextInput, {\n                value: editedProfile.business_address || \"\",\n                onChangeText: function onChangeText(value) {\n                  return handleChange(\"business_address\", value);\n                },\n                style: styles.editInput,\n                mode: \"outlined\"\n              }) : _jsx(Text, {\n                style: styles.infoValue,\n                children: (profile == null ? void 0 : profile.business_address) || t(\"profile.notProvided\")\n              })]\n            })]\n          }), _jsx(Divider, {\n            style: styles.divider\n          }), _jsxs(View, {\n            style: styles.infoRow,\n            children: [_jsx(Text, {\n              style: styles.infoLabel,\n              children: t(\"profile.memberSince\")\n            }), _jsx(Text, {\n              style: styles.infoValue,\n              children: profile ? new Date().toLocaleDateString() : \"-\"\n            })]\n          })]\n        })\n      }), editing && _jsxs(View, {\n        style: styles.editButtonsContainer,\n        children: [_jsx(Button, {\n          mode: \"outlined\",\n          onPress: handleCancel,\n          style: styles.cancelButton,\n          disabled: saving,\n          children: t(\"common.cancel\")\n        }), _jsx(Button, {\n          mode: \"contained\",\n          onPress: handleSave,\n          style: styles.saveButton,\n          loading: saving,\n          disabled: saving,\n          children: t(\"common.save\")\n        })]\n      }), _jsx(Button, {\n        mode: \"contained\",\n        onPress: function onPress() {\n          return navigation.navigate(\"Settings\");\n        },\n        style: styles.settingsButton,\n        icon: \"cog\",\n        children: t(\"profile.settings\")\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#F5F5F5\"\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 16,\n    backgroundColor: \"#FFFFFF\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#EEEEEE\"\n  },\n  headerTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#212121\"\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  loadingText: {\n    marginTop: 16,\n    color: \"#757575\"\n  },\n  scrollContainer: {\n    padding: 16\n  },\n  profileImageContainer: {\n    alignItems: \"center\",\n    marginBottom: 20\n  },\n  uploadingIndicator: {\n    marginVertical: 40\n  },\n  changePhotoButton: {\n    marginTop: 12\n  },\n  changePhotoText: {\n    color: \"#FF6B00\",\n    fontSize: 14\n  },\n  infoCard: {\n    marginBottom: 20\n  },\n  infoRow: {\n    marginVertical: 8\n  },\n  infoLabel: {\n    fontSize: 14,\n    color: \"#757575\",\n    marginBottom: 4\n  },\n  infoValue: {\n    fontSize: 16,\n    color: \"#212121\"\n  },\n  divider: {\n    marginVertical: 8\n  },\n  editInput: {\n    backgroundColor: \"#FFFFFF\",\n    fontSize: 16\n  },\n  editButtonsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginBottom: 20\n  },\n  cancelButton: {\n    flex: 1,\n    marginRight: 8,\n    borderColor: \"#757575\"\n  },\n  saveButton: {\n    flex: 1,\n    marginLeft: 8,\n    backgroundColor: \"#FF6B00\"\n  },\n  settingsButton: {\n    backgroundColor: \"#212121\",\n    marginBottom: 20\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["_defineProperty","_asyncToGenerator","_slicedToArray","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","useState","useEffect","useCallback","View","StyleSheet","ScrollView","TouchableOpacity","Alert","RefreshControl","Text","Card","Button","Avatar","TextInput","Divider","IconButton","ActivityIndicator","SafeAreaView","ImagePicker","useTranslation","useAuth","useNetwork","getUserProfile","updateUserProfile","uploadProfileImage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ProfileScreen","_ref","navigation","_useTranslation","_useAuth","user","updateUserData","_useNetwork","isConnected","addPendingUpload","_useState","_useState2","profile","setProfile","_useState3","_useState4","loading","setLoading","_useState5","_useState6","refreshing","setRefreshing","_useState7","_useState8","uploadingImage","setUploadingImage","_useState9","_useState0","editing","setEditing","_useState1","_useState10","editedProfile","setEditedProfile","_useState11","_useState12","saving","setSaving","loadProfile","profileData","userProfile","user_id","id","parseInt","address","city","country","phone","email","role","vehicle_type","license_plate","business_name","business_address","profile_picture","full_name","error","console","commune","undefined","onRefresh","_ref3","handlePickImage","_ref4","alert","_yield$ImagePicker$re","requestMediaLibraryPermissionsAsync","status","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","canceled","assets","uploadImage","uri","_ref5","formData","FormData","append","type","name","response","image_url","updatedProfile","data","retries","_x","handleEdit","handleCancel","handleChange","field","value","prev","handleSave","_ref6","updatedUser","style","styles","container","children","loadingContainer","size","color","loadingText","header","onPress","goBack","icon","headerTitle","width","contentContainerStyle","scrollContainer","refreshControl","colors","profileImageContainer","uploadingIndicator","Image","source","Icon","backgroundColor","changePhotoButton","disabled","changePhotoText","infoCard","Content","infoRow","infoLabel","onChangeText","editInput","mode","infoValue","divider","keyboardType","Date","toLocaleDateString","editButtonsContainer","cancelButton","saveButton","navigate","settingsButton","create","flex","flexDirection","justifyContent","alignItems","padding","borderBottomWidth","borderBottomColor","fontSize","fontWeight","marginTop","marginBottom","marginVertical","marginRight","borderColor","marginLeft"],"sources":["/home/runner/workspace/mobile/screens/profile/ProfileScreen.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { useState, useEffect, useCallback } from \"react\"\nimport { View, StyleSheet, ScrollView, TouchableOpacity, Alert, RefreshControl } from \"react-native\"\nimport { Text, Card, Button, Avatar, TextInput, Divider, IconButton, ActivityIndicator } from \"react-native-paper\"\nimport { SafeAreaView } from \"react-native-safe-area-context\"\nimport * as ImagePicker from \"expo-image-picker\"\nimport { useTranslation } from \"react-i18next\"\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport { useNetwork } from \"../../contexts/NetworkContext\"\nimport { getUserProfile, updateUserProfile, uploadProfileImage } from \"../../services/api\"\nimport type { NativeStackNavigationProp } from \"@react-navigation/native-stack\"\nimport type { RootStackParamList } from \"../../types/navigation\"\nimport type { UserProfile, User } from \"../../types/models\"\n\ntype ProfileScreenProps = {\n  navigation: NativeStackNavigationProp<RootStackParamList, \"Profile\">\n}\n\nconst ProfileScreen: React.FC<ProfileScreenProps> = ({ navigation }) => {\n  const { t } = useTranslation()\n  const { user, updateUserData } = useAuth()\n  const { isConnected, addPendingUpload } = useNetwork()\n\n  const [profile, setProfile] = useState<UserProfile | null>(null)\n  const [loading, setLoading] = useState<boolean>(true)\n  const [refreshing, setRefreshing] = useState<boolean>(false)\n  const [uploadingImage, setUploadingImage] = useState<boolean>(false)\n  const [editing, setEditing] = useState<boolean>(false)\n  const [editedProfile, setEditedProfile] = useState<Partial<UserProfile>>({})\n  const [saving, setSaving] = useState<boolean>(false)\n\n  const loadProfile = useCallback(async (): Promise<void> => {\n    try {\n      setLoading(true)\n      const profileData = await getUserProfile()\n      // Convert User to UserProfile by adding user_id and ensuring required fields\n      const userProfile: UserProfile = {\n        user_id: typeof profileData.id === 'number' ? profileData.id : parseInt(profileData.id || '0'),\n        address: profileData.address || \"\",\n        city: profileData.city || \"\",\n        country: profileData.country || \"\",\n        phone: profileData.phone,\n        email: profileData.email || '',\n        role: profileData.role,\n\n        vehicle_type: profileData.vehicle_type,\n        license_plate: profileData.license_plate,\n        business_name: profileData.business_name,\n        business_address: profileData.business_address,\n        profile_picture: profileData.profile_picture,\n        full_name: profileData.full_name,\n        \n      }\n      setProfile(userProfile)\n      setEditedProfile(userProfile)\n    } catch (error) {\n      console.error(\"Error loading profile:\", error)\n      // Utiliser les données locales en cas d'erreur\n      if (user) {\n        setProfile({\n          user_id: user.id,\n          full_name: user.full_name,\n          phone: user.phone,\n          city: user.commune || \"\",\n          country: \"Côte d'Ivoire\",\n          address: user.commune || \"\",\n          email: user.email || \"\",\n          role: user.role,\n          // language_preference managed separately\n          vehicle_type: user.role === 'courier' ? 'motorcycle' : undefined,\n          license_plate: \"\",\n          business_name: \"\",\n          business_address: \"\",\n        })\n        setEditedProfile({\n          user_id: user.id,\n          full_name: user.full_name,\n          phone: user.phone,\n          city: user.commune || \"\",\n          country: \"Côte d'Ivoire\",\n          address: user.commune || \"\",\n          email: user.email || \"\",\n          role: user.role,\n          // language_preference managed separately\n          vehicle_type: user.role === 'courier' ? 'motorcycle' : undefined,\n          license_plate: \"\",\n          business_name: \"\",\n          business_address: \"\",\n        })\n      }\n    } finally {\n      setLoading(false)\n    }\n  }, [user])\n\n  useEffect(() => {\n    loadProfile()\n  }, [loadProfile])\n\n  const onRefresh = async (): Promise<void> => {\n    setRefreshing(true)\n    await loadProfile()\n    setRefreshing(false)\n  }\n\n  const handlePickImage = async (): Promise<void> => {\n    if (!isConnected) {\n      Alert.alert(t(\"profile.offlineTitle\"), t(\"profile.offlineImageUpload\"))\n      return\n    }\n\n    try {\n      // Demander la permission d'accéder à la galerie\n      const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync()\n      if (status !== \"granted\") {\n        Alert.alert(t(\"profile.permissionDenied\"), t(\"profile.cameraRollPermission\"))\n        return\n      }\n\n      // Lancer le sélecteur d'image\n      const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [1, 1],\n        quality: 0.5, // Qualité réduite pour économiser les données\n      })\n\n      if (!result.canceled && result.assets && result.assets.length > 0) {\n        uploadImage(result.assets[0].uri)\n      }\n    } catch (error) {\n      console.error(\"Error picking image:\", error)\n      Alert.alert(t(\"profile.error\"), t(\"profile.errorPickingImage\"))\n    }\n  }\n\n  const uploadImage = async (uri: string): Promise<void> => {\n    try {\n      setUploadingImage(true)\n\n      if (isConnected) {\n        // Create FormData from URI\n        const formData = new FormData()\n        // React Native FormData expects this specific format for file uploads\n        formData.append(\"file\", {\n          uri: uri,\n          type: \"image/jpeg\",\n          name: \"profile-picture.jpg\",\n        } as unknown as Blob)\n\n        // Télécharger l'image\n        const response = await uploadProfileImage(formData)\n\n        // Mettre à jour le profil avec la nouvelle URL d'image\n        if (response && response.image_url) {\n          const updatedProfile: UserProfile = { \n            ...profile,\n            profile_picture: response.image_url \n          } as UserProfile\n          setProfile(updatedProfile)\n          setEditedProfile(updatedProfile)\n          updateUserData({ profile_picture: response.image_url })\n        }\n      } else {\n        // Stocker pour synchronisation ultérieure\n        addPendingUpload({\n          type: \"profile_image\",\n          data: { uri },\n          retries: 0\n        })\n\n        Alert.alert(t(\"profile.offlineImageSaved\"), t(\"profile.offlineImageSavedMessage\"))\n      }\n    } catch (error) {\n      console.error(\"Error uploading image:\", error)\n      Alert.alert(t(\"profile.error\"), t(\"profile.errorUploadingImage\"))\n    } finally {\n      setUploadingImage(false)\n    }\n  }\n\n  const handleEdit = (): void => {\n    setEditing(true)\n  }\n\n  const handleCancel = (): void => {\n    setEditing(false)\n    setEditedProfile(profile || {})\n  }\n\n  const handleChange = (field: keyof UserProfile, value: string): void => {\n    setEditedProfile((prev) => ({ ...prev, [field]: value }))\n  }\n\n  const handleSave = async (): Promise<void> => {\n    try {\n      setSaving(true)\n\n      if (isConnected) {\n        // Mettre à jour le profil en ligne\n        const updatedUser = await updateUserProfile(editedProfile as Partial<User>)\n        // Convert User to UserProfile\n        setProfile({\n          user_id: updatedUser.id,\n          full_name: updatedUser.full_name,\n          phone: updatedUser.phone,\n          city: updatedUser.commune || \"\",\n          country: \"Côte d'Ivoire\",\n          address: updatedUser.commune || \"\",\n          email: updatedUser.email || \"\",\n          role: updatedUser.role,\n          // language_preference managed separately\n          vehicle_type: updatedUser.role === 'courier' ? 'motorcycle' : undefined,\n          license_plate: \"\",\n          business_name: \"\",\n          business_address: \"\",\n        })\n        updateUserData(updatedUser)\n      } else {\n        // Stocker pour synchronisation ultérieure\n        addPendingUpload({\n          type: \"profile_update\",\n          data: editedProfile,\n          retries: 0\n        })\n\n        // Mettre à jour localement\n        setProfile((prev) => ({ ...prev, ...editedProfile }) as UserProfile)\n        updateUserData(editedProfile as Partial<User>)\n\n        Alert.alert(t(\"profile.offlineUpdateSaved\"), t(\"profile.offlineUpdateSavedMessage\"))\n      }\n\n      setEditing(false)\n    } catch (error) {\n      console.error(\"Error updating profile:\", error)\n      Alert.alert(t(\"profile.error\"), t(\"profile.errorUpdatingProfile\"))\n    } finally {\n      setSaving(false)\n    }\n  }\n\n  if (loading) {\n    return (\n      <SafeAreaView style={styles.container}>\n        <View style={styles.loadingContainer}>\n          <ActivityIndicator size=\"large\" color=\"#FF6B00\" />\n          <Text style={styles.loadingText}>{t(\"profile.loading\")}</Text>\n        </View>\n      </SafeAreaView>\n    )\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <TouchableOpacity onPress={() => navigation.goBack()}>\n          <IconButton icon=\"arrow-left\" size={24} />\n        </TouchableOpacity>\n        <Text style={styles.headerTitle}>{t(\"profile.title\")}</Text>\n        {!editing ? (\n          <TouchableOpacity onPress={handleEdit}>\n            <IconButton icon=\"pencil\" size={24} />\n          </TouchableOpacity>\n        ) : (\n          <View style={{ width: 40 }} />\n        )}\n      </View>\n\n      <ScrollView\n        contentContainerStyle={styles.scrollContainer}\n        refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} colors={[\"#FF6B00\"]} />}\n      >\n        <View style={styles.profileImageContainer}>\n          {uploadingImage ? (\n            <ActivityIndicator size=\"large\" color=\"#FF6B00\" style={styles.uploadingIndicator} />\n          ) : profile?.profile_picture ? (\n            <Avatar.Image source={{ uri: profile.profile_picture }} size={120} />\n          ) : (\n            <Avatar.Icon size={120} icon=\"account\" style={{ backgroundColor: \"#FF6B00\" }} />\n          )}\n\n          <TouchableOpacity style={styles.changePhotoButton} onPress={handlePickImage} disabled={uploadingImage}>\n            <Text style={styles.changePhotoText}>{t(\"profile.changePhoto\")}</Text>\n          </TouchableOpacity>\n        </View>\n\n        <Card style={styles.infoCard}>\n          <Card.Content>\n            <View style={styles.infoRow}>\n              <Text style={styles.infoLabel}>{t(\"profile.fullName\")}</Text>\n              {editing ? (\n                <TextInput\n                  value={editedProfile.full_name || \"\"}\n                  onChangeText={(value) => handleChange(\"full_name\", value)}\n                  style={styles.editInput}\n                  mode=\"outlined\"\n                />\n              ) : (\n                <Text style={styles.infoValue}>{profile?.full_name}</Text>\n              )}\n            </View>\n\n            <Divider style={styles.divider} />\n\n            <View style={styles.infoRow}>\n              <Text style={styles.infoLabel}>{t(\"profile.phone\")}</Text>\n              <Text style={styles.infoValue}>{profile?.phone}</Text>\n            </View>\n\n            <Divider style={styles.divider} />\n\n            <View style={styles.infoRow}>\n              <Text style={styles.infoLabel}>{t(\"profile.email\")}</Text>\n              {editing ? (\n                <TextInput\n                  value={editedProfile.email || \"\"}\n                  onChangeText={(value) => handleChange(\"email\", value)}\n                  style={styles.editInput}\n                  mode=\"outlined\"\n                  keyboardType=\"email-address\"\n                />\n              ) : (\n                <Text style={styles.infoValue}>{profile?.email || t(\"profile.notProvided\")}</Text>\n              )}\n            </View>\n\n            <Divider style={styles.divider} />\n\n            <View style={styles.infoRow}>\n              <Text style={styles.infoLabel}>{t(\"profile.role\")}</Text>\n              <Text style={styles.infoValue}>\n                {profile?.role === \"client\"\n                  ? t(\"roles.client\")\n                  : profile?.role === \"courier\"\n                    ? t(\"roles.courier\")\n                    : profile?.role === \"business\"\n                      ? t(\"roles.business\")\n                      : profile?.role}\n              </Text>\n            </View>\n\n            <Divider style={styles.divider} />\n\n            <View style={styles.infoRow}>\n              <Text style={styles.infoLabel}>{t(\"profile.commune\")}</Text>\n              {editing ? (\n                <TextInput\n                  value={editedProfile.address || \"\"}\n                  onChangeText={(value) => handleChange(\"address\", value)}\n                  style={styles.editInput}\n                  mode=\"outlined\"\n                />\n              ) : (\n                <Text style={styles.infoValue}>{profile?.address || t(\"profile.notProvided\")}</Text>\n              )}\n            </View>\n\n            {profile?.role === \"courier\" && (\n              <>\n                <Divider style={styles.divider} />\n\n                <View style={styles.infoRow}>\n                  <Text style={styles.infoLabel}>{t(\"profile.vehicleType\")}</Text>\n                  {editing ? (\n                    <TextInput\n                      value={editedProfile.vehicle_type || \"\"}\n                      onChangeText={(value) => handleChange(\"vehicle_type\", value)}\n                      style={styles.editInput}\n                      mode=\"outlined\"\n                    />\n                  ) : (\n                    <Text style={styles.infoValue}>{profile?.vehicle_type || t(\"profile.notProvided\")}</Text>\n                  )}\n                </View>\n\n                <Divider style={styles.divider} />\n\n                <View style={styles.infoRow}>\n                  <Text style={styles.infoLabel}>{t(\"profile.licensePlate\")}</Text>\n                  {editing ? (\n                    <TextInput\n                      value={editedProfile.license_plate || \"\"}\n                      onChangeText={(value) => handleChange(\"license_plate\", value)}\n                      style={styles.editInput}\n                      mode=\"outlined\"\n                    />\n                  ) : (\n                    <Text style={styles.infoValue}>{profile?.license_plate || t(\"profile.notProvided\")}</Text>\n                  )}\n                </View>\n              </>\n            )}\n\n            {profile?.role === \"business\" && (\n              <>\n                <Divider style={styles.divider} />\n\n                <View style={styles.infoRow}>\n                  <Text style={styles.infoLabel}>{t(\"profile.businessName\")}</Text>\n                  {editing ? (\n                    <TextInput\n                      value={editedProfile.business_name || \"\"}\n                      onChangeText={(value) => handleChange(\"business_name\", value)}\n                      style={styles.editInput}\n                      mode=\"outlined\"\n                    />\n                  ) : (\n                    <Text style={styles.infoValue}>{profile?.business_name || t(\"profile.notProvided\")}</Text>\n                  )}\n                </View>\n\n                <Divider style={styles.divider} />\n\n                <View style={styles.infoRow}>\n                  <Text style={styles.infoLabel}>{t(\"profile.businessAddress\")}</Text>\n                  {editing ? (\n                    <TextInput\n                      value={editedProfile.business_address || \"\"}\n                      onChangeText={(value) => handleChange(\"business_address\", value)}\n                      style={styles.editInput}\n                      mode=\"outlined\"\n                    />\n                  ) : (\n                    <Text style={styles.infoValue}>{profile?.business_address || t(\"profile.notProvided\")}</Text>\n                  )}\n                </View>\n              </>\n            )}\n\n            <Divider style={styles.divider} />\n\n            <View style={styles.infoRow}>\n              <Text style={styles.infoLabel}>{t(\"profile.memberSince\")}</Text>\n              <Text style={styles.infoValue}>\n                {profile ? new Date().toLocaleDateString() : \"-\"}\n              </Text>\n            </View>\n          </Card.Content>\n        </Card>\n\n        {editing && (\n          <View style={styles.editButtonsContainer}>\n            <Button mode=\"outlined\" onPress={handleCancel} style={styles.cancelButton} disabled={saving}>\n              {t(\"common.cancel\")}\n            </Button>\n            <Button mode=\"contained\" onPress={handleSave} style={styles.saveButton} loading={saving} disabled={saving}>\n              {t(\"common.save\")}\n            </Button>\n          </View>\n        )}\n\n        <Button\n          mode=\"contained\"\n          onPress={() => navigation.navigate(\"Settings\")}\n          style={styles.settingsButton}\n          icon=\"cog\"\n        >\n          {t(\"profile.settings\")}\n        </Button>\n      </ScrollView>\n    </SafeAreaView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#F5F5F5\",\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 16,\n    backgroundColor: \"#FFFFFF\",\n    borderBottomWidth: 1,\n    borderBottomColor: \"#EEEEEE\",\n  },\n  headerTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#212121\",\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  loadingText: {\n    marginTop: 16,\n    color: \"#757575\",\n  },\n  scrollContainer: {\n    padding: 16,\n  },\n  profileImageContainer: {\n    alignItems: \"center\",\n    marginBottom: 20,\n  },\n  uploadingIndicator: {\n    marginVertical: 40,\n  },\n  changePhotoButton: {\n    marginTop: 12,\n  },\n  changePhotoText: {\n    color: \"#FF6B00\",\n    fontSize: 14,\n  },\n  infoCard: {\n    marginBottom: 20,\n  },\n  infoRow: {\n    marginVertical: 8,\n  },\n  infoLabel: {\n    fontSize: 14,\n    color: \"#757575\",\n    marginBottom: 4,\n  },\n  infoValue: {\n    fontSize: 16,\n    color: \"#212121\",\n  },\n  divider: {\n    marginVertical: 8,\n  },\n  editInput: {\n    backgroundColor: \"#FFFFFF\",\n    fontSize: 16,\n  },\n  editButtonsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginBottom: 20,\n  },\n  cancelButton: {\n    flex: 1,\n    marginRight: 8,\n    borderColor: \"#757575\",\n  },\n  saveButton: {\n    flex: 1,\n    marginLeft: 8,\n    backgroundColor: \"#FF6B00\",\n  },\n  settingsButton: {\n    backgroundColor: \"#212121\",\n    marginBottom: 20,\n  },\n})\n\nexport default ProfileScreen"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}