{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Text, Surface } from 'react-native-paper';\nimport MapView, { Marker, Polyline, PROVIDER_GOOGLE } from 'react-native-maps';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var VTCStyleMap = function VTCStyleMap(_ref) {\n  var pickupLocation = _ref.pickupLocation,\n    deliveryLocation = _ref.deliveryLocation,\n    courier = _ref.courier,\n    route = _ref.route,\n    deliveryStatus = _ref.deliveryStatus,\n    userLocation = _ref.userLocation,\n    _ref$showUserLocation = _ref.showUserLocation,\n    showUserLocation = _ref$showUserLocation === void 0 ? true : _ref$showUserLocation,\n    _ref$followUser = _ref.followUser,\n    followUser = _ref$followUser === void 0 ? false : _ref$followUser,\n    _ref$followCourier = _ref.followCourier,\n    followCourier = _ref$followCourier === void 0 ? true : _ref$followCourier,\n    _onMapReady = _ref.onMapReady,\n    onCourierPress = _ref.onCourierPress,\n    onRoutePress = _ref.onRoutePress,\n    onPickupPress = _ref.onPickupPress,\n    onDeliveryPress = _ref.onDeliveryPress,\n    onUserLocationPress = _ref.onUserLocationPress,\n    _ref$theme = _ref.theme,\n    theme = _ref$theme === void 0 ? 'light' : _ref$theme,\n    _ref$showTraffic = _ref.showTraffic,\n    showTraffic = _ref$showTraffic === void 0 ? false : _ref$showTraffic,\n    _ref$showETA = _ref.showETA,\n    showETA = _ref$showETA === void 0 ? true : _ref$showETA,\n    _ref$showProgress = _ref.showProgress,\n    showProgress = _ref$showProgress === void 0 ? true : _ref$showProgress,\n    style = _ref.style;\n  var mapRef = useRef(null);\n  var pulseAnimation = useRef(new Animated.Value(1)).current;\n  var fadeAnimation = useRef(new Animated.Value(0)).current;\n  var slideAnimation = useRef(new Animated.Value(-100)).current;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isMapReady = _useState2[0],\n    setIsMapReady = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    courierAnimatedLocation = _useState4[0],\n    setCourierAnimatedLocation = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    lastCourierUpdate = _useState6[0],\n    setLastCourierUpdate = _useState6[1];\n  var _useState7 = useState({\n      latitude: 5.3599517,\n      longitude: -4.0082563,\n      latitudeDelta: 0.01,\n      longitudeDelta: 0.01\n    }),\n    _useState8 = _slicedToArray(_useState7, 2),\n    mapRegion = _useState8[0],\n    setMapRegion = _useState8[1];\n  useEffect(function () {\n    if (deliveryStatus.status === 'searching') {\n      Animated.loop(Animated.sequence([Animated.timing(pulseAnimation, {\n        toValue: 1.3,\n        duration: 1000,\n        useNativeDriver: true\n      }), Animated.timing(pulseAnimation, {\n        toValue: 1,\n        duration: 1000,\n        useNativeDriver: true\n      })])).start();\n    } else {\n      pulseAnimation.setValue(1);\n    }\n  }, [deliveryStatus.status, pulseAnimation]);\n  var getStatusGradient = function getStatusGradient(status) {\n    switch (status) {\n      case 'searching':\n        return ['#FF6B6B', '#FF8E53'];\n      case 'assigned':\n        return ['#4ECDC4', '#44A08D'];\n      case 'transit':\n        return ['#45B7D1', '#96C93D'];\n      case 'delivered':\n        return ['#96C93D', '#02AAB0'];\n      case 'cancelled':\n        return ['#FF6B6B', '#C44569'];\n      default:\n        return ['#BDC3C7', '#95A5A6'];\n    }\n  };\n  var getStatusIcon = function getStatusIcon(status) {\n    switch (status) {\n      case 'searching':\n        return 'search';\n      case 'assigned':\n        return 'person-pin';\n      case 'transit':\n        return 'directions-car';\n      case 'delivered':\n        return 'check-circle';\n      case 'cancelled':\n        return 'cancel';\n      default:\n        return 'help';\n    }\n  };\n  var getStatusText = function getStatusText(status) {\n    switch (status) {\n      case 'searching':\n        return 'Recherche en cours...';\n      case 'assigned':\n        return 'Coursier assigné';\n      case 'transit':\n        return 'En transit';\n      case 'delivered':\n        return 'Livré';\n      case 'cancelled':\n        return 'Annulé';\n      default:\n        return 'En attente';\n    }\n  };\n  var getInitialRegion = useCallback(function () {\n    if (pickupLocation && deliveryLocation) {\n      var minLat = Math.min(pickupLocation.latitude, deliveryLocation.latitude);\n      var maxLat = Math.max(pickupLocation.latitude, deliveryLocation.latitude);\n      var minLng = Math.min(pickupLocation.longitude, deliveryLocation.longitude);\n      var maxLng = Math.max(pickupLocation.longitude, deliveryLocation.longitude);\n      var centerLat = (minLat + maxLat) / 2;\n      var centerLng = (minLng + maxLng) / 2;\n      var deltaLat = (maxLat - minLat) * 1.5;\n      var deltaLng = (maxLng - minLng) * 1.5;\n      return {\n        latitude: centerLat,\n        longitude: centerLng,\n        latitudeDelta: Math.max(deltaLat, 0.01),\n        longitudeDelta: Math.max(deltaLng, 0.01)\n      };\n    } else if (pickupLocation) {\n      return {\n        latitude: pickupLocation.latitude,\n        longitude: pickupLocation.longitude,\n        latitudeDelta: 0.01,\n        longitudeDelta: 0.01\n      };\n    } else {\n      return mapRegion;\n    }\n  }, [pickupLocation, deliveryLocation, mapRegion]);\n  useEffect(function () {\n    if (isMapReady) {\n      var _mapRef$current;\n      var region = getInitialRegion();\n      (_mapRef$current = mapRef.current) == null ? void 0 : _mapRef$current.animateToRegion(region, 1000);\n    }\n  }, [isMapReady, getInitialRegion]);\n  useEffect(function () {\n    Animated.parallel([Animated.timing(fadeAnimation, {\n      toValue: 1,\n      duration: 800,\n      useNativeDriver: true\n    }), Animated.timing(slideAnimation, {\n      toValue: 0,\n      duration: 600,\n      useNativeDriver: true\n    })]).start();\n  }, [fadeAnimation, slideAnimation]);\n  return _jsxs(View, {\n    style: [styles.container, style],\n    children: [_jsxs(MapView, {\n      ref: mapRef,\n      style: styles.map,\n      provider: PROVIDER_GOOGLE,\n      initialRegion: getInitialRegion(),\n      showsUserLocation: showUserLocation,\n      showsMyLocationButton: false,\n      showsTraffic: showTraffic,\n      onMapReady: function onMapReady() {\n        setIsMapReady(true);\n        _onMapReady == null ? void 0 : _onMapReady();\n      },\n      mapType: \"standard\",\n      customMapStyle: theme === 'dark' ? darkMapStyle : undefined,\n      children: [pickupLocation && _jsx(Marker, {\n        coordinate: pickupLocation,\n        onPress: onPickupPress,\n        anchor: {\n          x: 0.5,\n          y: 1\n        },\n        children: _jsx(Animated.View, {\n          style: [styles.markerContainer, {\n            transform: [{\n              scale: deliveryStatus.status === 'searching' ? pulseAnimation : 1\n            }]\n          }],\n          children: _jsx(LinearGradient, {\n            colors: ['#4ECDC4', '#44A08D'],\n            style: styles.pickupMarker,\n            children: _jsx(MaterialIcons, {\n              name: \"location-on\",\n              size: 20,\n              color: \"white\"\n            })\n          })\n        })\n      }), deliveryLocation && _jsx(Marker, {\n        coordinate: deliveryLocation,\n        onPress: onDeliveryPress,\n        anchor: {\n          x: 0.5,\n          y: 1\n        },\n        children: _jsx(View, {\n          style: styles.markerContainer,\n          children: _jsx(LinearGradient, {\n            colors: ['#FF6B6B', '#FF8E53'],\n            style: styles.deliveryMarker,\n            children: _jsx(MaterialIcons, {\n              name: \"flag\",\n              size: 20,\n              color: \"white\"\n            })\n          })\n        })\n      }), courier && _jsx(Marker, {\n        coordinate: courier.location,\n        onPress: onCourierPress,\n        anchor: {\n          x: 0.5,\n          y: 0.5\n        },\n        rotation: courier.heading || 0,\n        children: _jsx(View, {\n          style: styles.courierMarker,\n          children: _jsx(MaterialIcons, {\n            name: courier.vehicle.type === 'car' ? 'directions-car' : 'motorcycle',\n            size: 24,\n            color: \"#2196F3\"\n          })\n        })\n      }), route && route.coordinates.length > 0 && _jsx(Polyline, {\n        coordinates: route.coordinates,\n        strokeWidth: 4,\n        strokeColor: \"#2196F3\",\n        lineDashPattern: [5, 5],\n        onPress: onRoutePress\n      })]\n    }), _jsx(Animated.View, {\n      style: [styles.statusContainer, {\n        opacity: fadeAnimation,\n        transform: [{\n          translateY: slideAnimation\n        }]\n      }],\n      children: _jsxs(Surface, {\n        style: styles.statusCard,\n        elevation: 4,\n        children: [_jsx(LinearGradient, {\n          colors: getStatusGradient(deliveryStatus.status),\n          style: styles.statusGradient,\n          children: _jsxs(View, {\n            style: styles.statusContent,\n            children: [_jsx(MaterialIcons, {\n              name: getStatusIcon(deliveryStatus.status),\n              size: 24,\n              color: \"white\"\n            }), _jsxs(View, {\n              style: styles.statusTextContainer,\n              children: [_jsx(Text, {\n                style: styles.statusText,\n                children: getStatusText(deliveryStatus.status)\n              }), deliveryStatus.message && _jsx(Text, {\n                style: styles.statusSubText,\n                children: deliveryStatus.message\n              }), showETA && deliveryStatus.eta && _jsxs(Text, {\n                style: styles.etaText,\n                children: [\"Arriv\\xE9e pr\\xE9vue: \", deliveryStatus.eta]\n              })]\n            })]\n          })\n        }), showProgress && deliveryStatus.progress !== undefined && _jsx(View, {\n          style: styles.progressContainer,\n          children: _jsx(View, {\n            style: [styles.progressBar, {\n              width: deliveryStatus.progress + \"%\",\n              backgroundColor: getStatusGradient(deliveryStatus.status)[0]\n            }]\n          })\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.mapControls,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.controlButton,\n        onPress: function onPress() {\n          if (userLocation && mapRef.current) {\n            mapRef.current.animateToRegion({\n              latitude: userLocation.latitude,\n              longitude: userLocation.longitude,\n              latitudeDelta: 0.01,\n              longitudeDelta: 0.01\n            }, 1000);\n          }\n        },\n        children: _jsx(MaterialIcons, {\n          name: \"my-location\",\n          size: 20,\n          color: \"#2196F3\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: styles.controlButton,\n        onPress: function onPress() {\n          if (mapRef.current) {\n            var region = getInitialRegion();\n            mapRef.current.animateToRegion(region, 1000);\n          }\n        },\n        children: _jsx(MaterialIcons, {\n          name: \"center-focus-strong\",\n          size: 20,\n          color: \"#2196F3\"\n        })\n      })]\n    })]\n  });\n};\nvar darkMapStyle = [{\n  elementType: 'geometry',\n  stylers: [{\n    color: '#242f3e'\n  }]\n}, {\n  elementType: 'labels.text.stroke',\n  stylers: [{\n    color: '#242f3e'\n  }]\n}, {\n  elementType: 'labels.text.fill',\n  stylers: [{\n    color: '#746855'\n  }]\n}];\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5'\n  },\n  map: {\n    flex: 1\n  },\n  markerContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  pickupMarker: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 3,\n    borderColor: 'white'\n  },\n  deliveryMarker: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 3,\n    borderColor: 'white'\n  },\n  courierMarker: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 3,\n    borderColor: '#2196F3',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  statusContainer: {\n    position: 'absolute',\n    top: 50,\n    left: 16,\n    right: 16\n  },\n  statusCard: {\n    borderRadius: 16,\n    overflow: 'hidden'\n  },\n  statusGradient: {\n    padding: 16\n  },\n  statusContent: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  statusTextContainer: {\n    marginLeft: 12,\n    flex: 1\n  },\n  statusText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: 'white'\n  },\n  statusSubText: {\n    fontSize: 14,\n    color: 'rgba(255, 255, 255, 0.8)',\n    marginTop: 2\n  },\n  etaText: {\n    fontSize: 12,\n    color: 'rgba(255, 255, 255, 0.9)',\n    marginTop: 4\n  },\n  progressContainer: {\n    height: 4,\n    backgroundColor: 'rgba(255, 255, 255, 0.3)'\n  },\n  progressBar: {\n    height: '100%',\n    borderRadius: 2\n  },\n  mapControls: {\n    position: 'absolute',\n    bottom: 120,\n    right: 16,\n    flexDirection: 'column',\n    gap: 8\n  },\n  controlButton: {\n    width: 44,\n    height: 44,\n    borderRadius: 22,\n    backgroundColor: '#FFFFFF',\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  }\n});\nexport default VTCStyleMap;","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","View","StyleSheet","Animated","TouchableOpacity","Text","Surface","MapView","Marker","Polyline","PROVIDER_GOOGLE","MaterialIcons","LinearGradient","jsx","_jsx","jsxs","_jsxs","VTCStyleMap","_ref","pickupLocation","deliveryLocation","courier","route","deliveryStatus","userLocation","_ref$showUserLocation","showUserLocation","_ref$followUser","followUser","_ref$followCourier","followCourier","onMapReady","onCourierPress","onRoutePress","onPickupPress","onDeliveryPress","onUserLocationPress","_ref$theme","theme","_ref$showTraffic","showTraffic","_ref$showETA","showETA","_ref$showProgress","showProgress","style","mapRef","pulseAnimation","Value","current","fadeAnimation","slideAnimation","_useState","_useState2","_slicedToArray","isMapReady","setIsMapReady","_useState3","_useState4","courierAnimatedLocation","setCourierAnimatedLocation","_useState5","_useState6","lastCourierUpdate","setLastCourierUpdate","_useState7","latitude","longitude","latitudeDelta","longitudeDelta","_useState8","mapRegion","setMapRegion","status","loop","sequence","timing","toValue","duration","useNativeDriver","start","setValue","getStatusGradient","getStatusIcon","getStatusText","getInitialRegion","minLat","Math","min","maxLat","max","minLng","maxLng","centerLat","centerLng","deltaLat","deltaLng","_mapRef$current","region","animateToRegion","parallel","styles","container","children","ref","map","provider","initialRegion","showsUserLocation","showsMyLocationButton","showsTraffic","mapType","customMapStyle","darkMapStyle","undefined","coordinate","onPress","anchor","x","y","markerContainer","transform","scale","colors","pickupMarker","name","size","color","deliveryMarker","location","rotation","heading","courierMarker","vehicle","type","coordinates","length","strokeWidth","strokeColor","lineDashPattern","statusContainer","opacity","translateY","statusCard","elevation","statusGradient","statusContent","statusTextContainer","statusText","message","statusSubText","eta","etaText","progress","progressContainer","progressBar","width","backgroundColor","mapControls","controlButton","elementType","stylers","create","flex","alignItems","justifyContent","height","borderRadius","borderWidth","borderColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","position","top","left","right","overflow","padding","flexDirection","marginLeft","fontSize","fontWeight","marginTop","bottom","gap"],"sources":["/home/runner/workspace/mobile/components/VTCStyleMap.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react'\nimport { View, StyleSheet, Animated, TouchableOpacity, Platform } from 'react-native'\nimport { Text, Surface, Badge, IconButton } from 'react-native-paper'\nimport MapView, { \n  Marker, \n  Polyline, \n  PROVIDER_GOOGLE, \n  AnimatedRegion, \n  Camera \n} from 'react-native-maps'\nimport { MaterialIcons, MaterialCommunityIcons, Ionicons } from '@expo/vector-icons'\nimport { LinearGradient } from 'expo-linear-gradient'\n\n// Interfaces VTC modernes\nexport interface VTCCoordinates {\n  latitude: number\n  longitude: number\n}\n\nexport interface VTCVehicle {\n  type: 'car' | 'motorcycle' | 'bicycle' | 'truck' | 'van'\n  model: string\n  plate: string\n  color?: string\n}\n\nexport interface VTCCourier {\n  id: string\n  name: string\n  rating: number\n  photo?: string\n  vehicle: VTCVehicle\n  location: VTCCoordinates\n  heading?: number\n  speed?: number\n  isOnline?: boolean\n  eta?: string\n}\n\nexport interface VTCRoute {\n  coordinates: VTCCoordinates[]\n  distance: number\n  duration: number\n  traffic?: 'light' | 'moderate' | 'heavy'\n  estimatedPrice?: number\n}\n\n// Type corrigé pour VTCDeliveryStatus\nexport interface VTCDeliveryStatus {\n  status: 'pending' | 'searching' | 'assigned' | 'transit' | 'delivered' | 'cancelled'\n  message?: string\n  eta?: string\n  progress?: number\n}\n\nexport interface VTCStyleMapProps {\n  pickupLocation?: VTCCoordinates\n  deliveryLocation?: VTCCoordinates\n  courier?: VTCCourier\n  route?: VTCRoute\n  deliveryStatus: VTCDeliveryStatus\n  userLocation?: VTCCoordinates\n  showUserLocation?: boolean\n  followUser?: boolean\n  followCourier?: boolean\n  onMapReady?: () => void\n  onCourierPress?: () => void\n  onRoutePress?: () => void\n  onPickupPress?: () => void\n  onDeliveryPress?: () => void\n  onUserLocationPress?: () => void\n  theme?: 'light' | 'dark' | 'auto'\n  showTraffic?: boolean\n  showETA?: boolean\n  showProgress?: boolean\n  style?: object\n}\n\nexport const VTCStyleMap: React.FC<VTCStyleMapProps> = ({\n  pickupLocation,\n  deliveryLocation,\n  courier,\n  route,\n  deliveryStatus,\n  userLocation,\n  showUserLocation = true,\n  followUser = false,\n  followCourier = true,\n  onMapReady,\n  onCourierPress,\n  onRoutePress,\n  onPickupPress,\n  onDeliveryPress,\n  onUserLocationPress,\n  theme = 'light',\n  showTraffic = false,\n  showETA = true,\n  showProgress = true,\n  style\n}) => {\n  const mapRef = useRef<MapView>(null)\n\n  // Animations\n  const pulseAnimation = useRef(new Animated.Value(1)).current\n  const fadeAnimation = useRef(new Animated.Value(0)).current\n  const slideAnimation = useRef(new Animated.Value(-100)).current\n\n  // State\n  const [isMapReady, setIsMapReady] = useState(false)\n  const [courierAnimatedLocation, setCourierAnimatedLocation] = useState<AnimatedRegion | null>(null)\n  const [lastCourierUpdate, setLastCourierUpdate] = useState<number>(0)\n  const [mapRegion, setMapRegion] = useState({\n    latitude: 5.3599517,\n    longitude: -4.0082563,\n    latitudeDelta: 0.01,\n    longitudeDelta: 0.01,\n  })\n\n  // Animations d'état de livraison\n  useEffect(() => {\n    if (deliveryStatus.status === 'searching') {\n      // Animation de pulsation pour la recherche\n      Animated.loop(\n        Animated.sequence([\n          Animated.timing(pulseAnimation, {\n            toValue: 1.3,\n            duration: 1000,\n            useNativeDriver: true,\n          }),\n          Animated.timing(pulseAnimation, {\n            toValue: 1,\n            duration: 1000,\n            useNativeDriver: true,\n          }),\n        ])\n      ).start()\n    } else {\n      pulseAnimation.setValue(1)\n    }\n  }, [deliveryStatus.status, pulseAnimation])\n\n  // Fonctions utilitaires pour les statuts\n  const getStatusGradient = (status: string) => {\n    switch (status) {\n      case 'searching':\n        return ['#FF6B6B', '#FF8E53']\n      case 'assigned':\n        return ['#4ECDC4', '#44A08D']\n      case 'transit':\n        return ['#45B7D1', '#96C93D']\n      case 'delivered':\n        return ['#96C93D', '#02AAB0']\n      case 'cancelled':\n        return ['#FF6B6B', '#C44569']\n      default:\n        return ['#BDC3C7', '#95A5A6']\n    }\n  }\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'searching':\n        return 'search'\n      case 'assigned':\n        return 'person-pin'\n      case 'transit':\n        return 'directions-car'\n      case 'delivered':\n        return 'check-circle'\n      case 'cancelled':\n        return 'cancel'\n      default:\n        return 'help'\n    }\n  }\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'searching':\n        return 'Recherche en cours...'\n      case 'assigned':\n        return 'Coursier assigné'\n      case 'transit':\n        return 'En transit'\n      case 'delivered':\n        return 'Livré'\n      case 'cancelled':\n        return 'Annulé'\n      default:\n        return 'En attente'\n    }\n  }\n\n  // Fonction pour obtenir la région initiale\n  const getInitialRegion = useCallback(() => {\n    if (pickupLocation && deliveryLocation) {\n      const minLat = Math.min(pickupLocation.latitude, deliveryLocation.latitude)\n      const maxLat = Math.max(pickupLocation.latitude, deliveryLocation.latitude)\n      const minLng = Math.min(pickupLocation.longitude, deliveryLocation.longitude)\n      const maxLng = Math.max(pickupLocation.longitude, deliveryLocation.longitude)\n\n      const centerLat = (minLat + maxLat) / 2\n      const centerLng = (minLng + maxLng) / 2\n      const deltaLat = (maxLat - minLat) * 1.5\n      const deltaLng = (maxLng - minLng) * 1.5\n\n      return {\n        latitude: centerLat,\n        longitude: centerLng,\n        latitudeDelta: Math.max(deltaLat, 0.01),\n        longitudeDelta: Math.max(deltaLng, 0.01),\n      }\n    } else if (pickupLocation) {\n      return {\n        latitude: pickupLocation.latitude,\n        longitude: pickupLocation.longitude,\n        latitudeDelta: 0.01,\n        longitudeDelta: 0.01,\n      }\n    } else {\n      return mapRegion\n    }\n  }, [pickupLocation, deliveryLocation, mapRegion])\n\n  // Mise à jour de la région de la carte\n  useEffect(() => {\n    if (isMapReady) {\n      const region = getInitialRegion()\n      mapRef.current?.animateToRegion(region, 1000)\n    }\n  }, [isMapReady, getInitialRegion])\n\n  // Animation d'apparition des éléments UI\n  useEffect(() => {\n    Animated.parallel([\n      Animated.timing(fadeAnimation, {\n        toValue: 1,\n        duration: 800,\n        useNativeDriver: true,\n      }),\n      Animated.timing(slideAnimation, {\n        toValue: 0,\n        duration: 600,\n        useNativeDriver: true,\n      }),\n    ]).start()\n  }, [fadeAnimation, slideAnimation])\n\n  return (\n    <View style={[styles.container, style]}>\n      {/* Carte principale */}\n      <MapView\n        ref={mapRef}\n        style={styles.map}\n        provider={PROVIDER_GOOGLE}\n        initialRegion={getInitialRegion()}\n        showsUserLocation={showUserLocation}\n        showsMyLocationButton={false}\n        showsTraffic={showTraffic}\n        onMapReady={() => {\n          setIsMapReady(true)\n          onMapReady?.()\n        }}\n        mapType=\"standard\"\n        customMapStyle={theme === 'dark' ? darkMapStyle : undefined}\n      >\n        {/* Marqueur de ramassage */}\n        {pickupLocation && (\n          <Marker\n            coordinate={pickupLocation}\n            onPress={onPickupPress}\n            anchor={{ x: 0.5, y: 1 }}\n          >\n            <Animated.View\n              style={[\n                styles.markerContainer,\n                { transform: [{ scale: deliveryStatus.status === 'searching' ? pulseAnimation : 1 }] }\n              ]}\n            >\n              <LinearGradient\n                colors={['#4ECDC4', '#44A08D']}\n                style={styles.pickupMarker}\n              >\n                <MaterialIcons name=\"location-on\" size={20} color=\"white\" />\n              </LinearGradient>\n            </Animated.View>\n          </Marker>\n        )}\n\n        {/* Marqueur de livraison */}\n        {deliveryLocation && (\n          <Marker\n            coordinate={deliveryLocation}\n            onPress={onDeliveryPress}\n            anchor={{ x: 0.5, y: 1 }}\n          >\n            <View style={styles.markerContainer}>\n              <LinearGradient\n                colors={['#FF6B6B', '#FF8E53']}\n                style={styles.deliveryMarker}\n              >\n                <MaterialIcons name=\"flag\" size={20} color=\"white\" />\n              </LinearGradient>\n            </View>\n          </Marker>\n        )}\n\n        {/* Marqueur du coursier */}\n        {courier && (\n          <Marker\n            coordinate={courier.location}\n            onPress={onCourierPress}\n            anchor={{ x: 0.5, y: 0.5 }}\n            rotation={courier.heading || 0}\n          >\n            <View style={styles.courierMarker}>\n              <MaterialIcons \n                name={courier.vehicle.type === 'car' ? 'directions-car' : 'motorcycle'} \n                size={24} \n                color=\"#2196F3\" \n              />\n            </View>\n          </Marker>\n        )}\n\n        {/* Tracé de la route */}\n        {route && route.coordinates.length > 0 && (\n          <Polyline\n            coordinates={route.coordinates}\n            strokeWidth={4}\n            strokeColor=\"#2196F3\"\n            lineDashPattern={[5, 5]}\n            onPress={onRoutePress}\n          />\n        )}\n      </MapView>\n\n      {/* Interface utilisateur superposée */}\n      <Animated.View \n        style={[\n          styles.statusContainer,\n          { opacity: fadeAnimation, transform: [{ translateY: slideAnimation }] }\n        ]}\n      >\n        <Surface style={styles.statusCard} elevation={4}>\n          <LinearGradient\n            colors={getStatusGradient(deliveryStatus.status)}\n            style={styles.statusGradient}\n          >\n            <View style={styles.statusContent}>\n              <MaterialIcons \n                name={getStatusIcon(deliveryStatus.status)} \n                size={24} \n                color=\"white\" \n              />\n              <View style={styles.statusTextContainer}>\n                <Text style={styles.statusText}>\n                  {getStatusText(deliveryStatus.status)}\n                </Text>\n                {deliveryStatus.message && (\n                  <Text style={styles.statusSubText}>\n                    {deliveryStatus.message}\n                  </Text>\n                )}\n                {showETA && deliveryStatus.eta && (\n                  <Text style={styles.etaText}>\n                    Arrivée prévue: {deliveryStatus.eta}\n                  </Text>\n                )}\n              </View>\n            </View>\n          </LinearGradient>\n\n          {/* Barre de progression */}\n          {showProgress && deliveryStatus.progress !== undefined && (\n            <View style={styles.progressContainer}>\n              <View \n                style={[\n                  styles.progressBar,\n                  { \n                    width: `${deliveryStatus.progress}%`,\n                    backgroundColor: getStatusGradient(deliveryStatus.status)[0]\n                  }\n                ]} \n              />\n            </View>\n          )}\n        </Surface>\n      </Animated.View>\n\n      {/* Contrôles de la carte */}\n      <View style={styles.mapControls}>\n        <TouchableOpacity\n          style={styles.controlButton}\n          onPress={() => {\n            if (userLocation && mapRef.current) {\n              mapRef.current.animateToRegion({\n                latitude: userLocation.latitude,\n                longitude: userLocation.longitude,\n                latitudeDelta: 0.01,\n                longitudeDelta: 0.01,\n              }, 1000)\n            }\n          }}\n        >\n          <MaterialIcons name=\"my-location\" size={20} color=\"#2196F3\" />\n        </TouchableOpacity>\n\n        <TouchableOpacity\n          style={styles.controlButton}\n          onPress={() => {\n            if (mapRef.current) {\n              const region = getInitialRegion()\n              mapRef.current.animateToRegion(region, 1000)\n            }\n          }}\n        >\n          <MaterialIcons name=\"center-focus-strong\" size={20} color=\"#2196F3\" />\n        </TouchableOpacity>\n      </View>\n    </View>\n  )\n}\n\n// Style de carte sombre\nconst darkMapStyle = [\n  {\n    elementType: 'geometry',\n    stylers: [{ color: '#242f3e' }],\n  },\n  {\n    elementType: 'labels.text.stroke',\n    stylers: [{ color: '#242f3e' }],\n  },\n  {\n    elementType: 'labels.text.fill',\n    stylers: [{ color: '#746855' }],\n  },\n]\n\n// Styles modernes\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#F5F5F5',\n  },\n  map: {\n    flex: 1,\n  },\n\n  // Marqueurs\n  markerContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  pickupMarker: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 3,\n    borderColor: 'white',\n  },\n  deliveryMarker: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 3,\n    borderColor: 'white',\n  },\n  courierMarker: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 3,\n    borderColor: '#2196F3',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n\n  // Interface utilisateur superposée\n  statusContainer: {\n    position: 'absolute',\n    top: 50,\n    left: 16,\n    right: 16,\n  },\n  statusCard: {\n    borderRadius: 16,\n    overflow: 'hidden',\n  },\n  statusGradient: {\n    padding: 16,\n  },\n  statusContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  statusTextContainer: {\n    marginLeft: 12,\n    flex: 1,\n  },\n  statusText: {\n    fontSize: 16,\n    fontWeight: '600',\n    color: 'white',\n  },\n  statusSubText: {\n    fontSize: 14,\n    color: 'rgba(255, 255, 255, 0.8)',\n    marginTop: 2,\n  },\n  etaText: {\n    fontSize: 12,\n    color: 'rgba(255, 255, 255, 0.9)',\n    marginTop: 4,\n  },\n\n  // Barre de progression\n  progressContainer: {\n    height: 4,\n    backgroundColor: 'rgba(255, 255, 255, 0.3)',\n  },\n  progressBar: {\n    height: '100%',\n    borderRadius: 2,\n  },\n\n  // Contrôles de carte\n  mapControls: {\n    position: 'absolute',\n    bottom: 120,\n    right: 16,\n    flexDirection: 'column',\n    gap: 8,\n  },\n  controlButton: {\n    width: 44,\n    height: 44,\n    borderRadius: 22,\n    backgroundColor: '#FFFFFF',\n    alignItems: 'center',\n    justifyContent: 'center',\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n  },\n})\n\nexport default VTCStyleMap"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}