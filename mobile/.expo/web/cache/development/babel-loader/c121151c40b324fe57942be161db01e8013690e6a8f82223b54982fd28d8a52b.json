{"ast":null,"code":"\"use client\";\n\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { createContext, useContext, useState, useEffect } from \"react\";\nimport NetInfo from \"@react-native-community/netinfo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar NetworkContext = createContext(undefined);\nexport var NetworkProvider = function NetworkProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    isConnected = _useState2[0],\n    setIsConnected = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    isOfflineMode = _useState4[0],\n    setIsOfflineMode = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    pendingUploads = _useState6[0],\n    setPendingUploads = _useState6[1];\n  var _useState7 = useState([]),\n    _useState8 = _slicedToArray(_useState7, 1),\n    pendingDownloads = _useState8[0];\n  useEffect(function () {\n    var unsubscribe = NetInfo.addEventListener(function (state) {\n      var _state$isConnected;\n      setIsConnected((_state$isConnected = state.isConnected) != null ? _state$isConnected : false);\n    });\n    return function () {\n      return unsubscribe();\n    };\n  }, []);\n  var addPendingUpload = function addPendingUpload(operation) {\n    var newOperation = _objectSpread(_objectSpread({}, operation), {}, {\n      id: Date.now().toString(),\n      timestamp: new Date().toISOString()\n    });\n    setPendingUploads(function (prev) {\n      return [].concat(_toConsumableArray(prev), [newOperation]);\n    });\n  };\n  var synchronizeData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        return true;\n      } catch (error) {\n        console.error(\"Synchronization failed:\", error);\n        return false;\n      }\n    });\n    return function synchronizeData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var toggleOfflineMode = function toggleOfflineMode(enabled) {\n    setIsOfflineMode(enabled);\n  };\n  var value = {\n    isConnected: isConnected,\n    isOfflineMode: isOfflineMode,\n    pendingUploads: pendingUploads,\n    pendingDownloads: pendingDownloads,\n    addPendingUpload: addPendingUpload,\n    synchronizeData: synchronizeData,\n    toggleOfflineMode: toggleOfflineMode\n  };\n  return _jsx(NetworkContext.Provider, {\n    value: value,\n    children: children\n  });\n};\nexport var useNetwork = function useNetwork() {\n  var context = useContext(NetworkContext);\n  if (!context) {\n    throw new Error(\"useNetwork must be used within a NetworkProvider\");\n  }\n  return context;\n};\nexport var useNetworkContext = useNetwork;","map":{"version":3,"names":["_asyncToGenerator","_toConsumableArray","_defineProperty","_slicedToArray","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","createContext","useContext","useState","useEffect","NetInfo","jsx","_jsx","NetworkContext","undefined","NetworkProvider","_ref","children","_useState","_useState2","isConnected","setIsConnected","_useState3","_useState4","isOfflineMode","setIsOfflineMode","_useState5","_useState6","pendingUploads","setPendingUploads","_useState7","_useState8","pendingDownloads","unsubscribe","addEventListener","state","_state$isConnected","addPendingUpload","operation","newOperation","id","Date","now","toString","timestamp","toISOString","prev","concat","synchronizeData","_ref2","error","console","toggleOfflineMode","enabled","value","Provider","useNetwork","context","Error","useNetworkContext"],"sources":["/home/runner/workspace/mobile/contexts/NetworkContext.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\nimport { createContext, useContext, useState, useEffect, type ReactNode } from \"react\"\nimport NetInfo from \"@react-native-community/netinfo\"\nimport type { PendingOperation } from \"../types/models\"\n\ninterface NetworkContextType {\n  isConnected: boolean\n  isOfflineMode: boolean\n  pendingUploads: PendingOperation[]\n  pendingDownloads: PendingOperation[]\n  addPendingUpload: (operation: Omit<PendingOperation, \"timestamp\" | \"id\">) => void\n  synchronizeData: () => Promise<boolean>\n  toggleOfflineMode: (enabled: boolean) => void\n}\n\nconst NetworkContext = createContext<NetworkContextType | undefined>(undefined)\n\ninterface NetworkProviderProps {\n  children: ReactNode\n}\n\nexport const NetworkProvider: React.FC<NetworkProviderProps> = ({ children }) => {\n  const [isConnected, setIsConnected] = useState(true)\n  const [isOfflineMode, setIsOfflineMode] = useState(false)\n  const [pendingUploads, setPendingUploads] = useState<PendingOperation[]>([])\n  const [pendingDownloads] = useState<PendingOperation[]>([])\n\n  useEffect(() => {\n    const unsubscribe = NetInfo.addEventListener((state) => {\n      setIsConnected(state.isConnected ?? false)\n    })\n\n    return () => unsubscribe()\n  }, [])\n\n  const addPendingUpload = (operation: Omit<PendingOperation, \"timestamp\" | \"id\">) => {\n    const newOperation: PendingOperation = {\n      ...operation,\n      id: Date.now().toString(),\n      timestamp: new Date().toISOString(),\n    }\n    setPendingUploads((prev) => [...prev, newOperation])\n  }\n\n  const synchronizeData = async (): Promise<boolean> => {\n    try {\n      // Implement synchronization logic here\n      return true\n    } catch (error) {\n      console.error(\"Synchronization failed:\", error)\n      return false\n    }\n  }\n\n  const toggleOfflineMode = (enabled: boolean) => {\n    setIsOfflineMode(enabled)\n  }\n\n  const value: NetworkContextType = {\n    isConnected,\n    isOfflineMode,\n    pendingUploads,\n    pendingDownloads,\n    addPendingUpload,\n    synchronizeData,\n    toggleOfflineMode,\n  }\n\n  return <NetworkContext.Provider value={value}>{children}</NetworkContext.Provider>\n}\n\nexport const useNetwork = (): NetworkContextType => {\n  const context = useContext(NetworkContext)\n  if (!context) {\n    throw new Error(\"useNetwork must be used within a NetworkProvider\")\n  }\n  return context\n}\n\nexport const useNetworkContext = useNetwork"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}