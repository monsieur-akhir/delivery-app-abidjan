name: Mobile CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'mobile/**'
      - '.github/workflows/ci-cd.yml'
  pull_request:
    branches: [main, develop]
    paths:
      - 'mobile/**'
      - '.github/workflows/ci-cd.yml'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mobile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: './mobile/yarn.lock'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run linter
        run: yarn lint

      - name: Run type check
        run: yarn tsc --noEmit

      - name: Run tests
        run: yarn test --coverage

      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./mobile/coverage
          flags: mobile
          fail_ci_if_error: false

  build-android:
    name: Build Android
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mobile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: './mobile/yarn.lock'

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup environment variables
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            cp .env.production .env
            echo "RELEASE_CHANNEL=production" >> $GITHUB_ENV
          else
            cp .env.staging .env
            echo "RELEASE_CHANNEL=staging" >> $GITHUB_ENV
          fi

      - name: Build Android app
        run: eas build --platform android --profile ${{ env.RELEASE_CHANNEL }} --non-interactive

  build-ios:
    name: Build iOS
    needs: test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    runs-on: macos-latest
    defaults:
      run:
        working-directory: ./mobile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: './mobile/yarn.lock'

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup environment variables
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            cp .env.production .env
            echo "RELEASE_CHANNEL=production" >> $GITHUB_ENV
          else
            cp .env.staging .env
            echo "RELEASE_CHANNEL=staging" >> $GITHUB_ENV
          fi

      - name: Build iOS app
        run: eas build --platform ios --profile ${{ env.RELEASE_CHANNEL }} --non-interactive

  deploy:
    name: Deploy
    needs: [build-android, build-ios]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mobile

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'
          cache-dependency-path: './mobile/yarn.lock'

      - name: Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Determine environment
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "RELEASE_CHANNEL=production" >> $GITHUB_ENV
          else
            echo "RELEASE_CHANNEL=staging" >> $GITHUB_ENV
          fi

      - name: Submit to app stores
        if: github.ref == 'refs/heads/main'
        run: eas submit --platform all --profile production --non-interactive

      - name: Update OTA
        run: eas update --branch ${{ env.RELEASE_CHANNEL }} --message "Update ${{ github.sha }}"

      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
