~/workspace/mobile$ npx tsc
App.tsx:201:49 - error TS2322: Type '({ route, navigation }: BidsScreenProps) => React.JSX.Element' is not assignable to type 'ScreenComponentType<ClientDeliveriesParamList, "Bids"> | undefined'.
  Type '({ route, navigation }: BidsScreenProps) => React.JSX.Element' is not assignable to type 'FunctionComponent<{}>'.
    Types of parameters '__0' and 'props' are incompatible.
      Type '{}' is missing the following properties from type 'BidsScreenProps': route, navigation

201       <ClientDeliveriesStack.Screen name="Bids" component={BidsScreen} />
                                                    ~~~~~~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:318:5
    318     component: ScreenComponentType<ParamList, RouteName>;
            ~~~~~~~~~
    The expected type comes from property 'component' which is declared here on type 'IntrinsicAttributes & RouteConfig<ClientDeliveriesParamList, "Bids", StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

App.tsx:202:58 - error TS2322: Type 'FC<TrackDeliveryScreenProps>' is not assignable to type 'ScreenComponentType<ClientDeliveriesParamList, "TrackDelivery"> | undefined'.
  Type 'FunctionComponent<TrackDeliveryScreenProps>' is not assignable to type 'FunctionComponent<{}>'.
    Types of parameters 'props' and 'props' are incompatible.
      Type '{}' is missing the following properties from type 'TrackDeliveryScreenProps': route, navigation

202       <ClientDeliveriesStack.Screen name="TrackDelivery" component={TrackDeliveryScreen} />
                                                             ~~~~~~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:318:5
    318     component: ScreenComponentType<ParamList, RouteName>;
            ~~~~~~~~~
    The expected type comes from property 'component' which is declared here on type 'IntrinsicAttributes & RouteConfig<ClientDeliveriesParamList, "TrackDelivery", StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

App.tsx:203:52 - error TS2322: Type '({ route, navigation }: PaymentScreenProps) => React.JSX.Element' is not assignable to type 'ScreenComponentType<ClientDeliveriesParamList, "Payment"> | undefined'.
  Type '({ route, navigation }: PaymentScreenProps) => React.JSX.Element' is not assignable to type 'FunctionComponent<{}>'.
    Types of parameters '__0' and 'props' are incompatible.
      Type '{}' is missing the following properties from type 'PaymentScreenProps': route, navigation

203       <ClientDeliveriesStack.Screen name="Payment" component={PaymentScreen} />
                                                       ~~~~~~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:318:5
    318     component: ScreenComponentType<ParamList, RouteName>;
            ~~~~~~~~~
    The expected type comes from property 'component' which is declared here on type 'IntrinsicAttributes & RouteConfig<ClientDeliveriesParamList, "Payment", StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

App.tsx:215:49 - error TS2322: Type 'FC<BidScreenProps>' is not assignable to type 'ScreenComponentType<CourierDeliveriesParamList, "Bid"> | undefined'.
  Type 'FunctionComponent<BidScreenProps>' is not assignable to type 'FunctionComponent<{}>'.
    Types of parameters 'props' and 'props' are incompatible.
      Type '{}' is missing the following properties from type 'BidScreenProps': route, navigation

215       <CourierDeliveriesStack.Screen name="Bid" component={BidScreen} />
                                                    ~~~~~~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:318:5
    318     component: ScreenComponentType<ParamList, RouteName>;
            ~~~~~~~~~
    The expected type comes from property 'component' which is declared here on type 'IntrinsicAttributes & RouteConfig<CourierDeliveriesParamList, "Bid", StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

App.tsx:308:57 - error TS2322: Type '"Onboarding"' is not assignable to type 'keyof RootStackParamList'.

308                         {isFirstLaunch && <Stack.Screen name="Onboarding" component={OnboardingScreen} />}
                                                            ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

App.tsx:317:39 - error TS2322: Type '"ClientTabs"' is not assignable to type 'keyof RootStackParamList'.

317                         <Stack.Screen name="ClientTabs" component={ClientTabNavigator} />
                                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

App.tsx:318:39 - error TS2820: Type '"CourierTabs"' is not assignable to type 'keyof RootStackParamList'. Did you mean '"CourierStats"'?

318                         <Stack.Screen name="CourierTabs" component={CourierTabNavigator} />
                                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

App.tsx:324:39 - error TS2322: Type '"Bids"' is not assignable to type 'keyof RootStackParamList'.

324                         <Stack.Screen name="Bids" component={BidsScreen} />
                                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

App.tsx:324:51 - error TS2322: Type '({ route, navigation }: BidsScreenProps) => React.JSX.Element' is not assignable to type 'ScreenComponentType<RootStackParamList, keyof RootStackParamList> | undefined'.
  Type '({ route, navigation }: BidsScreenProps) => React.JSX.Element' is not assignable to type 'FunctionComponent<{}>'.
    Types of parameters '__0' and 'props' are incompatible.
      Type '{}' is missing the following properties from type 'BidsScreenProps': route, navigation

324                         <Stack.Screen name="Bids" component={BidsScreen} />
                                                      ~~~~~~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:318:5
    318     component: ScreenComponentType<ParamList, RouteName>;
            ~~~~~~~~~
    The expected type comes from property 'component' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

App.tsx:326:39 - error TS2322: Type '"Payment"' is not assignable to type 'keyof RootStackParamList'.

326                         <Stack.Screen name="Payment" component={PaymentScreen} />
                                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

App.tsx:326:54 - error TS2322: Type '({ route, navigation }: PaymentScreenProps) => React.JSX.Element' is not assignable to type 'ScreenComponentType<RootStackParamList, keyof RootStackParamList> | undefined'.
  Type '({ route, navigation }: PaymentScreenProps) => React.JSX.Element' is not assignable to type 'FunctionComponent<{}>'.
    Types of parameters '__0' and 'props' are incompatible.
      Type '{}' is missing the following properties from type 'PaymentScreenProps': route, navigation

326                         <Stack.Screen name="Payment" component={PaymentScreen} />
                                                         ~~~~~~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:318:5
    318     component: ScreenComponentType<ParamList, RouteName>;
            ~~~~~~~~~
    The expected type comes from property 'component' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

__tests__/components/StarRating.test.tsx:7:38 - error TS2741: Property 'rating' is missing in type '{}' but required in type 'StarRatingProps'.

7     const { getAllByRole } = render(<StarRating />)
                                       ~~~~~~~~~~

  components/StarRating.tsx:6:3
    6   rating: number
        ~~~~~~
    'rating' is declared here.

__tests__/components/StarRating.test.tsx:27:38 - error TS2741: Property 'rating' is missing in type '{ onRatingChange: Mock<UnknownFunction>; }' but required in type 'StarRatingProps'.

27     const { getAllByRole } = render(<StarRating onRatingChange={mockOnRatingChange} />)
                                        ~~~~~~~~~~

  components/StarRating.tsx:6:3
    6   rating: number
        ~~~~~~
    'rating' is declared here.

__tests__/components/StarRating.test.tsx:40:85 - error TS2322: Type '{ onRatingChange: Mock<UnknownFunction>; disabled: boolean; }' is not assignable to type 'IntrinsicAttributes & StarRatingProps'.
  Property 'disabled' does not exist on type 'IntrinsicAttributes & StarRatingProps'.

40     const { getAllByRole } = render(<StarRating onRatingChange={mockOnRatingChange} disabled={true} />)
                                                                                       ~~~~~~~~

__tests__/components/VoiceAssistant.test.tsx:4:25 - error TS2307: Cannot find module 'expo-speech' or its corresponding type declarations.

4 import * as Speech from "expo-speech"
                          ~~~~~~~~~~~~~

__tests__/components/VoiceAssistant.test.tsx:9:6 - error TS2339: Property 'mock' does not exist on type 'typeof import("/home/runner/workspace/mobile/node_modules/jest/build/index")'.

9 jest.mock("../../services/api", () => ({
       ~~~~

__tests__/components/VoiceAssistant.test.tsx:10:29 - error TS2339: Property 'fn' does not exist on type 'typeof import("/home/runner/workspace/mobile/node_modules/jest/build/index")'.

10   processVoiceCommand: jest.fn(() =>
                               ~~

__tests__/components/VoiceAssistant.test.tsx:24:18 - error TS2339: Property 'fn' does not exist on type 'typeof import("/home/runner/workspace/mobile/node_modules/jest/build/index")'.

24   navigate: jest.fn(),
                    ~~

__tests__/components/VoiceAssistant.test.tsx:29:10 - error TS2339: Property 'clearAllMocks' does not exist on type 'typeof import("/home/runner/workspace/mobile/node_modules/jest/build/index")'.

29     jest.clearAllMocks()
            ~~~~~~~~~~~~~

__tests__/components/VoiceAssistant.test.tsx:33:50 - error TS2322: Type '{ navigation: { navigate: any; }; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'navigation' does not exist on type 'IntrinsicAttributes'.

33     const { getByRole } = render(<VoiceAssistant navigation={mockNavigation} />)
                                                    ~~~~~~~~~~

__tests__/components/VoiceAssistant.test.tsx:41:61 - error TS2322: Type '{ navigation: { navigate: any; }; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'navigation' does not exist on type 'IntrinsicAttributes'.

41     const { getByRole, getByText } = render(<VoiceAssistant navigation={mockNavigation} />)
                                                               ~~~~~~~~~~

__tests__/components/VoiceAssistant.test.tsx:53:74 - error TS2322: Type '{ navigation: { navigate: any; }; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'navigation' does not exist on type 'IntrinsicAttributes'.

53     const { getByRole, getByText, queryByText } = render(<VoiceAssistant navigation={mockNavigation} />)
                                                                            ~~~~~~~~~~

__tests__/components/VoiceAssistant.test.tsx:72:73 - error TS2322: Type '{ navigation: { navigate: any; }; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'navigation' does not exist on type 'IntrinsicAttributes'.

72     const { getByRole, getByText, findByText } = render(<VoiceAssistant navigation={mockNavigation} />)
                                                                           ~~~~~~~~~~

__tests__/components/VoiceAssistant.test.tsx:113:33 - error TS2339: Property 'requireMock' does not exist on type 'typeof import("/home/runner/workspace/mobile/node_modules/jest/build/index")'.

113     const useNetworkMock = jest.requireMock("../../contexts/NetworkContext").useNetwork
                                    ~~~~~~~~~~~

__tests__/components/VoiceAssistant.test.tsx:119:73 - error TS2322: Type '{ navigation: { navigate: any; }; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'navigation' does not exist on type 'IntrinsicAttributes'.

119     const { getByRole, getByText, findByText } = render(<VoiceAssistant navigation={mockNavigation} />)
                                                                            ~~~~~~~~~~

__tests__/components/VoiceAssistant.test.tsx:134:74 - error TS2322: Type '{ navigation: { navigate: any; }; }' is not assignable to type 'IntrinsicAttributes'.
  Property 'navigation' does not exist on type 'IntrinsicAttributes'.

134     const { getByRole, getByText, queryByText } = render(<VoiceAssistant navigation={mockNavigation} />)
                                                                             ~~~~~~~~~~

__tests__/contexts/NetworkContext.test.tsx:8:6 - error TS2339: Property 'mock' does not exist on type 'typeof import("/home/runner/workspace/mobile/node_modules/jest/build/index")'.

8 jest.mock("@react-native-community/netinfo", () => ({
       ~~~~

__tests__/contexts/NetworkContext.test.tsx:9:26 - error TS2339: Property 'fn' does not exist on type 'typeof import("/home/runner/workspace/mobile/node_modules/jest/build/index")'.

9   addEventListener: jest.fn(() => jest.fn()),
                           ~~

__tests__/contexts/NetworkContext.test.tsx:9:40 - error TS2339: Property 'fn' does not exist on type 'typeof import("/home/runner/workspace/mobile/node_modules/jest/build/index")'.

9   addEventListener: jest.fn(() => jest.fn()),
                                         ~~

__tests__/contexts/NetworkContext.test.tsx:10:15 - error TS2339: Property 'fn' does not exist on type 'typeof import("/home/runner/workspace/mobile/node_modules/jest/build/index")'.

10   fetch: jest.fn(() => Promise.resolve({ isConnected: true, isInternetReachable: true })),
                 ~~

__tests__/contexts/NetworkContext.test.tsx:14:20 - error TS7031: Binding element 'children' implicitly has an 'any' type.

14 const wrapper = ({ children }) => <NetworkProvider>{children}</NetworkProvider>
                      ~~~~~~~~

__tests__/contexts/NetworkContext.test.tsx:19:10 - error TS2339: Property 'clearAllMocks' does not exist on type 'typeof import("/home/runner/workspace/mobile/node_modules/jest/build/index")'.

19     jest.clearAllMocks()
            ~~~~~~~~~~~~~

__tests__/contexts/NetworkContext.test.tsx:34:27 - error TS2339: Property 'syncInProgress' does not exist on type 'NetworkContextType'.

34     expect(result.current.syncInProgress).toBe(false)
                             ~~~~~~~~~~~~~~

__tests__/contexts/NetworkContext.test.tsx:35:27 - error TS2339: Property 'lastSyncTime' does not exist on type 'NetworkContextType'.

35     expect(result.current.lastSyncTime).toBeNull()
                             ~~~~~~~~~~~~

__tests__/contexts/NetworkContext.test.tsx:75:9 - error TS2322: Type '"delivery"' is not assignable to type '"payment" | "create_delivery" | "submit_rating" | "bid" | "tracking" | "update_profile" | "support_request" | "profile_image" | "profile_update" | "support_ticket" | "ticket_reply" | "collaborative_delivery" | "register"'.

75         type: "delivery",
           ~~~~

  types/models.ts:291:3
    291   type:
          ~~~~
    The expected type comes from property 'type' which is declared here on type 'Omit<PendingOperation, "id" | "timestamp">'

__tests__/contexts/NetworkContext.test.tsx:99:9 - error TS2322: Type '"delivery"' is not assignable to type '"payment" | "create_delivery" | "submit_rating" | "bid" | "tracking" | "update_profile" | "support_request" | "profile_image" | "profile_update" | "support_ticket" | "ticket_reply" | "collaborative_delivery" | "register"'.

99         type: "delivery",
           ~~~~

  types/models.ts:291:3
    291   type:
          ~~~~
    The expected type comes from property 'type' which is declared here on type 'Omit<PendingOperation, "id" | "timestamp">'

__tests__/contexts/NetworkContext.test.tsx:110:38 - error TS2551: Property 'removePendingUpload' does not exist on type 'NetworkContextType'. Did you mean 'pendingUploads'?

110       const success = result.current.removePendingUpload(uploadId)
                                         ~~~~~~~~~~~~~~~~~~~

  contexts/NetworkContext.tsx:11:3
    11   pendingUploads: PendingOperation[]
         ~~~~~~~~~~~~~~
    'pendingUploads' is declared here.

__tests__/contexts/NetworkContext.test.tsx:130:9 - error TS2322: Type '"delivery"' is not assignable to type '"payment" | "create_delivery" | "submit_rating" | "bid" | "tracking" | "update_profile" | "support_request" | "profile_image" | "profile_update" | "support_ticket" | "ticket_reply" | "collaborative_delivery" | "register"'.

130         type: "delivery",
            ~~~~

  types/models.ts:291:3
    291   type:
          ~~~~
    The expected type comes from property 'type' which is declared here on type 'Omit<PendingOperation, "id" | "timestamp">'

__tests__/contexts/NetworkContext.test.tsx:135:22 - error TS2551: Property 'addPendingDownload' does not exist on type 'NetworkContextType'. Did you mean 'pendingDownloads'?

135       result.current.addPendingDownload({
                         ~~~~~~~~~~~~~~~~~~

  contexts/NetworkContext.tsx:12:3
    12   pendingDownloads: PendingOperation[]
         ~~~~~~~~~~~~~~~~
    'pendingDownloads' is declared here.

__tests__/contexts/NetworkContext.test.tsx:148:44 - error TS2339: Property 'clearPendingData' does not exist on type 'NetworkContextType'.

148       const success = await result.current.clearPendingData()
                                               ~~~~~~~~~~~~~~~~

__tests__/contexts/NetworkContext.test.tsx:168:51 - error TS2339: Property 'mock' does not exist on type '(listener: NetInfoChangeHandler) => NetInfoSubscription'.

168     const mockListener = NetInfo.addEventListener.mock.calls[0][0]
                                                      ~~~~

components/AddressAutocomplete.tsx:27:26 - error TS7016: Could not find a declaration file for module 'lodash'. '/home/runner/workspace/mobile/node_modules/lodash/lodash.js' implicitly has an 'any' type.
  Try `npm i --save-dev @types/lodash` if it exists or add a new declaration (.d.ts) file containing `declare module 'lodash';`

27 import { debounce } from "lodash";
                            ~~~~~~~~

components/AddressAutocomplete.tsx:342:20 - error TS2345: Argument of type '(Address | { name: string; commune: string; latitude: number; longitude: number; type: string; })[]' is not assignable to parameter of type 'SetStateAction<Address[]>'.
  Type '(Address | { name: string; commune: string; latitude: number; longitude: number; type: string; })[]' is not assignable to type 'Address[]'.
    Type 'Address | { name: string; commune: string; latitude: number; longitude: number; type: string; }' is not assignable to type 'Address'.
      Type '{ name: string; commune: string; latitude: number; longitude: number; type: string; }' is missing the following properties from type 'Address': id, description

342     setSuggestions([...recentAddresses, ...popularPlaces])
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

components/AddressAutocomplete.tsx:490:48 - error TS2322: Type '8' is not assignable to type '(number & (Elevation & (0 | 1 | 5 | 3 | 2 | 4 | Value))) | undefined'.

490           <Card style={styles.suggestionsCard} elevation={8}>
                                                   ~~~~~~~~~

  node_modules/react-native-paper/lib/typescript/components/Card/Card.d.ts:17:5
    17     elevation?: never;
           ~~~~~~~~~
    The expected type comes from property 'elevation' which is declared here on type 'IntrinsicAttributes & ((Omit<OutlinedCardProps & $Omit<Omit<Props, "ref"> & RefAttributes<View>, "mode"> & { ...; }, "ref"> | Omit<...> | Omit<...>) & RefAttributes<...>)'

components/FeatherIcon.tsx:305:19 - error TS2322: Type 'FeatherIconName' is not assignable to type '"package" | "tag" | "credit-card" | "star" | "gift" | "bell" | "delete" | "link" | "user" | "phone" | "code" | "image" | "map" | "filter" | "bold" | "type" | "key" | "camera" | "anchor" | ... 267 more ... | undefined'.
  Type '"gavel"' is not assignable to type '"package" | "tag" | "credit-card" | "star" | "gift" | "bell" | "delete" | "link" | "user" | "phone" | "code" | "image" | "map" | "filter" | "bold" | "type" | "key" | "camera" | "anchor" | ... 267 more ... | undefined'.

305   return <Feather name={name} size={size} color={color} style={style} />
                      ~~~~

  node_modules/@expo/vector-icons/build/createIconSet.d.ts:17:5
    17     name: GLYPHS;
           ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & IntrinsicClassAttributes<Component<IconProps<"package" | "tag" | "credit-card" | "star" | "gift" | "bell" | "delete" | "link" | "user" | "phone" | "code" | "image" | "map" | ... 272 more ... | "divide-square">, {}, any>> & Pick<...> & InexactPartial<...> & InexactPartial<...>'

components/VTCStyleMap.tsx:442:44 - error TS2322: Type '8' is not assignable to type 'Elevation | undefined'.

442         <Surface style={styles.statusCard} elevation={8}>
                                               ~~~~~~~~~

  node_modules/react-native-paper/lib/typescript/components/Surface.d.ts:21:5
    21     elevation?: Elevation;
           ~~~~~~~~~
    The expected type comes from property 'elevation' which is declared here on type 'IntrinsicAttributes & Omit<Props, "ref"> & RefAttributes<View>'

components/WeatherAlertModal.tsx:77:63 - error TS2322: Type '{ name: "x"; size: number; color: string; onPress: () => void; }' is not assignable to type 'IntrinsicAttributes & FeatherIconProps'.
  Property 'onPress' does not exist on type 'IntrinsicAttributes & FeatherIconProps'.

77               <FeatherIcon name="x" size={24} color="#757575" onPress={onDismiss} />
                                                                 ~~~~~~~

contexts/NotificationContext.tsx:59:9 - error TS2322: Type 'string | null' is not assignable to type 'string'.
  Type 'null' is not assignable to type 'string'.

59         title: notification.request.content.title,
           ~~~~~

  types/models.ts:256:3
    256   title: string
          ~~~~~
    The expected type comes from property 'title' which is declared here on type 'Notification'

contexts/NotificationContext.tsx:60:9 - error TS2322: Type 'string | null' is not assignable to type 'string'.
  Type 'null' is not assignable to type 'string'.

60         message: notification.request.content.body,
           ~~~~~~~

  types/models.ts:257:3
    257   message: string
          ~~~~~~~
    The expected type comes from property 'message' which is declared here on type 'Notification'

contexts/NotificationContext.tsx:213:54 - error TS2339: Property 'read' does not exist on type 'Notification'.

213   const unreadCount = notifications.filter((n) => !n.read).length
                                                         ~~~~

hooks/useDelivery.ts:15:3 - error TS2614: Module '"../services/DeliveryService"' has no exported member 'DeliveryCreateRequest'. Did you mean to use 'import DeliveryCreateRequest from "../services/DeliveryService"' instead?

15   DeliveryCreateRequest,
     ~~~~~~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:16:3 - error TS2614: Module '"../services/DeliveryService"' has no exported member 'DeliveryUpdateRequest'. Did you mean to use 'import DeliveryUpdateRequest from "../services/DeliveryService"' instead?

16   DeliveryUpdateRequest,
     ~~~~~~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:17:3 - error TS2614: Module '"../services/DeliveryService"' has no exported member 'DeliveryFilters'. Did you mean to use 'import DeliveryFilters from "../services/DeliveryService"' instead?

17   DeliveryFilters,
     ~~~~~~~~~~~~~~~

hooks/useDelivery.ts:19:3 - error TS2614: Module '"../services/DeliveryService"' has no exported member 'BidCreateRequest'. Did you mean to use 'import BidCreateRequest from "../services/DeliveryService"' instead?

19   BidCreateRequest,
     ~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:20:3 - error TS2614: Module '"../services/DeliveryService"' has no exported member 'ExpressDeliveryRequest'. Did you mean to use 'import ExpressDeliveryRequest from "../services/DeliveryService"' instead?

20   ExpressDeliveryRequest,
     ~~~~~~~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:21:3 - error TS2614: Module '"../services/DeliveryService"' has no exported member 'CollaborativeDeliveryRequest'. Did you mean to use 'import CollaborativeDeliveryRequest from "../services/DeliveryService"' instead?

21   CollaborativeDeliveryRequest,
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:22:3 - error TS2614: Module '"../services/DeliveryService"' has no exported member 'TrackingPointRequest'. Did you mean to use 'import TrackingPointRequest from "../services/DeliveryService"' instead?

22   TrackingPointRequest
     ~~~~~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:124:48 - error TS2551: Property 'getDeliveries' does not exist on type 'typeof DeliveryService'. Did you mean 'getUserDeliveries'?

124       const deliveries = await DeliveryService.getDeliveries(filters);
                                                   ~~~~~~~~~~~~~

  services/DeliveryService.ts:39:16
    39   static async getUserDeliveries(
                      ~~~~~~~~~~~~~~~~~
    'getUserDeliveries' is declared here.

hooks/useDelivery.ts:141:46 - error TS2339: Property 'getDelivery' does not exist on type 'typeof DeliveryService'.

141       const delivery = await DeliveryService.getDelivery(id);
                                                 ~~~~~~~~~~~

hooks/useDelivery.ts:178:48 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'string'.
  Type 'undefined' is not assignable to type 'string'.

178       await DeliveryService.cancelDelivery(id, reason);
                                                   ~~~~~~

hooks/useDelivery.ts:216:41 - error TS2339: Property 'createBid' does not exist on type 'typeof DeliveryService'.

216       const bid = await DeliveryService.createBid(bidData);
                                            ~~~~~~~~~

hooks/useDelivery.ts:260:29 - error TS2339: Property 'rejectBid' does not exist on type 'typeof DeliveryService'.

260       await DeliveryService.rejectBid(deliveryId, bidId, reason);
                                ~~~~~~~~~

hooks/useDelivery.ts:280:46 - error TS2339: Property 'getTrackingPoints' does not exist on type 'typeof DeliveryService'.

280       const tracking = await DeliveryService.getTrackingPoints(id);
                                                 ~~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:294:46 - error TS2339: Property 'addTrackingPoint' does not exist on type 'typeof DeliveryService'.

294       const newPoint = await DeliveryService.addTrackingPoint(trackingData);
                                                 ~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:311:36 - error TS2551: Property 'getCourierLocation' does not exist on type 'typeof DeliveryService'. Did you mean 'updateCourierLocation'?

311       return await DeliveryService.getCourierLocation(deliveryId);
                                       ~~~~~~~~~~~~~~~~~~

  services/DeliveryService.ts:205:16
    205   static async updateCourierLocation(
                       ~~~~~~~~~~~~~~~~~~~~~
    'updateCourierLocation' is declared here.

hooks/useDelivery.ts:324:53 - error TS2551: Property 'updateDeliveryStatus' does not exist on type 'typeof DeliveryService'. Did you mean 'updateDelivery'?

324       const updatedDelivery = await DeliveryService.updateDeliveryStatus(id, status);
                                                        ~~~~~~~~~~~~~~~~~~~~

  services/DeliveryService.ts:86:16
    86   static async updateDelivery(
                      ~~~~~~~~~~~~~~
    'updateDelivery' is declared here.

hooks/useDelivery.ts:344:46 - error TS2551: Property 'createExpressDelivery' does not exist on type 'typeof DeliveryService'. Did you mean 'createDelivery'?

344       const delivery = await DeliveryService.createExpressDelivery(data);
                                                 ~~~~~~~~~~~~~~~~~~~~~

  services/DeliveryService.ts:75:16
    75   static async createDelivery(deliveryData: DeliveryCreateRequest): Promise<Delivery> {
                      ~~~~~~~~~~~~~~
    'createDelivery' is declared here.

hooks/useDelivery.ts:359:36 - error TS2551: Property 'getExpressDeliveries' does not exist on type 'typeof DeliveryService'. Did you mean 'getUserDeliveries'?

359       return await DeliveryService.getExpressDeliveries(filters);
                                       ~~~~~~~~~~~~~~~~~~~~

  services/DeliveryService.ts:39:16
    39   static async getUserDeliveries(
                      ~~~~~~~~~~~~~~~~~
    'getUserDeliveries' is declared here.

hooks/useDelivery.ts:371:29 - error TS2339: Property 'assignCourierToExpress' does not exist on type 'typeof DeliveryService'.

371       await DeliveryService.assignCourierToExpress(deliveryId, courierId);
                                ~~~~~~~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:383:29 - error TS2339: Property 'completeExpressDelivery' does not exist on type 'typeof DeliveryService'.

383       await DeliveryService.completeExpressDelivery(deliveryId);
                                ~~~~~~~~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:396:46 - error TS2339: Property 'createCollaborativeDelivery' does not exist on type 'typeof DeliveryService'.

396       const delivery = await DeliveryService.createCollaborativeDelivery(data);
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:411:36 - error TS2551: Property 'getCollaborativeDeliveries' does not exist on type 'typeof DeliveryService'. Did you mean 'getCourierActiveDeliveries'?

411       return await DeliveryService.getCollaborativeDeliveries(filters);
                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~

  services/DeliveryService.ts:516:16
    516   static async getCourierActiveDeliveries(): Promise<Delivery[]> {
                       ~~~~~~~~~~~~~~~~~~~~~~~~~~
    'getCourierActiveDeliveries' is declared here.

hooks/useDelivery.ts:422:29 - error TS2339: Property 'joinCollaborativeDelivery' does not exist on type 'typeof DeliveryService'.

422       await DeliveryService.joinCollaborativeDelivery(id, message);
                                ~~~~~~~~~~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:433:29 - error TS2339: Property 'leaveCollaborativeDelivery' does not exist on type 'typeof DeliveryService'.

433       await DeliveryService.leaveCollaborativeDelivery(id);
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:445:59 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'DeliverySearchParams | undefined'.
  Type 'string' has no properties in common with type 'DeliverySearchParams'.

445       return await DeliveryService.getAvailableDeliveries(commune);
                                                              ~~~~~~~

hooks/useDelivery.ts:456:36 - error TS2339: Property 'getClientDeliveryHistory' does not exist on type 'typeof DeliveryService'.

456       return await DeliveryService.getClientDeliveryHistory(filters);
                                       ~~~~~~~~~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:467:36 - error TS2339: Property 'getCourierDeliveryHistory' does not exist on type 'typeof DeliveryService'.

467       return await DeliveryService.getCourierDeliveryHistory(filters);
                                       ~~~~~~~~~~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:480:46 - error TS2339: Property 'getPriceEstimate' does not exist on type 'typeof DeliveryService'.

480       const estimate = await DeliveryService.getPriceEstimate(estimateData);
                                                 ~~~~~~~~~~~~~~~~

hooks/useDelivery.ts:567:29 - error TS2551: Property 'updateDeliveryStatus' does not exist on type 'typeof DeliveryService'. Did you mean 'updateDelivery'?

567       await DeliveryService.updateDeliveryStatus(deliveryId, 'accepted');
                                ~~~~~~~~~~~~~~~~~~~~

  services/DeliveryService.ts:86:16
    86   static async updateDelivery(
                      ~~~~~~~~~~~~~~
    'updateDelivery' is declared here.

hooks/useDelivery.ts:589:29 - error TS2551: Property 'updateDeliveryStatus' does not exist on type 'typeof DeliveryService'. Did you mean 'updateDelivery'?

589       await DeliveryService.updateDeliveryStatus(deliveryId, 'in_progress');
                                ~~~~~~~~~~~~~~~~~~~~

  services/DeliveryService.ts:86:16
    86   static async updateDelivery(
                      ~~~~~~~~~~~~~~
    'updateDelivery' is declared here.

hooks/useDelivery.ts:626:46 - error TS2339: Property 'getDelivery' does not exist on type 'typeof DeliveryService'.

626       const delivery = await DeliveryService.getDelivery(id);
                                                 ~~~~~~~~~~~

hooks/useDelivery.ts:681:5 - error TS2353: Object literal may only specify known properties, and 'getApplicablePromotions' does not exist in type 'UseDeliveryReturn'.

681     getApplicablePromotions,
        ~~~~~~~~~~~~~~~~~~~~~~~

hooks/useUser.ts:330:57 - error TS2339: Property 'getNotificationSettings' does not exist on type 'typeof NotificationService'.

330       const serviceSettings = await NotificationService.getNotificationSettings();
                                                            ~~~~~~~~~~~~~~~~~~~~~~~

hooks/useUser.ts:369:49 - error TS2339: Property 'updateNotificationSettings' does not exist on type 'typeof NotificationService'.

369       const success = await NotificationService.updateNotificationSettings(serviceSettings);
                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~

navigation/AppNavigator.tsx:38:8 - error TS2613: Module '"/home/runner/workspace/mobile/screens/courier/CommunityWalletScreen"' has no default export. Did you mean to use 'import { CommunityWalletScreen } from "/home/runner/workspace/mobile/screens/courier/CommunityWalletScreen"' instead?

38 import CommunityWalletScreen from "../screens/courier/CommunityWalletScreen"
          ~~~~~~~~~~~~~~~~~~~~~

navigation/AppNavigator.tsx:145:23 - error TS2322: Type '"ClientTabs"' is not assignable to type 'keyof RootStackParamList'.

145         <Stack.Screen name="ClientTabs" component={ClientTabNavigator} />
                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:146:23 - error TS2820: Type '"CourierTabs"' is not assignable to type 'keyof RootStackParamList'. Did you mean '"CourierStats"'?

146         <Stack.Screen name="CourierTabs" component={CourierTabNavigator} />
                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:149:23 - error TS2322: Type '"Home"' is not assignable to type 'keyof RootStackParamList'.

149         <Stack.Screen name="Home" component={ClientHomeScreen} />
                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:153:23 - error TS2322: Type '"Bids"' is not assignable to type 'keyof RootStackParamList'.

153         <Stack.Screen name="Bids" component={BidsScreen} />
                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:153:35 - error TS2322: Type '({ route, navigation }: BidsScreenProps) => React.JSX.Element' is not assignable to type 'ScreenComponentType<RootStackParamList, keyof RootStackParamList> | undefined'.
  Type '({ route, navigation }: BidsScreenProps) => React.JSX.Element' is not assignable to type 'FunctionComponent<{}>'.
    Types of parameters '__0' and 'props' are incompatible.
      Type '{}' is missing the following properties from type 'BidsScreenProps': route, navigation

153         <Stack.Screen name="Bids" component={BidsScreen} />
                                      ~~~~~~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:318:5
    318     component: ScreenComponentType<ParamList, RouteName>;
            ~~~~~~~~~
    The expected type comes from property 'component' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:155:23 - error TS2322: Type '"Payment"' is not assignable to type 'keyof RootStackParamList'.

155         <Stack.Screen name="Payment" component={PaymentScreen} />
                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:155:38 - error TS2322: Type '({ route, navigation }: PaymentScreenProps) => React.JSX.Element' is not assignable to type 'ScreenComponentType<RootStackParamList, keyof RootStackParamList> | undefined'.
  Type '({ route, navigation }: PaymentScreenProps) => React.JSX.Element' is not assignable to type 'FunctionComponent<{}>'.
    Types of parameters '__0' and 'props' are incompatible.
      Type '{}' is missing the following properties from type 'PaymentScreenProps': route, navigation

155         <Stack.Screen name="Payment" component={PaymentScreen} />
                                         ~~~~~~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:318:5
    318     component: ScreenComponentType<ParamList, RouteName>;
            ~~~~~~~~~
    The expected type comes from property 'component' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:157:23 - error TS2820: Type '"EnhancedRateDelivery"' is not assignable to type 'keyof RootStackParamList'. Did you mean '"CreateDelivery"'?

157         <Stack.Screen name="EnhancedRateDelivery" component={EnhancedRateDeliveryScreen} />
                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:157:51 - error TS2322: Type 'FC<EnhancedRateDeliveryScreenProps>' is not assignable to type 'ScreenComponentType<RootStackParamList, keyof RootStackParamList> | undefined'.
  Type 'FunctionComponent<EnhancedRateDeliveryScreenProps>' is not assignable to type 'FunctionComponent<{}>'.
    Types of parameters 'props' and 'props' are incompatible.
      Type '{}' is missing the following properties from type 'EnhancedRateDeliveryScreenProps': route, navigation

157         <Stack.Screen name="EnhancedRateDelivery" component={EnhancedRateDeliveryScreen} />
                                                      ~~~~~~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:318:5
    318     component: ScreenComponentType<ParamList, RouteName>;
            ~~~~~~~~~
    The expected type comes from property 'component' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:160:23 - error TS2322: Type '"Bid"' is not assignable to type 'keyof RootStackParamList'.

160         <Stack.Screen name="Bid" component={BidScreen} />
                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:160:34 - error TS2322: Type 'FC<BidScreenProps>' is not assignable to type 'ScreenComponentType<RootStackParamList, keyof RootStackParamList> | undefined'.
  Type 'FunctionComponent<BidScreenProps>' is not assignable to type 'FunctionComponent<{}>'.
    Types of parameters 'props' and 'props' are incompatible.
      Type '{}' is missing the following properties from type 'BidScreenProps': route, navigation

160         <Stack.Screen name="Bid" component={BidScreen} />
                                     ~~~~~~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:318:5
    318     component: ScreenComponentType<ParamList, RouteName>;
            ~~~~~~~~~
    The expected type comes from property 'component' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:164:23 - error TS2322: Type '"CollaborativeDeliveries"' is not assignable to type 'keyof RootStackParamList'.

164         <Stack.Screen name="CollaborativeDeliveries" component={CollaborativeDeliveriesScreen} />
                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:165:23 - error TS2322: Type '"CollaborativeChat"' is not assignable to type 'keyof RootStackParamList'.

165         <Stack.Screen name="CollaborativeChat" component={CollaborativeChatScreen} />
                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:166:23 - error TS2322: Type '"Gamification"' is not assignable to type 'keyof RootStackParamList'.

166         <Stack.Screen name="Gamification" component={GamificationScreen} />
                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:167:23 - error TS2322: Type '"CommunityWallet"' is not assignable to type 'keyof RootStackParamList'.

167         <Stack.Screen name="CommunityWallet" component={CommunityWalletScreen} />
                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:176:23 - error TS2322: Type '"LanguageSettings"' is not assignable to type 'keyof RootStackParamList'.

176         <Stack.Screen name="LanguageSettings" component={LanguageSettingsScreen} />
                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

navigation/AppNavigator.tsx:177:23 - error TS2322: Type '"Main"' is not assignable to type 'keyof RootStackParamList'.

177         <Stack.Screen name="Main" component={ClientTabNavigator} />
                          ~~~~

  node_modules/@react-navigation/core/lib/typescript/src/types.d.ts:349:5
    349     name: RouteName;
            ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & RouteConfig<RootStackParamList, keyof RootStackParamList, StackNavigationState<ParamListBase>, NativeStackNavigationOptions, NativeStackNavigationEventMap>'

screens/NotificationSettingsScreen.tsx:37:46 - error TS2339: Property 'getNotificationSettings' does not exist on type 'typeof NotificationService'.

37       const data = await NotificationService.getNotificationSettings()
                                                ~~~~~~~~~~~~~~~~~~~~~~~

screens/NotificationSettingsScreen.tsx:58:33 - error TS2339: Property 'updateNotificationSettings' does not exist on type 'typeof NotificationService'.

58       await NotificationService.updateNotificationSettings(settings)
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/NotificationsScreen.tsx:61:48 - error TS2322: Type 'string' is not assignable to type 'number'.

61       navigation.navigate("DeliveryDetails", { deliveryId })
                                                  ~~~~~~~~~~

  types/navigation.ts:16:22
    16   DeliveryDetails: { deliveryId: number }
                            ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/NotificationsScreen.tsx:63:48 - error TS2322: Type 'string' is not assignable to type 'number'.

63       navigation.navigate("DeliveryDetails", { deliveryId })
                                                  ~~~~~~~~~~

  types/navigation.ts:16:22
    16   DeliveryDetails: { deliveryId: number }
                            ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/NotificationsScreen.tsx:65:27 - error TS2345: Argument of type '["Payment", { deliveryId: string; amount: number; }]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
  Type '["Payment", { deliveryId: string; amount: number; }]' is not assignable to type '[screen: "Notifications", params: undefined] | [screen: "Support", params: undefined] | [screen: "ClientHome", params: undefined] | [screen: "Login", params: undefined] | [screen: "OTPLogin", params: undefined] | [screen: "ClassicLogin", params: undefined] | [screen: "Register", params: undefined] | ... 27 more ... ...'.
    Type '["Payment", { deliveryId: string; amount: number; }]' is not assignable to type '[screen: "CourierStatus", params: { initialStatus?: boolean | undefined; }]'.
      Type at position 0 in source is not compatible with type at position 0 in target.
        Type '"Payment"' is not assignable to type '"CourierStatus"'.

65       navigation.navigate("Payment", { deliveryId, amount: 0 })
                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/NotificationsScreen.tsx:68:9 - error TS2322: Type 'string' is not assignable to type 'number'.

68         deliveryId,
           ~~~~~~~~~~

  types/navigation.ts:18:19
    18   RateDelivery: { deliveryId: number }
                         ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/NotificationsScreen.tsx:136:74 - error TS2339: Property 'date' does not exist on type 'Notification'.

136           <Text style={styles.notificationTime}>{formatRelativeTime(item.date || new Date().toISOString())}</Text>
                                                                             ~~~~

screens/NotificationsScreen.tsx:179:53 - error TS2339: Property 'read' does not exist on type 'Notification'.

179               count: notifications.filter((n) => !n.read).length,
                                                        ~~~~

screens/OfflineManagerScreen.tsx:253:54 - error TS2769: No overload matches this call.
  Argument of type '["StorageManagementScreen"]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '["StorageManagementScreen"]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '["StorageManagementScreen"]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '"StorageManagementScreen"' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.

253                   onPress={() => navigation.navigate("StorageManagementScreen")}
                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~


screens/OfflineManagerScreen.tsx:272:37 - error TS2769: No overload matches this call.
  Argument of type '["AutoSyncSettingsScreen"]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '["AutoSyncSettingsScreen"]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '["AutoSyncSettingsScreen"]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '"AutoSyncSettingsScreen"' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.

272                 navigation.navigate("AutoSyncSettingsScreen")
                                        ~~~~~~~~~~~~~~~~~~~~~~~~


screens/OfflineManagerScreen.tsx:285:37 - error TS2769: No overload matches this call.
  Argument of type '["DataUsageSettingsScreen"]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '["DataUsageSettingsScreen"]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '["DataUsageSettingsScreen"]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '"DataUsageSettingsScreen"' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.

285                 navigation.navigate("DataUsageSettingsScreen")
                                        ~~~~~~~~~~~~~~~~~~~~~~~~~


screens/OnboardingScreen.tsx:25:3 - error TS2344: Type '"Onboarding"' does not satisfy the constraint 'keyof RootStackParamList'.

25   'Onboarding'
     ~~~~~~~~~~~~

screens/SettingsScreen.tsx:58:25 - error TS2769: No overload matches this call.
  Argument of type '[{ name: string; params: undefined; }]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '[{ name: string; params: undefined; }]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '[{ name: string; params: undefined; }]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '{ name: string; params: undefined; }' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type '{ name: "NotificationSettings"; params: undefined; }' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.
      Types of property 'name' are incompatible.
        Type '"NotificationSettings"' is not assignable to type '"Notifications" | "Support" | "ClientHome" | "Login" | "OTPLogin" | "ClassicLogin" | "Register" | "ForgotPassword" | "CreateDelivery" | "DeliveryHistory" | "Wallet" | "TransactionHistory" | ... 11 more ... | undefined'.

58     navigation.navigate({
                           ~
59       name: "NotificationSettings",
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
60       params: undefined,
   ~~~~~~~~~~~~~~~~~~~~~~~~
61     })
   ~~~~~


screens/SettingsScreen.tsx:65:25 - error TS2769: No overload matches this call.
  Argument of type '[{ name: string; params: undefined; }]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '[{ name: string; params: undefined; }]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '[{ name: string; params: undefined; }]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '{ name: string; params: undefined; }' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type '{ name: "SecuritySettings"; params: undefined; }' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.
      Types of property 'name' are incompatible.
        Type '"SecuritySettings"' is not assignable to type '"Notifications" | "Support" | "ClientHome" | "Login" | "OTPLogin" | "ClassicLogin" | "Register" | "ForgotPassword" | "CreateDelivery" | "DeliveryHistory" | "Wallet" | "TransactionHistory" | ... 11 more ... | undefined'.

65     navigation.navigate({
                           ~
66       name: "SecuritySettings",
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
67       params: undefined,
   ~~~~~~~~~~~~~~~~~~~~~~~~
68     })
   ~~~~~


screens/SettingsScreen.tsx:83:23 - error TS2339: Property 'profile_image' does not exist on type 'User'.

83                 user?.profile_image ? { uri: user.profile_image } : require("../assets/images/default-avatar.png")
                         ~~~~~~~~~~~~~

screens/SettingsScreen.tsx:83:51 - error TS2339: Property 'profile_image' does not exist on type 'User'.

83                 user?.profile_image ? { uri: user.profile_image } : require("../assets/images/default-avatar.png")
                                                     ~~~~~~~~~~~~~

screens/SettingsScreen.tsx:87:81 - error TS2339: Property 'name' does not exist on type 'User'.

87               <Text style={[styles.profileName, { color: colors.text }]}>{user?.name}</Text>
                                                                                   ~~~~

screens/SettingsScreen.tsx:110:72 - error TS2769: No overload matches this call.
  Argument of type '["LanguageSettings"]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '["LanguageSettings"]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '["LanguageSettings"]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '"LanguageSettings"' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.

110                 <Button mode="text" onPress={() => navigation.navigate("LanguageSettings")} style={styles.actionButton}>
                                                                           ~~~~~~~~~~~~~~~~~~


screens/SupportScreen.tsx:103:18 - error TS2345: Argument of type 'SupportTicket[]' is not assignable to parameter of type 'SetStateAction<SupportTicket[]>'.
  Type 'import("/home/runner/workspace/mobile/services/api").SupportTicket[]' is not assignable to type 'SupportTicket[]'.
    Type 'SupportTicket' is missing the following properties from type 'SupportTicket': updated_at, messages

103       setTickets(ticketsData)
                     ~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:178:59 - error TS2322: Type '"ClientTabs"' is not assignable to type 'keyof RootStackParamList'.

178       'Login', 'Register', 'VerifyOTP', 'ForgotPassword', 'ClientTabs', 'CourierTabs',
                                                              ~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:178:73 - error TS2820: Type '"CourierTabs"' is not assignable to type 'keyof RootStackParamList'. Did you mean '"CourierStats"'?

178       'Login', 'Register', 'VerifyOTP', 'ForgotPassword', 'ClientTabs', 'CourierTabs',
                                                                            ~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:179:7 - error TS2322: Type '"Home"' is not assignable to type 'keyof RootStackParamList'.

179       'Home', 'CreateDelivery', 'MerchantDetails', 'DeliveryDetails', 'Bids', 'TrackDelivery',
          ~~~~~~

screens/VoiceAssistantScreen.tsx:179:71 - error TS2322: Type '"Bids"' is not assignable to type 'keyof RootStackParamList'.

179       'Home', 'CreateDelivery', 'MerchantDetails', 'DeliveryDetails', 'Bids', 'TrackDelivery',
                                                                          ~~~~~~

screens/VoiceAssistantScreen.tsx:180:7 - error TS2322: Type '"Payment"' is not assignable to type 'keyof RootStackParamList'.

180       'Payment', 'RateDelivery', 'EnhancedRateDelivery', 'Bid', 'CourierTrackDelivery',
          ~~~~~~~~~

screens/VoiceAssistantScreen.tsx:180:34 - error TS2820: Type '"EnhancedRateDelivery"' is not assignable to type 'keyof RootStackParamList'. Did you mean '"CreateDelivery"'?

180       'Payment', 'RateDelivery', 'EnhancedRateDelivery', 'Bid', 'CourierTrackDelivery',
                                     ~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:180:58 - error TS2322: Type '"Bid"' is not assignable to type 'keyof RootStackParamList'.

180       'Payment', 'RateDelivery', 'EnhancedRateDelivery', 'Bid', 'CourierTrackDelivery',
                                                             ~~~~~

screens/VoiceAssistantScreen.tsx:181:40 - error TS2322: Type '"CollaborativeDeliveries"' is not assignable to type 'keyof RootStackParamList'.

181       'CourierStatus', 'CourierStats', 'CollaborativeDeliveries', 'CollaborativeDeliveryDetails',
                                           ~~~~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:181:67 - error TS2322: Type '"CollaborativeDeliveryDetails"' is not assignable to type 'keyof RootStackParamList'.

181       'CourierStatus', 'CourierStats', 'CollaborativeDeliveries', 'CollaborativeDeliveryDetails',
                                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:182:7 - error TS2322: Type '"JoinCollaborativeDelivery"' is not assignable to type 'keyof RootStackParamList'.

182       'JoinCollaborativeDelivery', 'CollaborativeChat', 'Gamification', 'CommunityWallet',
          ~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:182:36 - error TS2322: Type '"CollaborativeChat"' is not assignable to type 'keyof RootStackParamList'.

182       'JoinCollaborativeDelivery', 'CollaborativeChat', 'Gamification', 'CommunityWallet',
                                       ~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:182:57 - error TS2322: Type '"Gamification"' is not assignable to type 'keyof RootStackParamList'.

182       'JoinCollaborativeDelivery', 'CollaborativeChat', 'Gamification', 'CommunityWallet',
                                                            ~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:182:73 - error TS2322: Type '"CommunityWallet"' is not assignable to type 'keyof RootStackParamList'.

182       'JoinCollaborativeDelivery', 'CollaborativeChat', 'Gamification', 'CommunityWallet',
                                                                            ~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:183:74 - error TS2322: Type '"LanguageSettings"' is not assignable to type 'keyof RootStackParamList'.

183       'VehicleManagement', 'CourierProfile', 'Notifications', 'Support', 'LanguageSettings',
                                                                             ~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:184:7 - error TS2322: Type '"Main"' is not assignable to type 'keyof RootStackParamList'.

184       'Main', 'ClientHome', 'Marketplace', 'DeliveryHistory', 'Settings', 'CourierHome',
          ~~~~~~

screens/VoiceAssistantScreen.tsx:185:52 - error TS2322: Type '"WebPayment"' is not assignable to type 'keyof RootStackParamList'.

185       'CourierEarnings', 'CourierDeliveryHistory', 'WebPayment', 'Cart', 'Profile',
                                                       ~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:185:66 - error TS2322: Type '"Cart"' is not assignable to type 'keyof RootStackParamList'.

185       'CourierEarnings', 'CourierDeliveryHistory', 'WebPayment', 'Cart', 'Profile',
                                                                     ~~~~~~

screens/VoiceAssistantScreen.tsx:186:7 - error TS2322: Type '"NotificationSettings"' is not assignable to type 'keyof RootStackParamList'.

186       'NotificationSettings', 'SecuritySettings', 'ChangePassword', 'SecurityQuestions',
          ~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:186:31 - error TS2322: Type '"SecuritySettings"' is not assignable to type 'keyof RootStackParamList'.

186       'NotificationSettings', 'SecuritySettings', 'ChangePassword', 'SecurityQuestions',
                                  ~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:186:51 - error TS2322: Type '"ChangePassword"' is not assignable to type 'keyof RootStackParamList'.

186       'NotificationSettings', 'SecuritySettings', 'ChangePassword', 'SecurityQuestions',
                                                      ~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:186:69 - error TS2322: Type '"SecurityQuestions"' is not assignable to type 'keyof RootStackParamList'.

186       'NotificationSettings', 'SecuritySettings', 'ChangePassword', 'SecurityQuestions',
                                                                        ~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:187:7 - error TS2322: Type '"StorageManagementScreen"' is not assignable to type 'keyof RootStackParamList'.

187       'StorageManagementScreen', 'AutoSyncSettingsScreen', 'DataUsageSettingsScreen',
          ~~~~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:187:34 - error TS2322: Type '"AutoSyncSettingsScreen"' is not assignable to type 'keyof RootStackParamList'.

187       'StorageManagementScreen', 'AutoSyncSettingsScreen', 'DataUsageSettingsScreen',
                                     ~~~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:187:60 - error TS2322: Type '"DataUsageSettingsScreen"' is not assignable to type 'keyof RootStackParamList'.

187       'StorageManagementScreen', 'AutoSyncSettingsScreen', 'DataUsageSettingsScreen',
                                                               ~~~~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:188:7 - error TS2322: Type '"WeatherScreen"' is not assignable to type 'keyof RootStackParamList'.

188       'WeatherScreen', 'GamificationScreen', 'AvailableDeliveries'
          ~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:188:24 - error TS2322: Type '"GamificationScreen"' is not assignable to type 'keyof RootStackParamList'.

188       'WeatherScreen', 'GamificationScreen', 'AvailableDeliveries'
                           ~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:203:14 - error TS2678: Type '"ClientTabs"' is not comparable to type 'keyof RootStackParamList'.

203         case 'ClientTabs':
                 ~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:204:14 - error TS2678: Type '"CourierTabs"' is not comparable to type 'keyof RootStackParamList'.

204         case 'CourierTabs':
                 ~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:205:14 - error TS2678: Type '"Home"' is not comparable to type 'keyof RootStackParamList'.

205         case 'Home':
                 ~~~~~~

screens/VoiceAssistantScreen.tsx:208:14 - error TS2678: Type '"CollaborativeDeliveries"' is not comparable to type 'keyof RootStackParamList'.

208         case 'CollaborativeDeliveries':
                 ~~~~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:209:14 - error TS2678: Type '"Gamification"' is not comparable to type 'keyof RootStackParamList'.

209         case 'Gamification':
                 ~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:210:14 - error TS2678: Type '"CommunityWallet"' is not comparable to type 'keyof RootStackParamList'.

210         case 'CommunityWallet':
                 ~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:214:14 - error TS2678: Type '"LanguageSettings"' is not comparable to type 'keyof RootStackParamList'.

214         case 'LanguageSettings':
                 ~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:215:14 - error TS2678: Type '"Main"' is not comparable to type 'keyof RootStackParamList'.

215         case 'Main':
                 ~~~~~~

screens/VoiceAssistantScreen.tsx:223:14 - error TS2678: Type '"NotificationSettings"' is not comparable to type 'keyof RootStackParamList'.

223         case 'NotificationSettings':
                 ~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:224:14 - error TS2678: Type '"SecuritySettings"' is not comparable to type 'keyof RootStackParamList'.

224         case 'SecuritySettings':
                 ~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:225:14 - error TS2678: Type '"ChangePassword"' is not comparable to type 'keyof RootStackParamList'.

225         case 'ChangePassword':
                 ~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:226:14 - error TS2678: Type '"SecurityQuestions"' is not comparable to type 'keyof RootStackParamList'.

226         case 'SecurityQuestions':
                 ~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:227:14 - error TS2678: Type '"StorageManagementScreen"' is not comparable to type 'keyof RootStackParamList'.

227         case 'StorageManagementScreen':
                 ~~~~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:228:14 - error TS2678: Type '"AutoSyncSettingsScreen"' is not comparable to type 'keyof RootStackParamList'.

228         case 'AutoSyncSettingsScreen':
                 ~~~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:229:14 - error TS2678: Type '"DataUsageSettingsScreen"' is not comparable to type 'keyof RootStackParamList'.

229         case 'DataUsageSettingsScreen':
                 ~~~~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:230:14 - error TS2678: Type '"GamificationScreen"' is not comparable to type 'keyof RootStackParamList'.

230         case 'GamificationScreen':
                 ~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:259:14 - error TS2678: Type '"Bids"' is not comparable to type 'keyof RootStackParamList'.

259         case 'Bids':
                 ~~~~~~

screens/VoiceAssistantScreen.tsx:261:14 - error TS2678: Type '"Bid"' is not comparable to type 'keyof RootStackParamList'.

261         case 'Bid':
                 ~~~~~

screens/VoiceAssistantScreen.tsx:263:14 - error TS2678: Type '"JoinCollaborativeDelivery"' is not comparable to type 'keyof RootStackParamList'.

263         case 'JoinCollaborativeDelivery':
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:264:14 - error TS2678: Type '"CollaborativeChat"' is not comparable to type 'keyof RootStackParamList'.

264         case 'CollaborativeChat':
                 ~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:266:14 - error TS2678: Type '"EnhancedRateDelivery"' is not comparable to type 'keyof RootStackParamList'.

266         case 'EnhancedRateDelivery':
                 ~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:271:14 - error TS2678: Type '"CollaborativeDeliveryDetails"' is not comparable to type 'keyof RootStackParamList'.

271         case 'CollaborativeDeliveryDetails':
                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:276:14 - error TS2678: Type '"Payment"' is not comparable to type 'keyof RootStackParamList'.

276         case 'Payment':
                 ~~~~~~~~~

screens/VoiceAssistantScreen.tsx:286:14 - error TS2678: Type '"WebPayment"' is not comparable to type 'keyof RootStackParamList'.

286         case 'WebPayment':
                 ~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:291:14 - error TS2678: Type '"Cart"' is not comparable to type 'keyof RootStackParamList'.

291         case 'Cart':
                 ~~~~~~

screens/VoiceAssistantScreen.tsx:296:14 - error TS2678: Type '"WeatherScreen"' is not comparable to type 'keyof RootStackParamList'.

296         case 'WeatherScreen':
                 ~~~~~~~~~~~~~~~

screens/VoiceAssistantScreen.tsx:329:28 - error TS2345: Argument of type '"WeatherScreen"' is not assignable to parameter of type 'keyof RootStackParamList'.

329           navigateToScreen("WeatherScreen", { location: data?.location || "Abidjan" })
                               ~~~~~~~~~~~~~~~

screens/auth/OTPLoginScreen.tsx:145:11 - error TS2367: This comparison appears to be unintentional because the types 'UserRole' and '"courier"' have no overlap.

145       if (result.user.role === 'courier') {
              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/auth/OTPLoginScreen.tsx:148:22 - error TS2820: Type '"CourierTabs"' is not assignable to type 'keyof RootStackParamList'. Did you mean '"CourierStats"'?

148           routes: [{ name: 'CourierTabs' }],
                         ~~~~

  node_modules/@react-navigation/routers/lib/typescript/src/types.d.ts:59:5
    59     name: RouteName;
           ~~~~
    The expected type comes from property 'name' which is declared here on type 'NavigationRoute<RootStackParamList, keyof RootStackParamList> | PartialRoute<Route<keyof RootStackParamList, object | undefined>>'

screens/auth/OTPLoginScreen.tsx:153:22 - error TS2322: Type '"ClientTabs"' is not assignable to type 'keyof RootStackParamList'.

153           routes: [{ name: 'ClientTabs' }],
                         ~~~~

  node_modules/@react-navigation/routers/lib/typescript/src/types.d.ts:59:5
    59     name: RouteName;
           ~~~~
    The expected type comes from property 'name' which is declared here on type 'NavigationRoute<RootStackParamList, keyof RootStackParamList> | PartialRoute<Route<keyof RootStackParamList, object | undefined>>'

screens/auth/VerifyOTPScreen.tsx:108:22 - error TS2322: Type '"ClientTabs"' is not assignable to type 'keyof RootStackParamList'.

108           routes: [{ name: "ClientTabs" }],
                         ~~~~

  node_modules/@react-navigation/routers/lib/typescript/src/types.d.ts:59:5
    59     name: RouteName;
           ~~~~
    The expected type comes from property 'name' which is declared here on type 'NavigationRoute<RootStackParamList, keyof RootStackParamList> | PartialRoute<Route<keyof RootStackParamList, object | undefined>>'

screens/client/ActiveOrderTrackingScreen.tsx:20:26 - error TS2307: Cannot find module 'expo-haptics' or its corresponding type declarations.

20 import * as Haptics from 'expo-haptics'
                            ~~~~~~~~~~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:165:29 - error TS2339: Property 'phone' does not exist on type 'Courier'.

165     if (!delivery?.courier?.phone) {
                                ~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:170:42 - error TS2339: Property 'phone' does not exist on type 'Courier'.

170     const phoneNumber = delivery.courier.phone.startsWith('+')
                                             ~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:171:26 - error TS2339: Property 'phone' does not exist on type 'Courier'.

171       ? delivery.courier.phone
                             ~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:172:33 - error TS2339: Property 'phone' does not exist on type 'Courier'.

172       : `+225${delivery.courier.phone}`
                                    ~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:175:26 - error TS2339: Property 'phone' does not exist on type 'Courier'.

175   }, [delivery?.courier?.phone])
                             ~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:178:29 - error TS2339: Property 'phone' does not exist on type 'Courier'.

178     if (!delivery?.courier?.phone) {
                                ~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:183:42 - error TS2339: Property 'phone' does not exist on type 'Courier'.

183     const phoneNumber = delivery.courier.phone.startsWith('+')
                                             ~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:184:26 - error TS2339: Property 'phone' does not exist on type 'Courier'.

184       ? delivery.courier.phone
                             ~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:185:33 - error TS2339: Property 'phone' does not exist on type 'Courier'.

185       : `+225${delivery.courier.phone}`
                                    ~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:193:26 - error TS2339: Property 'phone' does not exist on type 'Courier'.

193   }, [delivery?.courier?.phone, deliveryId])
                             ~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:205:46 - error TS2345: Argument of type '[string, { deliveryId: string; }]' is not assignable to parameter of type 'never'.

205           onPress: () => navigation.navigate('RateDelivery', { deliveryId })
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:296:70 - error TS2339: Property 'full_name' does not exist on type 'Courier'.

296                   <Text style={styles.courierName}>{delivery.courier.full_name}</Text>
                                                                         ~~~~~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:333:15 - error TS2322: Type '{ style: { position: "absolute"; left: 0; right: 0; top: 0; bottom: 0; }; pickupPoint: { latitude: number; longitude: number; title: string; description: string; }; deliveryPoint: { latitude: number; longitude: number; title: string; description: string; }; courierLocation: { ...; } | null; showRoute: boolean; showT...' is not assignable to type 'IntrinsicAttributes & VTCStyleMapProps'.
  Property 'pickupPoint' does not exist on type 'IntrinsicAttributes & VTCStyleMapProps'.

333               pickupPoint={{
                  ~~~~~~~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:377:49 - error TS2554: Expected 1 arguments, but got 2.

377                     {formatDate(item.timestamp, 'short')}
                                                    ~~~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:410:25 - error TS2339: Property 'package_description' does not exist on type 'Delivery'.

410               {delivery.package_description && (
                            ~~~~~~~~~~~~~~~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:411:67 - error TS2339: Property 'package_description' does not exist on type 'Delivery'.

411                 <Text style={styles.packageDescription}>{delivery.package_description}</Text>
                                                                      ~~~~~~~~~~~~~~~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:415:29 - error TS2339: Property 'package_weight' does not exist on type 'Delivery'.

415                   {delivery.package_weight ? `${delivery.package_weight}kg` : 'Poids non spécifié'}
                                ~~~~~~~~~~~~~~

screens/client/ActiveOrderTrackingScreen.tsx:415:58 - error TS2339: Property 'package_weight' does not exist on type 'Delivery'.

415                   {delivery.package_weight ? `${delivery.package_weight}kg` : 'Poids non spécifié'}
                                                             ~~~~~~~~~~~~~~

screens/client/AddFundsScreen.tsx:100:31 - error TS2345: Argument of type '["WebPayment", { paymentUrl: any; transactionId: any; onComplete: (success: boolean) => void; }]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
  Type '["WebPayment", { paymentUrl: any; transactionId: any; onComplete: (success: boolean) => void; }]' is not assignable to type '[screen: "Notifications", params: undefined] | [screen: "Support", params: undefined] | [screen: "ClientHome", params: undefined] | [screen: "Login", params: undefined] | [screen: "OTPLogin", params: undefined] | [screen: "ClassicLogin", params: undefined] | [screen: "Register", params: undefined] | ... 27 more ... ...'.
    Type '["WebPayment", { paymentUrl: any; transactionId: any; onComplete: (success: boolean) => void; }]' is not assignable to type '[screen: "CourierStatus", params: { initialStatus?: boolean | undefined; }]'.
      Type at position 0 in source is not compatible with type at position 0 in target.
        Type '"WebPayment"' is not assignable to type '"CourierStatus"'.

100           navigation.navigate('WebPayment', {
                                  ~~~~~~~~~~~~~~~
101             paymentUrl: data.payment_url,
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
... 
111             }
    ~~~~~~~~~~~~~
112           })
    ~~~~~~~~~~~

screens/client/AddFundsScreen.tsx:199:30 - error TS2322: Type 'string' is not assignable to type '"package" | "tag" | "credit-card" | "star" | "gift" | "bell" | "delete" | "link" | "user" | "phone" | "code" | "image" | "map" | "filter" | "bold" | "type" | "key" | "camera" | "anchor" | ... 267 more ... | undefined'.

199                     <Feather name={method.icon} size={24} color="#FF6B00" />
                                 ~~~~

  node_modules/@expo/vector-icons/build/createIconSet.d.ts:17:5
    17     name: GLYPHS;
           ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & IntrinsicClassAttributes<Component<IconProps<"package" | "tag" | "credit-card" | "star" | "gift" | "bell" | "delete" | "link" | "user" | "phone" | "code" | "image" | "map" | ... 272 more ... | "divide-square">, {}, any>> & Pick<...> & InexactPartial<...> & InexactPartial<...>'

screens/client/ComplaintsScreen.tsx:12:61 - error TS2344: Type '"ComplaintsScreen"' does not satisfy the constraint 'keyof RootStackParamList'.

12   navigation: NativeStackNavigationProp<RootStackParamList, 'ComplaintsScreen'>
                                                               ~~~~~~~~~~~~~~~~~~

screens/client/ComplaintsScreen.tsx:166:21 - error TS2322: Type 'string' is not assignable to type '"package" | "tag" | "credit-card" | "star" | "gift" | "bell" | "delete" | "link" | "user" | "phone" | "code" | "image" | "map" | "filter" | "bold" | "type" | "key" | "camera" | "anchor" | ... 267 more ... | undefined'.

166                     name={complaintType.icon}
                        ~~~~

  node_modules/@expo/vector-icons/build/createIconSet.d.ts:17:5
    17     name: GLYPHS;
           ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & IntrinsicClassAttributes<Component<IconProps<"package" | "tag" | "credit-card" | "star" | "gift" | "bell" | "delete" | "link" | "user" | "phone" | "code" | "image" | "map" | ... 272 more ... | "divide-square">, {}, any>> & Pick<...> & InexactPartial<...> & InexactPartial<...>'

screens/client/ComplaintsScreen.tsx:277:21 - error TS2322: Type 'string' is not assignable to type '"package" | "tag" | "credit-card" | "star" | "gift" | "bell" | "delete" | "link" | "user" | "phone" | "code" | "image" | "map" | "filter" | "bold" | "type" | "key" | "camera" | "anchor" | ... 267 more ... | undefined'.

277                     name={complaintTypes.find(t => t.key === complaint.type)?.icon || 'help-circle'}
                        ~~~~

  node_modules/@expo/vector-icons/build/createIconSet.d.ts:17:5
    17     name: GLYPHS;
           ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & IntrinsicClassAttributes<Component<IconProps<"package" | "tag" | "credit-card" | "star" | "gift" | "bell" | "delete" | "link" | "user" | "phone" | "code" | "image" | "map" | ... 272 more ... | "divide-square">, {}, any>> & Pick<...> & InexactPartial<...> & InexactPartial<...>'

screens/client/ComplaintsScreen.tsx:289:23 - error TS2322: Type 'string' is not assignable to type 'number'.

289                       deliveryId: complaint.delivery_id!.toString()
                          ~~~~~~~~~~

  types/navigation.ts:16:22
    16   DeliveryDetails: { deliveryId: number }
                            ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/client/CreateDeliveryScreen.tsx:183:11 - error TS2353: Object literal may only specify known properties, and 'duration' does not exist in type 'PriceEstimateData'.

183           duration: route.duration,
              ~~~~~~~~

screens/client/CreateDeliveryScreen.tsx:189:39 - error TS2339: Property 'recommended_price' does not exist on type 'number'.

189         setRecommendedPrice(priceData.recommended_price)
                                          ~~~~~~~~~~~~~~~~~

screens/client/CreateDeliveryScreen.tsx:195:11 - error TS2353: Object literal may only specify known properties, and 'packageSize' does not exist in type 'VehicleRecommendationData'.

195           packageSize,
              ~~~~~~~~~~~

screens/client/CreateDeliveryScreen.tsx:198:43 - error TS2339: Property 'condition' does not exist on type 'Weather'.

198           weatherConditions: weatherData?.condition
                                              ~~~~~~~~~

screens/client/CreateDeliveryScreen.tsx:201:31 - error TS2345: Argument of type 'VehicleRecommendation' is not assignable to parameter of type 'SetStateAction<{ type: VehicleType; name: string; reason: string; priceMultiplier: number; } | null>'.
  Type 'VehicleRecommendation' is missing the following properties from type '{ type: VehicleType; name: string; reason: string; priceMultiplier: number; }': type, name, priceMultiplier

201         setRecommendedVehicle(vehicleRec)
                                  ~~~~~~~~~~

screens/client/CreateDeliveryScreen.tsx:311:42 - error TS2339: Property 'condition' does not exist on type 'Weather'.

311         weather_conditions: weatherData?.condition || 'unknown'
                                             ~~~~~~~~~

screens/client/CreateDeliveryScreen.tsx:315:38 - error TS2554: Expected 1 arguments, but got 2.

315         addPendingUpload('delivery', deliveryData)
                                         ~~~~~~~~~~~~

screens/client/CreateDeliveryScreen.tsx:329:46 - error TS2345: Argument of type '["Bids", { deliveryId: number; }]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
  Type '["Bids", { deliveryId: number; }]' is not assignable to type '[screen: "DeliveryDetails", params: { deliveryId: number; }] | [screen: "TrackDelivery", params: { deliveryId: number; }] | [screen: "RateDelivery", params: { deliveryId: number; }] | [screen: "BidsScreen", params: { deliveryId: number; }] | [screen: "PaymentScreen", params: { ...; }] | [screen: ...]'.
    Type '["Bids", { deliveryId: number; }]' is not assignable to type '[screen: "CourierTrackDelivery", params: { deliveryId: number; }]'.
      Type at position 0 in source is not compatible with type at position 0 in target.
        Type '"Bids"' is not assignable to type '"CourierTrackDelivery"'.

329           onPress: () => navigation.navigate('Bids', { deliveryId: result.id })
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/client/CreateDeliveryScreen.tsx:435:11 - error TS2322: Type '{ ref: MutableRefObject<MapView | null>; style: { flex: number; }; pickupPoint: { latitude: number; longitude: number; title: string; description: string; } | undefined; ... 4 more ...; isInteractive: true; }' is not assignable to type 'IntrinsicAttributes & MapViewProps'.
  Property 'ref' does not exist on type 'IntrinsicAttributes & MapViewProps'.

435           ref={mapRef}
              ~~~

screens/client/CreateDeliveryScreen.tsx:519:9 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(props: TextInputProps): TextInput', gave the following error.
    Type '{ label: string; value: string; onChangeText: Dispatch<SetStateAction<string>>; mode: string; style: { backgroundColor: string; marginBottom: number; }; placeholder: string; multiline: true; numberOfLines: number; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
      Property 'label' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
  Overload 2 of 2, '(props: TextInputProps, context: any): TextInput', gave the following error.
    Type '{ label: string; value: string; onChangeText: Dispatch<SetStateAction<string>>; mode: string; style: { backgroundColor: string; marginBottom: number; }; placeholder: string; multiline: true; numberOfLines: number; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
      Property 'label' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.

519         label="Description du colis"
            ~~~~~


screens/client/CreateDeliveryScreen.tsx:566:9 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(props: TextInputProps): TextInput', gave the following error.
    Type '{ label: string; value: string; onChangeText: Dispatch<SetStateAction<string>>; mode: string; style: { backgroundColor: string; marginBottom: number; }; placeholder: string; left: Element; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
      Property 'label' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
  Overload 2 of 2, '(props: TextInputProps, context: any): TextInput', gave the following error.
    Type '{ label: string; value: string; onChangeText: Dispatch<SetStateAction<string>>; mode: string; style: { backgroundColor: string; marginBottom: number; }; placeholder: string; left: Element; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
      Property 'label' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.

566         label="Nom du destinataire"
            ~~~~~


screens/client/CreateDeliveryScreen.tsx:572:26 - error TS2339: Property 'Icon' does not exist on type 'typeof TextInput'.

572         left={<TextInput.Icon icon="account" />}
                             ~~~~

screens/client/CreateDeliveryScreen.tsx:576:9 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(props: TextInputProps): TextInput', gave the following error.
    Type '{ label: string; value: string; onChangeText: Dispatch<SetStateAction<string>>; mode: string; style: { backgroundColor: string; marginBottom: number; }; placeholder: string; keyboardType: "phone-pad"; left: Element; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
      Property 'label' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
  Overload 2 of 2, '(props: TextInputProps, context: any): TextInput', gave the following error.
    Type '{ label: string; value: string; onChangeText: Dispatch<SetStateAction<string>>; mode: string; style: { backgroundColor: string; marginBottom: number; }; placeholder: string; keyboardType: "phone-pad"; left: Element; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
      Property 'label' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.

576         label="Numéro de téléphone"
            ~~~~~


screens/client/CreateDeliveryScreen.tsx:583:26 - error TS2339: Property 'Icon' does not exist on type 'typeof TextInput'.

583         left={<TextInput.Icon icon="phone" />}
                             ~~~~

screens/client/CreateDeliveryScreen.tsx:587:9 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(props: TextInputProps): TextInput', gave the following error.
    Type '{ label: string; value: string; onChangeText: Dispatch<SetStateAction<string>>; mode: string; style: { backgroundColor: string; marginBottom: number; }; placeholder: string; multiline: true; numberOfLines: number; left: Element; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
      Property 'label' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
  Overload 2 of 2, '(props: TextInputProps, context: any): TextInput', gave the following error.
    Type '{ label: string; value: string; onChangeText: Dispatch<SetStateAction<string>>; mode: string; style: { backgroundColor: string; marginBottom: number; }; placeholder: string; multiline: true; numberOfLines: number; left: Element; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
      Property 'label' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.

587         label="Instructions spéciales (optionnel)"
            ~~~~~


screens/client/CreateDeliveryScreen.tsx:595:26 - error TS2339: Property 'Icon' does not exist on type 'typeof TextInput'.

595         left={<TextInput.Icon icon="note-text" />}
                             ~~~~

screens/client/CreateDeliveryScreen.tsx:618:9 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(props: TextInputProps): TextInput', gave the following error.
    Type '{ label: string; value: string; onChangeText: Dispatch<SetStateAction<string>>; mode: string; style: { backgroundColor: string; marginBottom: number; }; keyboardType: "numeric"; placeholder: string; left: Element; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
      Property 'label' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
  Overload 2 of 2, '(props: TextInputProps, context: any): TextInput', gave the following error.
    Type '{ label: string; value: string; onChangeText: Dispatch<SetStateAction<string>>; mode: string; style: { backgroundColor: string; marginBottom: number; }; keyboardType: "numeric"; placeholder: string; left: Element; }' is not assignable to type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.
      Property 'label' does not exist on type 'IntrinsicAttributes & IntrinsicClassAttributes<TextInput> & Readonly<TextInputProps>'.

618         label="Votre prix proposé (FCFA)"
            ~~~~~


screens/client/CreateDeliveryScreen.tsx:625:26 - error TS2339: Property 'Icon' does not exist on type 'typeof TextInput'.

625         left={<TextInput.Icon icon="currency-usd" />}
                             ~~~~

screens/client/CreateDeliveryScreen.tsx:672:62 - error TS2322: Type '{ weather: Weather; style: { marginHorizontal: number; marginBottom: number; }; }' is not assignable to type 'IntrinsicAttributes & WeatherInfoProps'.
  Property 'style' does not exist on type 'IntrinsicAttributes & WeatherInfoProps'.

672           {weatherData && <WeatherInfo weather={weatherData} style={styles.weatherInfo} />}
                                                                 ~~~~~

screens/client/DeliveryDetailsScreen.tsx:1:1 - error TS2349: This expression is not callable.
  Type 'String' has no call signatures.

1 ` tags. I will pay close attention to indentation, structure, and completeness, and I will avoid all forbidden words.
  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2 
  
3 ```
  ~

screens/client/DeliveryDetailsScreen.tsx:4:2 - error TS2304: Cannot find name 'replit_final_file'.

4 <replit_final_file>
   ~~~~~~~~~~~~~~~~~

screens/client/DeliveryDetailsScreen.tsx:38:25 - error TS2339: Property 'getDelivery' does not exist on type 'typeof DeliveryService'.

38         DeliveryService.getDelivery(parseInt(deliveryId)),
                           ~~~~~~~~~~~

screens/client/DeliveryDetailsScreen.tsx:38:46 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

38         DeliveryService.getDelivery(parseInt(deliveryId)),
                                                ~~~~~~~~~~

screens/client/DeliveryDetailsScreen.tsx:39:50 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

39         DeliveryService.getDeliveryBids(parseInt(deliveryId))
                                                    ~~~~~~~~~~

screens/client/DeliveryDetailsScreen.tsx:65:53 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

65       await DeliveryService.cancelDelivery(parseInt(deliveryId), "Annulée par le client")
                                                       ~~~~~~~~~~

screens/client/DeliveryDetailsScreen.tsx:80:48 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

80       await DeliveryService.acceptBid(parseInt(deliveryId), bidId)
                                                  ~~~~~~~~~~

screens/client/DeliveryDetailsScreen.tsx:280:68 - error TS2339: Property 'proposed_price' does not exist on type 'Bid'.

280                     <Text style={styles.bidPrice}>{formatPrice(bid.proposed_price)} FCFA</Text>
                                                                       ~~~~~~~~~~~~~~

screens/client/DeliveryDetailsScreen.tsx:282:24 - error TS2339: Property 'message' does not exist on type 'Bid'.

282                   {bid.message && (
                           ~~~~~~~

screens/client/DeliveryDetailsScreen.tsx:283:58 - error TS2339: Property 'message' does not exist on type 'Bid'.

283                     <Text style={styles.bidMessage}>{bid.message}</Text>
                                                             ~~~~~~~

screens/client/DeliveryDetailsScreen.tsx:290:25 - error TS2322: Type '{ children: string; mode: "contained"; size: string; onPress: () => Promise<void>; loading: boolean; style: { backgroundColor: string; }; }' is not assignable to type 'IntrinsicAttributes & Omit<Props, "ref"> & RefAttributes<View>'.
  Property 'size' does not exist on type 'IntrinsicAttributes & Omit<Props, "ref"> & RefAttributes<View>'.

290                         size="small"
                            ~~~~

screens/client/DeliveryDetailsScreen.tsx:324:54 - error TS2345: Argument of type '[string, { deliveryId: number; }]' is not assignable to parameter of type 'never'.

324                   onPress={() => navigation.navigate("TrackDelivery", { deliveryId: deliveryId })}
                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/client/DeliveryDetailsScreen.tsx:334:54 - error TS2345: Argument of type '[string, { deliveryId: number; }]' is not assignable to parameter of type 'never'.

334                   onPress={() => navigation.navigate("RateDelivery", { deliveryId: deliveryId })}
                                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/client/DeliveryHistoryScreen.tsx:19:10 - error TS2614: Module '"../../components/DeliveryStatusBadge"' has no exported member 'DeliveryStatusBadge'. Did you mean to use 'import DeliveryStatusBadge from "../../components/DeliveryStatusBadge"' instead?

19 import { DeliveryStatusBadge } from '../../components/DeliveryStatusBadge'
            ~~~~~~~~~~~~~~~~~~~

screens/client/DeliveryHistoryScreen.tsx:240:50 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'SetStateAction<"month" | "today" | "all" | "week">'.

240                     onPress={() => setDateFilter(option.value)}
                                                     ~~~~~~~~~~~~

screens/client/EnhancedRateDeliveryScreen.tsx:24:40 - error TS2344: Type '"EnhancedRateDelivery"' does not satisfy the constraint 'keyof RootStackParamList'.

24   route: RouteProp<RootStackParamList, "EnhancedRateDelivery">
                                          ~~~~~~~~~~~~~~~~~~~~~~

screens/client/EnhancedRateDeliveryScreen.tsx:25:61 - error TS2344: Type '"EnhancedRateDelivery"' does not satisfy the constraint 'keyof RootStackParamList'.

25   navigation: NativeStackNavigationProp<RootStackParamList, "EnhancedRateDelivery">
                                                               ~~~~~~~~~~~~~~~~~~~~~~

screens/client/EnhancedRateDeliveryScreen.tsx:29:11 - error TS2339: Property 'deliveryId' does not exist on type 'Readonly<unknown> | undefined'.

29   const { deliveryId } = route.params
             ~~~~~~~~~~

screens/client/EnhancedRateDeliveryScreen.tsx:336:68 - error TS2339: Property 'name' does not exist on type 'Courier'.

336                 <Text style={styles.courierName}>{delivery.courier.name}</Text>
                                                                       ~~~~

screens/client/EnhancedTrackDeliveryScreen.tsx:77:25 - error TS2339: Property 'name' does not exist on type 'Courier'.

77           name: courier.name || courier?.full_name || "Coursier",
                           ~~~~

screens/client/EnhancedTrackDeliveryScreen.tsx:77:42 - error TS2339: Property 'full_name' does not exist on type 'Courier'.

77           name: courier.name || courier?.full_name || "Coursier",
                                            ~~~~~~~~~

screens/client/EnhancedTrackDeliveryScreen.tsx:79:27 - error TS2339: Property 'profile_picture' does not exist on type 'Courier'.

79           photo: courier?.profile_picture,
                             ~~~~~~~~~~~~~~~

screens/client/EnhancedTrackDeliveryScreen.tsx:83:28 - error TS2339: Property 'license_plate' does not exist on type 'Courier'.

83             plate: courier.license_plate || "N/A"
                              ~~~~~~~~~~~~~

screens/client/EnhancedTrackDeliveryScreen.tsx:93:13 - error TS2739: Type '{ pending: "searching"; accepted: "assigned"; picked_up: "pickup"; in_progress: "transit"; delivered: "delivered"; completed: "delivered"; cancelled: "cancelled"; bidding: "searching"; }' is missing the following properties from type 'Record<DeliveryStatus, "pickup" | "delivered" | "cancelled" | "searching" | "assigned" | "transit">': confirmed, in_transit, near_destination

93       const statusMapping: Record<DeliveryStatus, VTCDeliveryStatus['status']> = {
               ~~~~~~~~~~~~~

screens/client/EnhancedTrackDeliveryScreen.tsx:155:42 - error TS2339: Property 'phone' does not exist on type 'Courier'.

155     if (vtcCourier && delivery?.courier?.phone) {
                                             ~~~~~

screens/client/EnhancedTrackDeliveryScreen.tsx:156:48 - error TS2339: Property 'phone' does not exist on type 'Courier'.

156       const phoneUrl = `tel:${delivery.courier.phone}`
                                                   ~~~~~

screens/client/HomeScreen.tsx:42:61 - error TS2344: Type '"Home"' does not satisfy the constraint 'keyof RootStackParamList'.

42   navigation: NativeStackNavigationProp<RootStackParamList, 'Home'>
                                                               ~~~~~~

screens/client/HomeScreen.tsx:59:11 - error TS2339: Property 'getActiveDeliveries' does not exist on type 'UseDeliveryReturn'.

59   const { getActiveDeliveries, getClientDeliveryHistory } = useDelivery()
             ~~~~~~~~~~~~~~~~~~~

screens/client/HomeScreen.tsx:160:45 - error TS2345: Argument of type '["CreateDelivery", { serviceType: string; }]' is not assignable to parameter of type '[screen: "CreateDelivery"] | [screen: "CreateDelivery", params: { searchQuery?: string | undefined; } | undefined]'.
  Type '["CreateDelivery", { serviceType: string; }]' is not assignable to type '[screen: "CreateDelivery", params: { searchQuery?: string | undefined; } | undefined]'.
    Type at position 1 in source is not compatible with type at position 1 in target.
      Object literal may only specify known properties, and 'serviceType' does not exist in type '{ searchQuery?: string | undefined; }'.

160     navigation.navigate('CreateDelivery', { serviceType })
                                                ~~~~~~~~~~~

screens/client/HomeScreen.tsx:195:63 - error TS2322: Type 'string' is not assignable to type 'number'.

195         onPress={() => navigation.navigate('TrackDelivery', { deliveryId: delivery.id.toString() })}
                                                                  ~~~~~~~~~~

  types/navigation.ts:17:20
    17   TrackDelivery: { deliveryId: number }
                          ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/client/HomeScreen.tsx:239:69 - error TS2322: Type 'string' is not assignable to type 'number'.

239               onPress={() => navigation.navigate('TrackDelivery', { deliveryId: delivery.id.toString() })}
                                                                        ~~~~~~~~~~

  types/navigation.ts:17:20
    17   TrackDelivery: { deliveryId: number }
                          ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/client/HomeScreen.tsx:258:18 - error TS2322: Type 'string' is not assignable to type '"package" | "tag" | "credit-card" | "star" | "gift" | "bell" | "delete" | "link" | "user" | "phone" | "code" | "image" | "map" | "filter" | "bold" | "type" | "key" | "camera" | "anchor" | ... 267 more ... | undefined'.

258         <Feather name={service.icon} size={24} color="#FFFFFF" />
                     ~~~~

  node_modules/@expo/vector-icons/build/createIconSet.d.ts:17:5
    17     name: GLYPHS;
           ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & IntrinsicClassAttributes<Component<IconProps<"package" | "tag" | "credit-card" | "star" | "gift" | "bell" | "delete" | "link" | "user" | "phone" | "code" | "image" | "map" | ... 272 more ... | "divide-square">, {}, any>> & Pick<...> & InexactPartial<...> & InexactPartial<...>'

screens/client/HomeScreen.tsx:276:63 - error TS2322: Type 'string' is not assignable to type 'number'.

276       onPress={() => navigation.navigate('DeliveryDetails', { deliveryId: delivery.id.toString() })}
                                                                  ~~~~~~~~~~

  types/navigation.ts:16:22
    16   DeliveryDetails: { deliveryId: number }
                            ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/client/HomeScreen.tsx:390:15 - error TS2322: Type '{ initialRegion: { latitude: number; longitude: number; latitudeDelta: number; longitudeDelta: number; }; style: { flex: number; }; showsUserLocation: true; showsMyLocationButton: boolean; zoomEnabled: boolean; scrollEnabled: boolean; pitchEnabled: boolean; rotateEnabled: boolean; }' is not assignable to type 'IntrinsicAttributes & MapViewProps'.
  Property 'showsMyLocationButton' does not exist on type 'IntrinsicAttributes & MapViewProps'.

390               showsMyLocationButton={false}
                  ~~~~~~~~~~~~~~~~~~~~~

screens/client/KYCVerificationScreen.tsx:79:29 - error TS2339: Property 'date_of_birth' does not exist on type 'User'.

79           dateOfBirth: user.date_of_birth ? user.date_of_birth : '',
                               ~~~~~~~~~~~~~

screens/client/KYCVerificationScreen.tsx:79:50 - error TS2339: Property 'date_of_birth' does not exist on type 'User'.

79           dateOfBirth: user.date_of_birth ? user.date_of_birth : '',
                                                    ~~~~~~~~~~~~~

screens/client/KYCVerificationScreen.tsx:80:29 - error TS2339: Property 'nationality' does not exist on type 'User'.

80           nationality: user.nationality ? user.nationality : '',
                               ~~~~~~~~~~~

screens/client/KYCVerificationScreen.tsx:80:48 - error TS2339: Property 'nationality' does not exist on type 'User'.

80           nationality: user.nationality ? user.nationality : '',
                                                  ~~~~~~~~~~~

screens/client/KYCVerificationScreen.tsx:81:25 - error TS2339: Property 'address' does not exist on type 'User'.

81           address: user.address || '',
                           ~~~~~~~

screens/client/MarketplaceScreen.tsx:30:3 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

30   phone: merchantInfo.phone,
     ~~~~~

  types/models.ts:435:3
    435   phone: string
          ~~~~~
    The expected type comes from property 'phone' which is declared here on type 'Merchant'

screens/client/MarketplaceScreen.tsx:94:70 - error TS18048: 'merchant.description' is possibly 'undefined'.

94         (merchant) => merchant.name.toLowerCase().includes(query) || merchant.description.toLowerCase().includes(query),
                                                                        ~~~~~~~~~~~~~~~~~~~~

screens/client/MarketplaceScreen.tsx:100:48 - error TS18048: 'merchant.categories' is possibly 'undefined'.

100       filtered = filtered.filter((merchant) => merchant.categories.includes(selectedCategory))
                                                   ~~~~~~~~~~~~~~~~~~~

screens/client/MarketplaceScreen.tsx:146:95 - error TS2322: Type 'string' is not assignable to type 'number'.

146     <Card style={styles.merchantCard} onPress={() => navigation.navigate("MerchantDetails", { merchantId: item.id.toString() })}>
                                                                                                  ~~~~~~~~~~

  types/navigation.ts:29:22
    29   MerchantDetails: { merchantId: number }
                            ~~~~~~~~~~
    The expected type comes from property 'merchantId' which is declared here on type '{ merchantId: number; }'

screens/client/MarketplaceScreen.tsx:148:29 - error TS2339: Property 'cover_image' does not exist on type 'Merchant'.

148         source={{ uri: item.cover_image || "https://via.placeholder.com/300x150?text=Boutique" }}
                                ~~~~~~~~~~~

screens/client/MarketplaceScreen.tsx:157:46 - error TS18048: 'item.rating' is possibly 'undefined'.

157             <Text style={styles.ratingText}>{item.rating.toFixed(1)}</Text>
                                                 ~~~~~~~~~~~

screens/client/MarketplaceScreen.tsx:170:19 - error TS2339: Property 'delivery_time' does not exist on type 'Merchant'.

170             {item.delivery_time} min
                      ~~~~~~~~~~~~~

screens/client/MerchantDetailsScreen.tsx:33:3 - error TS2322: Type 'string | undefined' is not assignable to type 'string'.
  Type 'undefined' is not assignable to type 'string'.

33   phone: merchantInfo.phone,
     ~~~~~

  types/models.ts:435:3
    435   phone: string
          ~~~~~
    The expected type comes from property 'phone' which is declared here on type 'Merchant'

screens/client/MerchantDetailsScreen.tsx:100:55 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

100       const merchantData = await fetchMerchantDetails(merchantId)
                                                          ~~~~~~~~~~

screens/client/MerchantDetailsScreen.tsx:102:56 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

102       const productsData = await fetchMerchantProducts(merchantId)
                                                           ~~~~~~~~~~

screens/client/MerchantDetailsScreen.tsx:181:25 - error TS2345: Argument of type '["Cart", { merchantId: number; }]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
  Type '["Cart", { merchantId: number; }]' is not assignable to type '[screen: "MerchantDetails", params: { merchantId: number; }]'.
    Type at position 0 in source is not compatible with type at position 0 in target.
      Type '"Cart"' is not assignable to type '"MerchantDetails"'.

181     navigation.navigate("Cart", { merchantId })
                            ~~~~~~~~~~~~~~~~~~~~~~

screens/client/MerchantDetailsScreen.tsx:312:35 - error TS2339: Property 'cover_image' does not exist on type 'Merchant'.

312           source={{ uri: merchant.cover_image || "https://via.placeholder.com/500x200?text=Boutique" }}
                                      ~~~~~~~~~~~

screens/client/MerchantDetailsScreen.tsx:321:50 - error TS18048: 'merchant.rating' is possibly 'undefined'.

321                 <Text style={styles.ratingText}>{merchant.rating.toFixed(1)}</Text>
                                                     ~~~~~~~~~~~~~~~

screens/client/MerchantDetailsScreen.tsx:322:61 - error TS2339: Property 'review_count' does not exist on type 'Merchant'.

322                 <Text style={styles.ratingCount}>({merchant.review_count})</Text>
                                                                ~~~~~~~~~~~~

screens/client/MerchantDetailsScreen.tsx:329:25 - error TS2339: Property 'delivery_time' does not exist on type 'Merchant'.

329               {merchant.delivery_time && (
                            ~~~~~~~~~~~~~

screens/client/MerchantDetailsScreen.tsx:332:63 - error TS2339: Property 'delivery_time' does not exist on type 'Merchant'.

332                   <Text style={styles.deliveryTime}>{merchant.delivery_time} min</Text>
                                                                  ~~~~~~~~~~~~~

screens/client/MerchantDetailsScreen.tsx:343:60 - error TS2339: Property 'opening_hours' does not exist on type 'Merchant'.

343                 <Text style={styles.detailValue}>{merchant.opening_hours}</Text>
                                                               ~~~~~~~~~~~~~

screens/client/NotificationsScreen.tsx:19:26 - error TS2307: Cannot find module 'expo-haptics' or its corresponding type declarations.

19 import * as Haptics from 'expo-haptics'
                            ~~~~~~~~~~~~~~

screens/client/NotificationsScreen.tsx:38:39 - error TS2339: Property 'markAsRead' does not exist on type 'NotificationContextType'.

38   const { notifications, unreadCount, markAsRead, markAllAsRead } = useNotifications()
                                         ~~~~~~~~~~

screens/client/NotificationsScreen.tsx:38:51 - error TS2339: Property 'markAllAsRead' does not exist on type 'NotificationContextType'.

38   const { notifications, unreadCount, markAsRead, markAllAsRead } = useNotifications()
                                                     ~~~~~~~~~~~~~

screens/client/NotificationsScreen.tsx:118:12 - error TS2678: Type '"message"' is not comparable to type 'NotificationType'.

118       case 'message': return '#00BCD4'
               ~~~~~~~~~

screens/client/NotificationsScreen.tsx:130:12 - error TS2678: Type '"message"' is not comparable to type 'NotificationType'.

130       case 'message': return 'message-text'
               ~~~~~~~~~

screens/client/NotificationsScreen.tsx:147:31 - error TS2345: Argument of type '[string, { deliveryId: number; }]' is not assignable to parameter of type 'never'.

147           navigation.navigate('TrackDelivery', { deliveryId: notification.data.delivery_id })
                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/client/NotificationsScreen.tsx:152:31 - error TS2769: No overload matches this call.
  Argument of type '[string]' is not assignable to parameter of type 'never'.
  Overload 2 of 2, '(options: never): void', gave the following error.
    Argument of type '"TransactionHistory"' is not assignable to parameter of type 'never'.

152           navigation.navigate('TransactionHistory')
                                  ~~~~~~~~~~~~~~~~~~~~


screens/client/NotificationsScreen.tsx:173:33 - error TS2339: Property 'deleteNotification' does not exist on type 'typeof NotificationService'.

173       await NotificationService.deleteNotification(notificationId)
                                    ~~~~~~~~~~~~~~~~~~

screens/client/NotificationsScreen.tsx:213:52 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'NotificationType'.
  Type 'undefined' is not assignable to type 'NotificationType'.

213     const notificationColor = getNotificationColor(item.type)
                                                       ~~~~~~~~~

screens/client/NotificationsScreen.tsx:214:50 - error TS2345: Argument of type 'string | undefined' is not assignable to parameter of type 'NotificationType'.
  Type 'undefined' is not assignable to type 'NotificationType'.

214     const notificationIcon = getNotificationIcon(item.type)
                                                     ~~~~~~~~~

screens/client/NotificationsScreen.tsx:297:9 - error TS2322: Type '"delivery_update"' is not assignable to type '"all" | NotificationType'.

297       { key: 'delivery_update', label: t('notifications.deliveries'), count: notifications.filter(n => n.type === 'delivery_update').length },
            ~~~

  screens/client/NotificationsScreen.tsx:295:28
    295     const filters: Array<{ key: NotificationType | 'all'; label: string; count: number }> = [
                                   ~~~
    The expected type comes from property 'key' which is declared here on type '{ key: "all" | NotificationType; label: string; count: number; }'

screens/client/NotificationsScreen.tsx:298:9 - error TS2322: Type '"payment"' is not assignable to type '"all" | NotificationType'.

298       { key: 'payment', label: t('notifications.payments'), count: notifications.filter(n => n.type === 'payment').length },
            ~~~

  screens/client/NotificationsScreen.tsx:295:28
    295     const filters: Array<{ key: NotificationType | 'all'; label: string; count: number }> = [
                                   ~~~
    The expected type comes from property 'key' which is declared here on type '{ key: "all" | NotificationType; label: string; count: number; }'

screens/client/NotificationsScreen.tsx:299:9 - error TS2322: Type '"promotion"' is not assignable to type '"all" | NotificationType'.

299       { key: 'promotion', label: t('notifications.promotions'), count: notifications.filter(n => n.type === 'promotion').length },
            ~~~

  screens/client/NotificationsScreen.tsx:295:28
    295     const filters: Array<{ key: NotificationType | 'all'; label: string; count: number }> = [
                                   ~~~
    The expected type comes from property 'key' which is declared here on type '{ key: "all" | NotificationType; label: string; count: number; }'

screens/client/NotificationsScreen.tsx:407:11 - error TS2322: Type '{ image: any; title: string; subtitle: string; }' is not assignable to type 'IntrinsicAttributes & EmptyStateProps'.
  Property 'image' does not exist on type 'IntrinsicAttributes & EmptyStateProps'.

407           image={require('../../assets/empty-states/no-notifications.png')}
              ~~~~~

screens/client/OrdersScreen.tsx:19:26 - error TS2307: Cannot find module 'expo-haptics' or its corresponding type declarations.

19 import * as Haptics from 'expo-haptics'
                            ~~~~~~~~~~~~~~

screens/client/OrdersScreen.tsx:160:27 - error TS2345: Argument of type '[string, { deliveryId: number; }]' is not assignable to parameter of type 'never'.

160       navigation.navigate('TrackDelivery', { deliveryId: order.id })
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/client/OrdersScreen.tsx:162:27 - error TS2345: Argument of type '[string, { deliveryId: number; }]' is not assignable to parameter of type 'never'.

162       navigation.navigate('DeliveryDetails', { deliveryId: order.id })
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/client/OrdersScreen.tsx:169:25 - error TS2769: No overload matches this call.
  Argument of type '[string]' is not assignable to parameter of type 'never'.
  Overload 2 of 2, '(options: never): void', gave the following error.
    Argument of type '"CreateDelivery"' is not assignable to parameter of type 'never'.

169     navigation.navigate('CreateDelivery')
                            ~~~~~~~~~~~~~~~~


screens/client/OrdersScreen.tsx:204:17 - error TS2322: Type 'Element' is not assignable to type '((string | number | boolean | Value | AnimatedInterpolation<string | number> | WithAnimatedObject<ReactElement<any, string | JSXElementConstructor<any>>> | WithAnimatedObject<...> | WithAnimatedObject<...> | null) & (string | number)) | undefined'.
  Type 'ReactElement<any, any>' is not assignable to type 'WithAnimatedObject<ReactPortal> & number'.
    Property 'children' is missing in type 'ReactElement<any, any>' but required in type 'WithAnimatedObject<ReactPortal>'.

204                 <Ionicons name={statusIcon} size={12} color="white" />
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  node_modules/@types/react/index.d.ts:378:9
    378         children: ReactNode;
                ~~~~~~~~
    'children' is declared here.
  node_modules/react-native/Libraries/Text/Text.d.ts:115:3
    115   children?: React.ReactNode | undefined;
          ~~~~~~~~
    The expected type comes from property 'children' which is declared here on type 'IntrinsicAttributes & AnimatedProps<TextProps & RefAttributes<Text>> & { visible?: boolean | undefined; ... 4 more ...; theme?: ThemeProp | undefined; }'

screens/client/OrdersScreen.tsx:204:27 - error TS2322: Type '"check-circle-outline" | "close-circle-outline" | "help-circle-outline" | "check-all" | "clock-outline" | "package-variant" | "truck-delivery-outline"' is not assignable to type '"bicycle" | "documents" | "star" | "gift" | "business" | "options" | "link" | "unlink" | "code" | "sunny" | "rainy" | "cloudy" | "image" | "push" | "map" | "filter" | "at" | "key" | ... 1320 more ... | undefined'.
  Type '"check-circle-outline"' is not assignable to type '"bicycle" | "documents" | "star" | "gift" | "business" | "options" | "link" | "unlink" | "code" | "sunny" | "rainy" | "cloudy" | "image" | "push" | "map" | "filter" | "at" | "key" | ... 1320 more ... | undefined'. Did you mean '"checkmark-circle-outline"'?

204                 <Ionicons name={statusIcon} size={12} color="white" />
                              ~~~~

  node_modules/@expo/vector-icons/build/createIconSet.d.ts:17:5
    17     name: GLYPHS;
           ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & IntrinsicClassAttributes<Component<IconProps<"bicycle" | "documents" | "star" | "gift" | "business" | "options" | "link" | "unlink" | "code" | "sunny" | "rainy" | "cloudy" | ... 1325 more ... | "woman-sharp">, {}, any>> & Pick<...> & InexactPartial<...> & InexactPartial<...>'

screens/client/OrdersScreen.tsx:243:23 - error TS2339: Property 'package_weight' does not exist on type 'Delivery'.

243                 {item.package_weight ? `${item.package_weight} kg` : t('orders.weightNotSpecified')}
                          ~~~~~~~~~~~~~~

screens/client/OrdersScreen.tsx:243:48 - error TS2339: Property 'package_weight' does not exist on type 'Delivery'.

243                 {item.package_weight ? `${item.package_weight} kg` : t('orders.weightNotSpecified')}
                                                   ~~~~~~~~~~~~~~

screens/client/OrdersScreen.tsx:250:23 - error TS2339: Property 'total_price' does not exist on type 'Delivery'.

250                 {item.total_price ? `${item.total_price} FCFA` : t('orders.priceNotCalculated')}
                          ~~~~~~~~~~~

screens/client/OrdersScreen.tsx:250:45 - error TS2339: Property 'total_price' does not exist on type 'Delivery'.

250                 {item.total_price ? `${item.total_price} FCFA` : t('orders.priceNotCalculated')}
                                                ~~~~~~~~~~~

screens/client/OrdersScreen.tsx:261:25 - error TS2322: Type '"check-circle-outline" | "close-circle-outline" | "help-circle-outline" | "check-all" | "clock-outline" | "package-variant" | "truck-delivery-outline"' is not assignable to type '"bicycle" | "documents" | "star" | "gift" | "business" | "options" | "link" | "unlink" | "code" | "sunny" | "rainy" | "cloudy" | "image" | "push" | "map" | "filter" | "at" | "key" | ... 1320 more ... | undefined'.
  Type '"check-circle-outline"' is not assignable to type '"bicycle" | "documents" | "star" | "gift" | "business" | "options" | "link" | "unlink" | "code" | "sunny" | "rainy" | "cloudy" | "image" | "push" | "map" | "filter" | "at" | "key" | ... 1320 more ... | undefined'. Did you mean '"checkmark-circle-outline"'?

261               <Ionicons name={statusIcon} size={18} color={statusColor} />
                            ~~~~

  node_modules/@expo/vector-icons/build/createIconSet.d.ts:17:5
    17     name: GLYPHS;
           ~~~~
    The expected type comes from property 'name' which is declared here on type 'IntrinsicAttributes & IntrinsicClassAttributes<Component<IconProps<"bicycle" | "documents" | "star" | "gift" | "business" | "options" | "link" | "unlink" | "code" | "sunny" | "rainy" | "cloudy" | ... 1325 more ... | "woman-sharp">, {}, any>> & Pick<...> & InexactPartial<...> & InexactPartial<...>'

screens/client/OrdersScreen.tsx:273:52 - error TS2345: Argument of type '[string, { deliveryId: number; }]' is not assignable to parameter of type 'never'.

273                 onPress={() => navigation.navigate('TrackDelivery', { deliveryId: item.id })}
                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/client/OrdersScreen.tsx:289:9 - error TS2322: Type '"pending"' is not assignable to type 'DeliveryStatus | "all"'.

289       { key: 'pending', label: t('orders.pending'), count: orders.filter(o => o.status === 'pending').length },
            ~~~

  screens/client/OrdersScreen.tsx:287:28
    287     const filters: Array<{ key: DeliveryStatus | 'all'; label: string; count: number }> = [
                                   ~~~
    The expected type comes from property 'key' which is declared here on type '{ key: DeliveryStatus | "all"; label: string; count: number; }'

screens/client/OrdersScreen.tsx:290:9 - error TS2322: Type '"in_transit"' is not assignable to type 'DeliveryStatus | "all"'.

290       { key: 'in_transit', label: t('orders.inTransit'), count: orders.filter(o => o.status === 'in_transit').length },
            ~~~

  screens/client/OrdersScreen.tsx:287:28
    287     const filters: Array<{ key: DeliveryStatus | 'all'; label: string; count: number }> = [
                                   ~~~
    The expected type comes from property 'key' which is declared here on type '{ key: DeliveryStatus | "all"; label: string; count: number; }'

screens/client/OrdersScreen.tsx:291:9 - error TS2322: Type '"delivered"' is not assignable to type 'DeliveryStatus | "all"'.

291       { key: 'delivered', label: t('orders.delivered'), count: orders.filter(o => o.status === 'delivered').length },
            ~~~

  screens/client/OrdersScreen.tsx:287:28
    287     const filters: Array<{ key: DeliveryStatus | 'all'; label: string; count: number }> = [
                                   ~~~
    The expected type comes from property 'key' which is declared here on type '{ key: DeliveryStatus | "all"; label: string; count: number; }'

screens/client/OrdersScreen.tsx:386:11 - error TS2322: Type '{ image: any; title: string; subtitle: string; actionText: string; onAction: () => Promise<void>; }' is not assignable to type 'IntrinsicAttributes & EmptyStateProps'.
  Property 'image' does not exist on type 'IntrinsicAttributes & EmptyStateProps'.

386           image={require('../../assets/empty-states/no-deliveries.png')}
              ~~~~~

screens/client/PaymentScreen.tsx:65:41 - error TS2448: Block-scoped variable 'formatPrice' used before its declaration.

65       description: `Solde disponible: ${formatPrice(walletBalance)} FCFA`
                                           ~~~~~~~~~~~

  screens/client/PaymentScreen.tsx:91:9
    91   const formatPrice = (price: number) => {
               ~~~~~~~~~~~
    'formatPrice' is declared here.

screens/client/PaymentScreen.tsx:65:41 - error TS2454: Variable 'formatPrice' is used before being assigned.

65       description: `Solde disponible: ${formatPrice(walletBalance)} FCFA`
                                           ~~~~~~~~~~~

screens/client/RateDeliveryScreen.tsx:16:26 - error TS2307: Cannot find module 'expo-haptics' or its corresponding type declarations.

16 import * as Haptics from 'expo-haptics'
                            ~~~~~~~~~~~~~~

screens/client/RateDeliveryScreen.tsx:104:28 - error TS2322: Type 'string' is not assignable to type 'never'.

104                 routes: [{ name: 'ClientHome' }],
                               ~~~~

  node_modules/@react-navigation/routers/lib/typescript/src/types.d.ts:59:5
    59     name: RouteName;
           ~~~~
    The expected type comes from property 'name' which is declared here on type 'NavigationRoute<RootParamList, never> | PartialRoute<Route<never, object | undefined>>'

screens/client/RateDeliveryScreen.tsx:164:69 - error TS2551: Property 'delivered_at' does not exist on type 'Delivery'. Did you mean 'delivery_lat'?

164                     Livraison #{delivery.id} • {formatDate(delivery.delivered_at || new Date())}
                                                                        ~~~~~~~~~~~~

  types/models.ts:384:3
    384   delivery_lat: number
          ~~~~~~~~~~~~
    'delivery_lat' is declared here.

screens/client/RateDeliveryScreen.tsx:201:72 - error TS2339: Property 'full_name' does not exist on type 'Courier'.

201                     <Text style={styles.courierName}>{delivery.courier.full_name}</Text>
                                                                           ~~~~~~~~~

screens/client/RateDeliveryScreen.tsx:226:21 - error TS2322: Type '{ rating: number; onRatingChange: Dispatch<SetStateAction<number>>; size: number; style: { marginBottom: number; }; }' is not assignable to type 'IntrinsicAttributes & StarRatingProps'.
  Property 'style' does not exist on type 'IntrinsicAttributes & StarRatingProps'.

226                     style={styles.globalRating}
                        ~~~~~

screens/client/RecommendedDeliveriesScreen.tsx:79:46 - error TS2322: Type 'string' is not assignable to type 'number'.

79     navigation.navigate("DeliveryDetails", { deliveryId: delivery.id.toString() })
                                                ~~~~~~~~~~

  types/navigation.ts:16:22
    16   DeliveryDetails: { deliveryId: number }
                            ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/client/RecommendedDeliveriesScreen.tsx:87:25 - error TS2345: Argument of type '["Bid", { deliveryId: string; }]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
  Type '["Bid", { deliveryId: string; }]' is not assignable to type '[screen: "Notifications", params: undefined] | [screen: "Support", params: undefined] | [screen: "ClientHome", params: undefined] | [screen: "Login", params: undefined] | [screen: "OTPLogin", params: undefined] | [screen: "ClassicLogin", params: undefined] | [screen: "Register", params: undefined] | ... 27 more ... ...'.
    Type '["Bid", { deliveryId: string; }]' is not assignable to type '[screen: "CourierStatus", params: { initialStatus?: boolean | undefined; }]'.
      Type at position 0 in source is not compatible with type at position 0 in target.
        Type '"Bid"' is not assignable to type '"CourierStatus"'.

87     navigation.navigate("Bid", { deliveryId: delivery.id.toString() })
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/client/TrackDeliveryScreen.tsx:72:36 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

72       const etaData = await getETA(deliveryId)
                                      ~~~~~~~~~~

screens/client/TrackDeliveryScreen.tsx:115:50 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

115       const routeData = await fetchDeliveryRoute(deliveryId)
                                                     ~~~~~~~~~~

screens/client/TrackDeliveryScreen.tsx:119:36 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

119       const etaData = await getETA(deliveryId)
                                       ~~~~~~~~~~

screens/client/TrackDeliveryScreen.tsx:192:30 - error TS2339: Property 'phone' does not exist on type 'Courier'.

192     if (!courier || !courier.phone) {
                                 ~~~~~

screens/client/TrackDeliveryScreen.tsx:197:33 - error TS2339: Property 'phone' does not exist on type 'Courier'.

197     const phoneNumber = courier.phone.startsWith("+") ? courier.phone : `+225${courier.phone}`
                                    ~~~~~

screens/client/TrackDeliveryScreen.tsx:197:65 - error TS2339: Property 'phone' does not exist on type 'Courier'.

197     const phoneNumber = courier.phone.startsWith("+") ? courier.phone : `+225${courier.phone}`
                                                                    ~~~~~

screens/client/TrackDeliveryScreen.tsx:197:88 - error TS2339: Property 'phone' does not exist on type 'Courier'.

197     const phoneNumber = courier.phone.startsWith("+") ? courier.phone : `+225${courier.phone}`
                                                                                           ~~~~~

screens/client/TrackDeliveryScreen.tsx:202:30 - error TS2339: Property 'phone' does not exist on type 'Courier'.

202     if (!courier || !courier.phone) {
                                 ~~~~~

screens/client/TrackDeliveryScreen.tsx:207:33 - error TS2339: Property 'phone' does not exist on type 'Courier'.

207     const phoneNumber = courier.phone.startsWith("+") ? courier.phone : `+225${courier.phone}`
                                    ~~~~~

screens/client/TrackDeliveryScreen.tsx:207:65 - error TS2339: Property 'phone' does not exist on type 'Courier'.

207     const phoneNumber = courier.phone.startsWith("+") ? courier.phone : `+225${courier.phone}`
                                                                    ~~~~~

screens/client/TrackDeliveryScreen.tsx:207:88 - error TS2339: Property 'phone' does not exist on type 'Courier'.

207     const phoneNumber = courier.phone.startsWith("+") ? courier.phone : `+225${courier.phone}`
                                                                                           ~~~~~

screens/client/TrackDeliveryScreen.tsx:455:64 - error TS2339: Property 'profile_picture' does not exist on type 'Courier'.

455                 <Avatar.Image size={50} source={{ uri: courier.profile_picture || "https://via.placeholder.com/50" }} />
                                                                   ~~~~~~~~~~~~~~~

screens/client/TrackDeliveryScreen.tsx:457:61 - error TS2339: Property 'full_name' does not exist on type 'Courier'.

457                   <Text style={styles.courierName}>{courier.full_name}</Text>
                                                                ~~~~~~~~~

screens/client/TrackDeliveryScreen.tsx:461:71 - error TS2339: Property 'rating_count' does not exist on type 'Courier'.

461                       {courier.rating?.toFixed(1) || "0.0"} ({courier.rating_count || 0})
                                                                          ~~~~~~~~~~~~

screens/client/TransactionHistoryScreen.tsx:143:15 - error TS2322: Type 'string' is not assignable to type 'number'.

143               deliveryId: item.delivery_id.toString()
                  ~~~~~~~~~~

  types/navigation.ts:16:22
    16   DeliveryDetails: { deliveryId: number }
                            ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/client/TransactionHistoryScreen.tsx:210:10 - error TS2552: Cannot find name 'SearchBar'. Did you mean 'Searchbar'?

210         <SearchBar
             ~~~~~~~~~

screens/client/UserPreferencesScreen.fixed.tsx:265:50 - error TS2769: No overload matches this call.
  Argument of type '["KYCVerification"]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '["KYCVerification"]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '["KYCVerification"]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '"KYCVerification"' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.

265               onPress={() => navigation.navigate('KYCVerification')}
                                                     ~~~~~~~~~~~~~~~~~


screens/client/UserPreferencesScreen.fixed.tsx:274:50 - error TS2769: No overload matches this call.
  Argument of type '["PaymentMethods"]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '["PaymentMethods"]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '["PaymentMethods"]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '"PaymentMethods"' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.

274               onPress={() => navigation.navigate('PaymentMethods')}
                                                     ~~~~~~~~~~~~~~~~


screens/client/UserPreferencesScreen.fixed.tsx:283:50 - error TS2769: No overload matches this call.
  Argument of type '["PrivacySettings"]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '["PrivacySettings"]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '["PrivacySettings"]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '"PrivacySettings"' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.

283               onPress={() => navigation.navigate('PrivacySettings')}
                                                     ~~~~~~~~~~~~~~~~~


screens/client/UserPreferencesScreen.tsx:264:50 - error TS2769: No overload matches this call.
  Argument of type '["KYCVerification"]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '["KYCVerification"]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '["KYCVerification"]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '"KYCVerification"' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.

264               onPress={() => navigation.navigate('KYCVerification')}
                                                     ~~~~~~~~~~~~~~~~~


screens/client/UserPreferencesScreen.tsx:273:50 - error TS2769: No overload matches this call.
  Argument of type '["PaymentMethods"]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '["PaymentMethods"]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '["PaymentMethods"]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '"PaymentMethods"' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.

273               onPress={() => navigation.navigate('PaymentMethods')}
                                                     ~~~~~~~~~~~~~~~~


screens/client/UserPreferencesScreen.tsx:282:50 - error TS2769: No overload matches this call.
  Argument of type '["PrivacySettings"]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '["PrivacySettings"]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '["PrivacySettings"]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '"PrivacySettings"' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.

282               onPress={() => navigation.navigate('PrivacySettings')}
                                                     ~~~~~~~~~~~~~~~~~


screens/client/WalletScreen.tsx:172:50 - error TS2769: No overload matches this call.
  Argument of type '["PaymentMethods"]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '["PaymentMethods"]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '["PaymentMethods"]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '"PaymentMethods"' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.

172               onPress={() => navigation.navigate('PaymentMethods')}
                                                     ~~~~~~~~~~~~~~~~


screens/client/WalletScreen.tsx:242:27 - error TS2322: Type 'string' is not assignable to type 'number'.

242                           deliveryId: transaction.delivery_id.toString()
                              ~~~~~~~~~~

  types/navigation.ts:16:22
    16   DeliveryDetails: { deliveryId: number }
                            ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/courier/AddVehicleScreen.tsx:53:9 - error TS2353: Object literal may only specify known properties, and 'maxWeight' does not exist in type 'VehicleCreateRequest'.

53         maxWeight: formData.maxWeight ? parseFloat(formData.maxWeight) : undefined,
           ~~~~~~~~~

screens/courier/BidScreen.tsx:21:40 - error TS2344: Type '"Bid"' does not satisfy the constraint 'keyof RootStackParamList'.

21   route: RouteProp<RootStackParamList, "Bid">
                                          ~~~~~

screens/courier/BidScreen.tsx:22:61 - error TS2344: Type '"Bid"' does not satisfy the constraint 'keyof RootStackParamList'.

22   navigation: NativeStackNavigationProp<RootStackParamList, "Bid">
                                                               ~~~~~

screens/courier/BidScreen.tsx:31:11 - error TS2339: Property 'deliveryId' does not exist on type 'Readonly<unknown> | undefined'.

31   const { deliveryId } = route.params
             ~~~~~~~~~~

screens/courier/CollaborativeDeliveriesScreen.tsx:61:25 - error TS2345: Argument of type '["CollaborativeDeliveryDetails", { deliveryId: string; clientName: string; finalPrice: number; }]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
  Type '["CollaborativeDeliveryDetails", { deliveryId: string; clientName: string; finalPrice: number; }]' is not assignable to type '[screen: "Notifications", params: undefined] | [screen: "Support", params: undefined] | [screen: "ClientHome", params: undefined] | [screen: "Login", params: undefined] | [screen: "OTPLogin", params: undefined] | [screen: "ClassicLogin", params: undefined] | [screen: "Register", params: undefined] | ... 27 more ... ...'.
    Type '["CollaborativeDeliveryDetails", { deliveryId: string; clientName: string; finalPrice: number; }]' is not assignable to type '[screen: "CourierStatus", params: { initialStatus?: boolean | undefined; }]'.
      Type at position 0 in source is not compatible with type at position 0 in target.
        Type '"CollaborativeDeliveryDetails"' is not assignable to type '"CourierStatus"'.

 61     navigation.navigate("CollaborativeDeliveryDetails", {
                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 62       deliveryId: delivery.id.toString(),
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
... 
 64       finalPrice: delivery.finalPrice || 0, // Default to 0 if finalPrice is undefined
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 65     })
    ~~~~~

screens/courier/CollaborativeDeliveriesScreen.tsx:69:25 - error TS2345: Argument of type '["JoinCollaborativeDelivery", { deliveryId: string; }]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
  Type '["JoinCollaborativeDelivery", { deliveryId: string; }]' is not assignable to type '[screen: "Notifications", params: undefined] | [screen: "Support", params: undefined] | [screen: "ClientHome", params: undefined] | [screen: "Login", params: undefined] | [screen: "OTPLogin", params: undefined] | [screen: "ClassicLogin", params: undefined] | [screen: "Register", params: undefined] | ... 27 more ... ...'.
    Type '["JoinCollaborativeDelivery", { deliveryId: string; }]' is not assignable to type '[screen: "CourierStatus", params: { initialStatus?: boolean | undefined; }]'.
      Type at position 0 in source is not compatible with type at position 0 in target.
        Type '"JoinCollaborativeDelivery"' is not assignable to type '"CourierStatus"'.

69     navigation.navigate("JoinCollaborativeDelivery", { deliveryId: delivery.id.toString() })
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/courier/CollaborativeDeliveriesScreen.tsx:73:25 - error TS2345: Argument of type '["CollaborativeChat", { deliveryId: string; }]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
  Type '["CollaborativeChat", { deliveryId: string; }]' is not assignable to type '[screen: "Notifications", params: undefined] | [screen: "Support", params: undefined] | [screen: "ClientHome", params: undefined] | [screen: "Login", params: undefined] | [screen: "OTPLogin", params: undefined] | [screen: "ClassicLogin", params: undefined] | [screen: "Register", params: undefined] | ... 27 more ... ...'.
    Type '["CollaborativeChat", { deliveryId: string; }]' is not assignable to type '[screen: "CourierStatus", params: { initialStatus?: boolean | undefined; }]'.
      Type at position 0 in source is not compatible with type at position 0 in target.
        Type '"CollaborativeChat"' is not assignable to type '"CourierStatus"'.

73     navigation.navigate("CollaborativeChat", { deliveryId: delivery.id.toString() })
                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/courier/CollaborativeDeliveryDetailsScreen.tsx:7:42 - error TS2307: Cannot find module '@react-navigation/stack' or its corresponding type declarations.

7 import type { StackNavigationProp } from "@react-navigation/stack"
                                           ~~~~~~~~~~~~~~~~~~~~~~~~~

screens/courier/CourierDashboardScreen.tsx:139:46 - error TS2322: Type 'string' is not assignable to type 'number'.

139     navigation.navigate("DeliveryDetails", { deliveryId });
                                                 ~~~~~~~~~~

  types/navigation.ts:16:22
    16   DeliveryDetails: { deliveryId: number }
                            ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/courier/CourierDashboardScreen.tsx:147:25 - error TS2769: No overload matches this call.
  Argument of type '["GamificationScreen"]' is not assignable to parameter of type '[screen: "Notifications"] | [screen: "Notifications", params: undefined] | [screen: "Support"] | [screen: "Support", params: undefined] | [screen: "ClientHome"] | [screen: "ClientHome", params: undefined] | [screen: "Login"] | [screen: "Login", params: undefined] | ... 49 more ... | [screen: ...]'.
    Type '["GamificationScreen"]' is not assignable to type '[screen: "Notifications"] | [screen: "Support"] | [screen: "ClientHome"] | [screen: "Login"] | [screen: "OTPLogin"] | [screen: "ClassicLogin"] | [screen: "Register"] | [screen: "ForgotPassword"] | [screen: "CreateDelivery"] | [screen: "DeliveryHistory"] | ... 12 more ... | [screen: ...]'.
      Type '["GamificationScreen"]' is not assignable to type '[screen: "CourierProfile"]'.
        Type '"GamificationScreen"' is not assignable to type '"CourierProfile"'.
  Overload 2 of 2, '(options: { key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }): void', gave the following error.
    Argument of type 'string' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.

147     navigation.navigate("GamificationScreen");
                            ~~~~~~~~~~~~~~~~~~~~


screens/courier/CourierDashboardScreen.tsx:164:36 - error TS2339: Property 'profile_picture' does not exist on type 'User'.

164   const userProfilePicture = user?.profile_picture || "https://via.placeholder.com/40";
                                       ~~~~~~~~~~~~~~~

screens/courier/CourierDashboardScreen.tsx:315:48 - error TS2345: Argument of type 'string' is not assignable to parameter of type '{ key: string; params?: undefined; merge?: boolean | undefined; } | { name: "Notifications"; key?: string | undefined; params: undefined; merge?: boolean | undefined; } | { key: string; params?: undefined; merge?: boolean | undefined; } | ... 66 more ... | { ...; }'.

315             onPress={() => navigation.navigate("CourierStatus")}
                                                   ~~~~~~~~~~~~~~~

screens/courier/CourierDeliveryHistoryScreen.tsx:78:100 - error TS2322: Type 'string' is not assignable to type 'number'.

78     <Card style={styles.deliveryCard} onPress={() => navigation.navigate("CourierTrackDelivery", { deliveryId: item.id.toString() })}>
                                                                                                      ~~~~~~~~~~

  types/navigation.ts:35:27
    35   CourierTrackDelivery: { deliveryId: number }
                                 ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/courier/CourierDeliveryHistoryScreen.tsx:107:74 - error TS2322: Type 'string' is not assignable to type 'number'.

107             onPress={() => navigation.navigate("CourierTrackDelivery", { deliveryId: item.id.toString() })}
                                                                             ~~~~~~~~~~

  types/navigation.ts:35:27
    35   CourierTrackDelivery: { deliveryId: number }
                                 ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/courier/CourierProfileScreen.tsx:62:25 - error TS2339: Property 'profile_image' does not exist on type 'User'.

62           source={user?.profile_image ? { uri: user.profile_image } : require("../../assets/default-avatar.png")}
                           ~~~~~~~~~~~~~

screens/courier/CourierProfileScreen.tsx:62:53 - error TS2339: Property 'profile_image' does not exist on type 'User'.

62           source={user?.profile_image ? { uri: user.profile_image } : require("../../assets/default-avatar.png")}
                                                       ~~~~~~~~~~~~~

screens/courier/CourierProfileScreen.tsx:64:45 - error TS2339: Property 'name' does not exist on type 'User'.

64         <Text style={styles.name}>{`${user?.name}`}</Text>
                                               ~~~~

screens/courier/CourierStatusScreen.tsx:52:25 - error TS2345: Argument of type 'CourierProfile' is not assignable to parameter of type 'SetStateAction<UserProfile | null>'.
  Type 'CourierProfile' is missing the following properties from type 'UserProfile': user_id, address, city, country

52       setCourierProfile(profileData)
                           ~~~~~~~~~~~

screens/courier/CourierStatusScreen.tsx:108:24 - error TS2353: Object literal may only specify known properties, and 'is_online' does not exist in type 'Partial<User>'.

108       updateUserData({ is_online: newStatus })
                           ~~~~~~~~~

screens/courier/CourierStatusScreen.tsx:230:27 - error TS2339: Property 'profile_picture' does not exist on type 'User'.

230                     user?.profile_picture
                              ~~~~~~~~~~~~~~~

screens/courier/CourierStatusScreen.tsx:231:37 - error TS2339: Property 'profile_picture' does not exist on type 'User'.

231                       ? { uri: user.profile_picture }
                                        ~~~~~~~~~~~~~~~

screens/courier/CourierTrackDeliveryScreen.tsx:140:47 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

140       const data = await fetchDeliveryDetails(deliveryId)
                                                  ~~~~~~~~~~

screens/courier/CourierTrackDeliveryScreen.tsx:290:43 - error TS2345: Argument of type '"in_progress"' is not assignable to parameter of type 'DeliveryStatus'.

290               onPress: () => updateStatus("in_progress"),
                                              ~~~~~~~~~~~~~

screens/courier/CourierTrackDeliveryScreen.tsx:313:41 - error TS2345: Argument of type '"delivered"' is not assignable to parameter of type 'DeliveryStatus'.

313             onPress: () => updateStatus("delivered"),
                                            ~~~~~~~~~~~

screens/courier/CourierTrackDeliveryScreen.tsx:410:36 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

410         await updateDeliveryStatus(deliveryId, status)
                                       ~~~~~~~~~~

screens/courier/CourierTrackDeliveryScreen.tsx:740:41 - error TS2345: Argument of type '"in_progress"' is not assignable to parameter of type 'DeliveryStatus'.

740             onPress={() => updateStatus("in_progress")}
                                            ~~~~~~~~~~~~~

screens/courier/CourierTrackDeliveryScreen.tsx:753:41 - error TS2345: Argument of type '"delivered"' is not assignable to parameter of type 'DeliveryStatus'.

753             onPress={() => updateStatus("delivered")}
                                            ~~~~~~~~~~~

screens/courier/CourierWalletScreen.tsx:75:47 - error TS2339: Property 'wallet_balance' does not exist on type 'User'.

75     if (amount <= 0 || amount > (userProfile?.wallet_balance || 0)) {
                                                 ~~~~~~~~~~~~~~

screens/courier/CourierWalletScreen.tsx:84:38 - error TS2339: Property 'name' does not exist on type 'User'.

84           account_name: userProfile?.name || ''
                                        ~~~~

screens/courier/CourierWalletScreen.tsx:162:44 - error TS2339: Property 'wallet_balance' does not exist on type 'User'.

162               {formatCurrency(userProfile?.wallet_balance || 0)} FCFA
                                               ~~~~~~~~~~~~~~

screens/courier/CourierWalletScreen.tsx:169:41 - error TS2339: Property 'wallet_balance' does not exist on type 'User'.

169                 disabled={(userProfile?.wallet_balance || 0) < 1000}
                                            ~~~~~~~~~~~~~~

screens/courier/CourierWalletScreen.tsx:183:46 - error TS2339: Property 'monthly_earnings' does not exist on type 'User'.

183                 {formatCurrency(userProfile?.monthly_earnings || 0)}
                                                 ~~~~~~~~~~~~~~~~

screens/courier/CourierWalletScreen.tsx:195:31 - error TS2339: Property 'completed_deliveries' does not exist on type 'User'.

195                 {userProfile?.completed_deliveries || 0}
                                  ~~~~~~~~~~~~~~~~~~~~

screens/courier/CourierWalletScreen.tsx:282:74 - error TS2339: Property 'wallet_balance' does not exist on type 'User'.

282             {t("wallet.availableBalance")}: {formatCurrency(userProfile?.wallet_balance || 0)} FCFA
                                                                             ~~~~~~~~~~~~~~

screens/courier/DeliveryDetailsScreen.tsx:86:19 - error TS2339: Property 'client_phone' does not exist on type 'Delivery'.

86     if (delivery?.client_phone) {
                     ~~~~~~~~~~~~

screens/courier/DeliveryDetailsScreen.tsx:87:39 - error TS2339: Property 'client_phone' does not exist on type 'Delivery'.

87       Linking.openURL(`tel:${delivery.client_phone}`)
                                         ~~~~~~~~~~~~

screens/courier/DeliveryDetailsScreen.tsx:218:15 - error TS2322: Type '{ initialRegion: { latitude: number; longitude: number; latitudeDelta: number; longitudeDelta: number; }; deliveries: Delivery[]; }' is not assignable to type 'IntrinsicAttributes & VTCStyleMapProps'.
  Property 'initialRegion' does not exist on type 'IntrinsicAttributes & VTCStyleMapProps'.

218               initialRegion={{
                  ~~~~~~~~~~~~~

screens/courier/DeliveryDetailsScreen.tsx:239:23 - error TS2339: Property 'package_description' does not exist on type 'Delivery'.

239             {delivery.package_description && (
                          ~~~~~~~~~~~~~~~~~~~

screens/courier/DeliveryDetailsScreen.tsx:242:61 - error TS2339: Property 'package_description' does not exist on type 'Delivery'.

242                 <Text style={styles.packageValue}>{delivery.package_description}</Text>
                                                                ~~~~~~~~~~~~~~~~~~~

screens/courier/DeliveryDetailsScreen.tsx:249:27 - error TS2339: Property 'special_instructions' does not exist on type 'Delivery'.

249                 {delivery.special_instructions || 'Aucune instruction spéciale'}
                              ~~~~~~~~~~~~~~~~~~~~

screens/courier/DeliveryDetailsScreen.tsx:265:23 - error TS2339: Property 'client_phone' does not exist on type 'Delivery'.

265             {delivery.client_phone && (
                          ~~~~~~~~~~~~

screens/courier/DeliveryDetailsScreen.tsx:269:29 - error TS2339: Property 'client_phone' does not exist on type 'Delivery'.

269                   {delivery.client_phone}
                                ~~~~~~~~~~~~

screens/courier/DeliveryHistoryScreen.tsx:184:46 - error TS2322: Type 'string' is not assignable to type 'number'.

184     navigation.navigate("DeliveryDetails", { deliveryId })
                                                 ~~~~~~~~~~

  types/navigation.ts:16:22
    16   DeliveryDetails: { deliveryId: number }
                            ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/courier/ExpressDeliveriesScreen.tsx:63:53 - error TS2322: Type 'string' is not assignable to type 'number'.

63       navigation.navigate("CourierTrackDelivery", { deliveryId: deliveryId.toString() })
                                                       ~~~~~~~~~~

  types/navigation.ts:35:27
    35   CourierTrackDelivery: { deliveryId: number }
                                 ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/courier/ExpressDeliveriesScreen.tsx:187:75 - error TS2322: Type 'string' is not assignable to type 'number'.

187                   onPress={() => navigation.navigate("DeliveryDetails", { deliveryId: item.id.toString() })}
                                                                              ~~~~~~~~~~

  types/navigation.ts:16:22
    16   DeliveryDetails: { deliveryId: number }
                            ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/courier/ExpressDeliveriesScreen.tsx:205:75 - error TS2322: Type 'string' is not assignable to type 'number'.

205                   onPress={() => navigation.navigate("DeliveryDetails", { deliveryId: item.id.toString() })}
                                                                              ~~~~~~~~~~

  types/navigation.ts:16:22
    16   DeliveryDetails: { deliveryId: number }
                            ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/courier/ExpressDeliveriesScreen.tsx:223:78 - error TS2322: Type 'string' is not assignable to type 'number'.

223                 onPress={() => navigation.navigate("CourierTrackDelivery", { deliveryId: item.id.toString() })}
                                                                                 ~~~~~~~~~~

  types/navigation.ts:35:27
    35   CourierTrackDelivery: { deliveryId: number }
                                 ~~~~~~~~~~
    The expected type comes from property 'deliveryId' which is declared here on type '{ deliveryId: number; }'

screens/courier/GamificationScreen.tsx:105:46 - error TS2339: Property 'total_points' does not exist on type 'CourierStats'.

105   const currentLevel = getCurrentLevel(stats.total_points)
                                                 ~~~~~~~~~~~~

screens/courier/GamificationScreen.tsx:106:49 - error TS2339: Property 'total_points' does not exist on type 'CourierStats'.

106   const progress = getProgressToNextLevel(stats.total_points)
                                                    ~~~~~~~~~~~~

screens/courier/GamificationScreen.tsx:124:27 - error TS2339: Property 'profile_picture' does not exist on type 'User'.

124                     user?.profile_picture
                              ~~~~~~~~~~~~~~~

screens/courier/GamificationScreen.tsx:125:37 - error TS2339: Property 'profile_picture' does not exist on type 'User'.

125                       ? { uri: user.profile_picture }
                                        ~~~~~~~~~~~~~~~

screens/courier/GamificationScreen.tsx:134:59 - error TS2339: Property 'total_points' does not exist on type 'CourierStats'.

134                   <Text style={styles.totalPoints}>{stats.total_points} points</Text>
                                                              ~~~~~~~~~~~~

screens/courier/GamificationScreen.tsx:150:69 - error TS2339: Property 'total_points' does not exist on type 'CourierStats'.

150                     ? ` ${levelThresholds[currentLevel + 1] - stats.total_points} points restants`
                                                                        ~~~~~~~~~~~~

screens/courier/GamificationScreen.tsx:167:57 - error TS2339: Property 'total_deliveries' does not exist on type 'CourierStats'.

167                   <Text style={styles.statValue}>{stats.total_deliveries}</Text>
                                                            ~~~~~~~~~~~~~~~~

screens/courier/GamificationScreen.tsx:172:57 - error TS2551: Property 'average_rating' does not exist on type 'CourierStats'. Did you mean 'averageRating'?

172                   <Text style={styles.statValue}>{stats.average_rating?.toFixed(1) || "N/A"}</Text>
                                                            ~~~~~~~~~~~~~~

  types/models.ts:552:3
    552   averageRating: number;
          ~~~~~~~~~~~~~
    'averageRating' is declared here.

screens/courier/GamificationScreen.tsx:177:57 - error TS2339: Property 'completion_rate' does not exist on type 'CourierStats'.

177                   <Text style={styles.statValue}>{stats.completion_rate?.toFixed(0) || 0}%</Text>
                                                            ~~~~~~~~~~~~~~~

screens/courier/GamificationScreen.tsx:182:57 - error TS2339: Property 'average_delivery_time' does not exist on type 'CourierStats'.

182                   <Text style={styles.statValue}>{stats.average_delivery_time || "N/A"}</Text>
                                                            ~~~~~~~~~~~~~~~~~~~~~

screens/courier/GamificationScreen.tsx:282:46 - error TS2339: Property 'daily_deliveries' does not exist on type 'CourierStats'.

282                     progress={Math.min(stats.daily_deliveries / 5, 1)}
                                                 ~~~~~~~~~~~~~~~~

screens/courier/GamificationScreen.tsx:287:28 - error TS2339: Property 'daily_deliveries' does not exist on type 'CourierStats'.

287                     {stats.daily_deliveries}/5 livraisons
                               ~~~~~~~~~~~~~~~~

screens/courier/GamificationScreen.tsx:300:47 - error TS2339: Property 'daily_rating' does not exist on type 'CourierStats'.

300                     progress={Math.min((stats.daily_rating || 0) / 4.5, 1)}
                                                  ~~~~~~~~~~~~

screens/courier/GamificationScreen.tsx:305:43 - error TS2339: Property 'daily_rating' does not exist on type 'CourierStats'.

305                     Note actuelle: {stats.daily_rating?.toFixed(1) || "N/A"}
                                              ~~~~~~~~~~~~

screens/courier/HomeScreen.tsx:96:39 - error TS2339: Property 'data' does not exist on type 'Delivery[]'.

96       setAvailableDeliveries(response.data || [])
                                         ~~~~

screens/courier/HomeScreen.tsx:105:36 - error TS2339: Property 'data' does not exist on type 'Delivery[]'.

105       setActiveDeliveries(response.data || [])
                                       ~~~~

screens/courier/HomeScreen.tsx:114:33 - error TS2339: Property 'data' does not exist on type '{ is_online: boolean; }'.

114       setCourierStatus(response.data?.is_online || false)
                                    ~~~~

screens/courier/HomeScreen.tsx:123:25 - error TS2339: Property 'data' does not exist on type '{ total_deliveries: number; completed_today: number; earnings_today: number; average_rating: number; current_earnings: number; }'.

123       setStats(response.data || stats)
                            ~~~~

screens/courier/HomeScreen.tsx:194:42 - error TS2345: Argument of type '[string, { deliveryId: number; }]' is not assignable to parameter of type 'never'.

194       onPress={() => navigation.navigate('CourierTrackDelivery', { deliveryId: item.id })}
                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/courier/HomeScreen.tsx:224:46 - error TS2345: Argument of type '[string, { deliveryId: number; }]' is not assignable to parameter of type 'never'.

224           onPress={() => navigation.navigate('CourierTrackDelivery', { deliveryId: item.id })}
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/courier/HomeScreen.tsx:280:46 - error TS2345: Argument of type '[string, { delivery: AvailableDelivery; }]' is not assignable to parameter of type 'never'.

280           onPress={() => navigation.navigate('BidScreen', { delivery: item })}
                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

screens/courier/VehicleManagementScreen.tsx:22:39 - error TS2339: Property 'getUserVehicles' does not exist on type 'UseVehicleReturn'.

22   const { vehicles, isLoading, error, getUserVehicles, deleteVehicle, setActiveVehicle } = useVehicle()
                                         ~~~~~~~~~~~~~~~

screens/courier/VehicleManagementScreen.tsx:22:71 - error TS2339: Property 'setActiveVehicle' does not exist on type 'UseVehicleReturn'.

22   const { vehicles, isLoading, error, getUserVehicles, deleteVehicle, setActiveVehicle } = useVehicle()
                                                                         ~~~~~~~~~~~~~~~~

screens/courier/VehicleManagementScreen.tsx:48:33 - error TS2345: Argument of type 'string' is not assignable to parameter of type 'number'.

48             await deleteVehicle(vehicleId)
                                   ~~~~~~~~~

screens/courier/VehicleManagementScreen.tsx:161:50 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

161                   onPress={() => handleSetActive(item.id)}
                                                     ~~~~~~~

screens/courier/VehicleManagementScreen.tsx:176:52 - error TS2345: Argument of type 'number' is not assignable to parameter of type 'string'.

176                 onPress={() => handleDeleteVehicle(item.id)}
                                                       ~~~~~~~

screens/courier/VehicleManagementScreen.tsx:177:27 - error TS2367: This comparison appears to be unintentional because the types 'string | null' and 'number' have no overlap.

177                 disabled={deletingId === item.id}
                              ~~~~~~~~~~~~~~~~~~~~~~

screens/courier/VehicleManagementScreen.tsx:179:18 - error TS2367: This comparison appears to be unintentional because the types 'string | null' and 'number' have no overlap.

179                 {deletingId === item.id ? (
                     ~~~~~~~~~~~~~~~~~~~~~~

screens/courier/VehicleManagementScreen.tsx:268:13 - error TS2769: No overload matches this call.
  Overload 1 of 2, '(props: FlatListProps<Vehicle>): FlatList<Vehicle>', gave the following error.
    Type '(item: Vehicle) => number' is not assignable to type '(item: Vehicle, index: number) => string'.
      Type 'number' is not assignable to type 'string'.
  Overload 2 of 2, '(props: FlatListProps<Vehicle>, context: any): FlatList<Vehicle>', gave the following error.
    Type '(item: Vehicle) => number' is not assignable to type '(item: Vehicle, index: number) => string'.
      Type 'number' is not assignable to type 'string'.

268             keyExtractor={(item) => item.id}
                ~~~~~~~~~~~~

  node_modules/react-native/Libraries/Lists/FlatList.d.ts:95:3
    95   keyExtractor?: ((item: ItemT, index: number) => string) | undefined;
         ~~~~~~~~~~~~
    The expected type comes from property 'keyExtractor' which is declared here on type 'IntrinsicAttributes & IntrinsicClassAttributes<FlatList<Vehicle>> & Readonly<FlatListProps<Vehicle>>'
  node_modules/react-native/Libraries/Lists/FlatList.d.ts:95:3
    95   keyExtractor?: ((item: ItemT, index: number) => string) | undefined;
         ~~~~~~~~~~~~
    The expected type comes from property 'keyExtractor' which is declared here on type 'IntrinsicAttributes & IntrinsicClassAttributes<FlatList<Vehicle>> & Readonly<FlatListProps<Vehicle>>'

screens/profile/ProfileScreen.tsx:41:30 - error TS2339: Property 'address' does not exist on type 'User'.

41         address: profileData.address || "",
                                ~~~~~~~

screens/profile/ProfileScreen.tsx:42:27 - error TS2339: Property 'city' does not exist on type 'User'.

42         city: profileData.city || "",
                             ~~~~

screens/profile/ProfileScreen.tsx:43:30 - error TS2339: Property 'country' does not exist on type 'User'.

43         country: profileData.country || "",
                                ~~~~~~~

screens/profile/ProfileScreen.tsx:48:35 - error TS2339: Property 'vehicle_type' does not exist on type 'User'.

48         vehicle_type: profileData.vehicle_type,
                                     ~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:49:36 - error TS2339: Property 'license_plate' does not exist on type 'User'.

49         license_plate: profileData.license_plate,
                                      ~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:50:36 - error TS2339: Property 'business_name' does not exist on type 'User'.

50         business_name: profileData.business_name,
                                      ~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:51:39 - error TS2339: Property 'business_address' does not exist on type 'User'.

51         business_address: profileData.business_address,
                                         ~~~~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:52:38 - error TS2339: Property 'profile_picture' does not exist on type 'User'.

52         profile_picture: profileData.profile_picture,
                                        ~~~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:64:25 - error TS2339: Property 'address' does not exist on type 'User'.

64           address: user.address || "",
                           ~~~~~~~

screens/profile/ProfileScreen.tsx:65:22 - error TS2339: Property 'city' does not exist on type 'User'.

65           city: user.city || "",
                        ~~~~

screens/profile/ProfileScreen.tsx:66:25 - error TS2339: Property 'country' does not exist on type 'User'.

66           country: user.country || "",
                           ~~~~~~~

screens/profile/ProfileScreen.tsx:70:30 - error TS2339: Property 'vehicle_type' does not exist on type 'User'.

70           vehicle_type: user.vehicle_type,
                                ~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:71:31 - error TS2339: Property 'license_plate' does not exist on type 'User'.

71           license_plate: user.license_plate,
                                 ~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:72:31 - error TS2339: Property 'business_name' does not exist on type 'User'.

72           business_name: user.business_name,
                                 ~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:73:34 - error TS2339: Property 'business_address' does not exist on type 'User'.

73           business_address: user.business_address,
                                    ~~~~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:74:33 - error TS2339: Property 'profile_picture' does not exist on type 'User'.

74           profile_picture: user.profile_picture,
                                   ~~~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:151:28 - error TS2353: Object literal may only specify known properties, and 'profile_picture' does not exist in type 'Partial<User>'.

151           updateUserData({ profile_picture: response.image_url })
                               ~~~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:189:53 - error TS2345: Argument of type 'Partial<UserProfile>' is not assignable to parameter of type 'Partial<User>'.
  Types of property 'role' are incompatible.
    Type 'string | undefined' is not assignable to type 'UserRole | undefined'.
      Type 'string' is not assignable to type 'UserRole | undefined'.

189         const updatedUser = await updateUserProfile(editedProfile)
                                                        ~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:193:32 - error TS2339: Property 'address' does not exist on type 'User'.

193           address: updatedUser.address || "",
                                   ~~~~~~~

screens/profile/ProfileScreen.tsx:194:29 - error TS2339: Property 'city' does not exist on type 'User'.

194           city: updatedUser.city || "",
                                ~~~~

screens/profile/ProfileScreen.tsx:195:32 - error TS2339: Property 'country' does not exist on type 'User'.

195           country: updatedUser.country || "",
                                   ~~~~~~~

screens/profile/ProfileScreen.tsx:200:37 - error TS2339: Property 'vehicle_type' does not exist on type 'User'.

200           vehicle_type: updatedUser.vehicle_type,
                                        ~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:201:38 - error TS2339: Property 'license_plate' does not exist on type 'User'.

201           license_plate: updatedUser.license_plate,
                                         ~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:202:38 - error TS2339: Property 'business_name' does not exist on type 'User'.

202           business_name: updatedUser.business_name,
                                         ~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:203:41 - error TS2339: Property 'business_address' does not exist on type 'User'.

203           business_address: updatedUser.business_address,
                                            ~~~~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:204:40 - error TS2339: Property 'profile_picture' does not exist on type 'User'.

204           profile_picture: updatedUser.profile_picture,
                                           ~~~~~~~~~~~~~~~

screens/profile/ProfileScreen.tsx:219:24 - error TS2345: Argument of type 'Partial<UserProfile>' is not assignable to parameter of type 'Partial<User>'.
  Types of property 'role' are incompatible.
    Type 'string | undefined' is not assignable to type 'UserRole | undefined'.
      Type 'string' is not assignable to type 'UserRole | undefined'.

219         updateUserData(editedProfile)
                           ~~~~~~~~~~~~~

services/DeliveryService.ts:441:26 - error TS2339: Property 'zone_id' does not exist on type '{ order_value: number; }'.

441       if (zoneId) params.zone_id = zoneId
                             ~~~~~~~

services/LocationService.ts:243:3 - error TS2393: Duplicate function implementation.

243   calculateDistance(
      ~~~~~~~~~~~~~~~~~

services/LocationService.ts:552:11 - error TS2393: Duplicate function implementation.

552   private calculateDistance(from: LocationCoords, to: LocationCoords): number {
              ~~~~~~~~~~~~~~~~~

services/PromotionService.ts:46:26 - error TS2339: Property 'zone_id' does not exist on type '{ order_value: number; }'.

46       if (zoneId) params.zone_id = zoneId
                            ~~~~~~~

types/navigation.ts:94:3 - error TS2344: Type '"CollaborativeDeliveries"' does not satisfy the constraint 'keyof RootStackParamList'.

94   "CollaborativeDeliveries"
     ~~~~~~~~~~~~~~~~~~~~~~~~~

types/navigation.ts:96:99 - error TS2344: Type '"CollaborativeChat"' does not satisfy the constraint 'keyof RootStackParamList'.

96 export type CollaborativeChatScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, "CollaborativeChat">
                                                                                                     ~~~~~~~~~~~~~~~~~~~

types/navigation.ts:97:94 - error TS2344: Type '"Gamification"' does not satisfy the constraint 'keyof RootStackParamList'.

97 export type GamificationScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, "Gamification">
                                                                                                ~~~~~~~~~~~~~~

types/navigation.ts:98:97 - error TS2344: Type '"CommunityWallet"' does not satisfy the constraint 'keyof RootStackParamList'.

98 export type CommunityWalletScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, "CommunityWallet">
                                                                                                   ~~~~~~~~~~~~~~~~~

types/navigation.ts:103:98 - error TS2344: Type '"LanguageSettings"' does not satisfy the constraint 'keyof RootStackParamList'.

103 export type LanguageSettingsScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, "LanguageSettings">
                                                                                                     ~~~~~~~~~~~~~~~~~~

types/navigation.ts:104:86 - error TS2344: Type '"Main"' does not satisfy the constraint 'keyof RootStackParamList'.

104 export type MainScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, "Main">
                                                                                         ~~~~~~

types/navigation.ts:112:92 - error TS2344: Type '"WebPayment"' does not satisfy the constraint 'keyof RootStackParamList'.

112 export type WebPaymentScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, "WebPayment">
                                                                                               ~~~~~~~~~~~~

types/navigation.ts:113:86 - error TS2344: Type '"Cart"' does not satisfy the constraint 'keyof RootStackParamList'.

113 export type CartScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, "Cart">
                                                                                         ~~~~~~

types/navigation.ts:117:3 - error TS2344: Type '"NotificationSettings"' does not satisfy the constraint 'keyof RootStackParamList'.

117   "NotificationSettings"
      ~~~~~~~~~~~~~~~~~~~~~~

types/navigation.ts:119:98 - error TS2344: Type '"SecuritySettings"' does not satisfy the constraint 'keyof RootStackParamList'.

119 export type SecuritySettingsScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, "SecuritySettings">
                                                                                                     ~~~~~~~~~~~~~~~~~~

types/navigation.ts:120:96 - error TS2344: Type '"ChangePassword"' does not satisfy the constraint 'keyof RootStackParamList'.

120 export type ChangePasswordScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, "ChangePassword">
                                                                                                   ~~~~~~~~~~~~~~~~

types/navigation.ts:121:99 - error TS2344: Type '"SecurityQuestions"' does not satisfy the constraint 'keyof RootStackParamList'.

121 export type SecurityQuestionsScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, "SecurityQuestions">
                                                                                                      ~~~~~~~~~~~~~~~~~~~

types/navigation.ts:124:3 - error TS2344: Type '"StorageManagementScreen"' does not satisfy the constraint 'keyof RootStackParamList'.

124   "StorageManagementScreen"
      ~~~~~~~~~~~~~~~~~~~~~~~~~

types/navigation.ts:128:3 - error TS2344: Type '"AutoSyncSettingsScreen"' does not satisfy the constraint 'keyof RootStackParamList'.

128   "AutoSyncSettingsScreen"
      ~~~~~~~~~~~~~~~~~~~~~~~~

types/navigation.ts:132:3 - error TS2344: Type '"DataUsageSettingsScreen"' does not satisfy the constraint 'keyof RootStackParamList'.

132   "DataUsageSettingsScreen"
      ~~~~~~~~~~~~~~~~~~~~~~~~~

types/navigation.ts:134:89 - error TS2344: Type '"WeatherScreen"' does not satisfy the constraint 'keyof RootStackParamList'.

134 export type WeatherScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, "WeatherScreen">
                                                                                            ~~~~~~~~~~~~~~~


Found 464 errors in 64 files.

Errors  Files
    11  App.tsx:201
     3  __tests__/components/StarRating.test.tsx:7
    12  __tests__/components/VoiceAssistant.test.tsx:4
    15  __tests__/contexts/NetworkContext.test.tsx:8
     3  components/AddressAutocomplete.tsx:27
     1  components/FeatherIcon.tsx:305
     1  components/VTCStyleMap.tsx:442
     1  components/WeatherAlertModal.tsx:77
     3  contexts/NotificationContext.tsx:59
    32  hooks/useDelivery.ts:15
     2  hooks/useUser.ts:330
    18  navigation/AppNavigator.tsx:38
     2  screens/NotificationSettingsScreen.tsx:37
     6  screens/NotificationsScreen.tsx:61
     3  screens/OfflineManagerScreen.tsx:253
     1  screens/OnboardingScreen.tsx:25
     6  screens/SettingsScreen.tsx:58
     1  screens/SupportScreen.tsx:103
    53  screens/VoiceAssistantScreen.tsx:178
     3  screens/auth/OTPLoginScreen.tsx:145
     1  screens/auth/VerifyOTPScreen.tsx:108
    19  screens/client/ActiveOrderTrackingScreen.tsx:20
     2  screens/client/AddFundsScreen.tsx:100
     4  screens/client/ComplaintsScreen.tsx:12
    19  screens/client/CreateDeliveryScreen.tsx:183
    13  screens/client/DeliveryDetailsScreen.tsx:1
     2  screens/client/DeliveryHistoryScreen.tsx:19
     4  screens/client/EnhancedRateDeliveryScreen.tsx:24
     7  screens/client/EnhancedTrackDeliveryScreen.tsx:77
     8  screens/client/HomeScreen.tsx:42
     5  screens/client/KYCVerificationScreen.tsx:79
     7  screens/client/MarketplaceScreen.tsx:30
    10  screens/client/MerchantDetailsScreen.tsx:33
    14  screens/client/NotificationsScreen.tsx:19
    16  screens/client/OrdersScreen.tsx:19
     2  screens/client/PaymentScreen.tsx:65
     5  screens/client/RateDeliveryScreen.tsx:16
     2  screens/client/RecommendedDeliveriesScreen.tsx:79
    14  screens/client/TrackDeliveryScreen.tsx:72
     2  screens/client/TransactionHistoryScreen.tsx:143
     3  screens/client/UserPreferencesScreen.fixed.tsx:265
     3  screens/client/UserPreferencesScreen.tsx:264
     2  screens/client/WalletScreen.tsx:172
     1  screens/courier/AddVehicleScreen.tsx:53
     3  screens/courier/BidScreen.tsx:21
     3  screens/courier/CollaborativeDeliveriesScreen.tsx:61
     1  screens/courier/CollaborativeDeliveryDetailsScreen.tsx:7
     4  screens/courier/CourierDashboardScreen.tsx:139
     2  screens/courier/CourierDeliveryHistoryScreen.tsx:78
     3  screens/courier/CourierProfileScreen.tsx:62
     4  screens/courier/CourierStatusScreen.tsx:52
     6  screens/courier/CourierTrackDeliveryScreen.tsx:140
     7  screens/courier/CourierWalletScreen.tsx:75
     8  screens/courier/DeliveryDetailsScreen.tsx:86
     1  screens/courier/DeliveryHistoryScreen.tsx:184
     4  screens/courier/ExpressDeliveriesScreen.tsx:63
    14  screens/courier/GamificationScreen.tsx:105
     7  screens/courier/HomeScreen.tsx:96
     8  screens/courier/VehicleManagementScreen.tsx:22
    27  screens/profile/ProfileScreen.tsx:41
     1  services/DeliveryService.ts:441
     2  services/LocationService.ts:243
     1  services/PromotionService.ts:46
    16  types/navigation.ts:94